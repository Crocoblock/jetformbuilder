"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["editor_form-actions_mailchimp_render_js"],{

/***/ "./editor/form-actions/mailchimp/render.js":
/*!*************************************************!*\
  !*** ./editor/form-actions/mailchimp/render.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar _JetFBActions = JetFBActions,\n  addAction = _JetFBActions.addAction,\n  globalTab = _JetFBActions.globalTab;\n\n/**\r\n * Internal dependencies\r\n */\nvar _wp$components = wp.components,\n  TextControl = _wp$components.TextControl,\n  CoreToggleControl = _wp$components.ToggleControl,\n  SelectControl = _wp$components.SelectControl,\n  CheckboxControl = _wp$components.CheckboxControl,\n  BaseControl = _wp$components.BaseControl,\n  Button = _wp$components.Button;\nvar _JetFBComponents = JetFBComponents,\n  ActionFieldsMap = _JetFBComponents.ActionFieldsMap,\n  WrapperRequiredControl = _JetFBComponents.WrapperRequiredControl,\n  ValidateButtonWithStore = _JetFBComponents.ValidateButtonWithStore,\n  ToggleControl = _JetFBComponents.ToggleControl;\nvar _JetFBActions2 = JetFBActions,\n  convertObjectToOptionsList = _JetFBActions2.convertObjectToOptionsList,\n  getFormFieldsBlocks = _JetFBActions2.getFormFieldsBlocks;\nvar __ = wp.i18n.__;\nvar _JetFBHooks = JetFBHooks,\n  withRequestFields = _JetFBHooks.withRequestFields,\n  withSelectActionLoading = _JetFBHooks.withSelectActionLoading;\nvar _wp$data = wp.data,\n  withSelect = _wp$data.withSelect,\n  withDispatch = _wp$data.withDispatch;\nvar compose = wp.compose.compose;\nvar _wp$element = wp.element,\n  useState = _wp$element.useState,\n  useEffect = _wp$element.useEffect;\nfunction MailChimpRender(props) {\n  var settings = props.settings,\n    label = props.label,\n    help = props.help,\n    _props$requestFields = props.requestFields,\n    requestFields = _props$requestFields === void 0 ? [] : _props$requestFields,\n    onChangeSettingObj = props.onChangeSettingObj,\n    getMapField = props.getMapField,\n    setMapField = props.setMapField,\n    source = props.source,\n    loadingState = props.loadingState;\n  var currentTab = globalTab({\n    slug: 'mailchimp-tab'\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    formFieldsList = _useState2[0],\n    setFormFields = _useState2[1];\n  useEffect(function () {\n    setFormFields([].concat(_toConsumableArray(getFormFieldsBlocks([], '--')), _toConsumableArray(requestFields)));\n  }, []);\n  var getFields = function getFields() {\n    var _ref = loadingState.response || {},\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data;\n    if (settings.list_id && data !== null && data !== void 0 && data.fields[settings.list_id]) {\n      return Object.entries(data.fields[settings.list_id]);\n    }\n    return [];\n  };\n  var getLists = function getLists() {\n    var _ref2 = loadingState.response || {},\n      _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? {} : _ref2$data;\n    if (data.lists) {\n      return convertObjectToOptionsList(data.lists);\n    }\n    return [];\n  };\n  var getGroups = function getGroups() {\n    var _ref3 = loadingState.response || {},\n      _ref3$data = _ref3.data,\n      data = _ref3$data === void 0 ? {} : _ref3$data;\n    if (data.groups) {\n      return data.groups[settings.list_id];\n    }\n    return [];\n  };\n  var isCheckedGroup = function isCheckedGroup(value) {\n    return value && settings.groups_ids && settings.groups_ids[value] ? settings.groups_ids[value] : false;\n  };\n  var getApiKey = function getApiKey() {\n    return settings.use_global ? currentTab.api_key : settings.api_key;\n  };\n\n  /* eslint-disable jsx-a11y/no-onchange */\n  return wp.element.createElement(\"div\", {\n    key: \"mailchimp\"\n  }, wp.element.createElement(ToggleControl, {\n    checked: settings.use_global,\n    onChange: function onChange(val) {\n      onChangeSettingObj({\n        use_global: Boolean(val)\n      });\n    }\n  }, __('Use', 'jet-form-builder') + ' ', wp.element.createElement(\"a\", {\n    href: JetFormEditorData.global_settings_url + '#mailchimp-tab'\n  }, __('Global Settings', 'jet-form-builder'))), wp.element.createElement(BaseControl, {\n    key: 'mailchimp_key_inputs',\n    label: label('api_key')\n  }, wp.element.createElement(\"div\", {\n    className: \"jet-control-clear-full jet-d-flex-between\"\n  }, wp.element.createElement(TextControl, {\n    key: \"api_key\",\n    disabled: settings.use_global,\n    value: getApiKey(),\n    onChange: function onChange(api_key) {\n      return onChangeSettingObj({\n        api_key: api_key\n      });\n    }\n  }), wp.element.createElement(ValidateButtonWithStore, {\n    initialLabel: label('validate_api_key'),\n    label: label('retry_request'),\n    ajaxArgs: {\n      action: source.action,\n      api_key: getApiKey()\n    }\n  }))), wp.element.createElement(\"div\", null), wp.element.createElement(\"div\", {\n    className: \"jfb-margin-bottom--small\"\n  }, help('api_key_link_prefix'), \" \", wp.element.createElement(\"a\", {\n    href: help('api_key_link')\n  }, help('api_key_link_suffix'))), loadingState.success && wp.element.createElement(React.Fragment, null, wp.element.createElement(SelectControl, {\n    label: label('list_id'),\n    key: \"list_id\",\n    labelPosition: \"side\",\n    value: settings.list_id,\n    onChange: function onChange(list_id) {\n      return onChangeSettingObj({\n        list_id: list_id\n      });\n    },\n    options: getLists()\n  }), Boolean(settings.list_id) && wp.element.createElement(React.Fragment, null, wp.element.createElement(BaseControl, {\n    label: label('groups_ids')\n  }, wp.element.createElement(\"div\", {\n    className: \"jet-user-fields-map__list\"\n  }, getGroups().map(function (group) {\n    return wp.element.createElement(CheckboxControl, {\n      key: \"groups_ids_\".concat(group.value),\n      checked: isCheckedGroup(group.value),\n      label: group.label,\n      onChange: function onChange(active) {\n        return onChangeSettingObj({\n          groups_ids: _objectSpread(_objectSpread({}, (settings === null || settings === void 0 ? void 0 : settings.groups_ids) || {}), {}, _defineProperty({}, group.value, active))\n        });\n      }\n    });\n  }))), wp.element.createElement(TextControl, {\n    key: \"mailchimp_tags\",\n    value: settings.tags,\n    label: label('tags'),\n    help: help('tags'),\n    onChange: function onChange(tags) {\n      return onChangeSettingObj({\n        tags: tags\n      });\n    }\n  }), wp.element.createElement(CoreToggleControl, {\n    key: 'double_opt_in',\n    label: label('double_opt_in'),\n    checked: settings.double_opt_in,\n    onChange: function onChange(double_opt_in) {\n      return onChangeSettingObj({\n        double_opt_in: Boolean(double_opt_in)\n      });\n    }\n  }), wp.element.createElement(ActionFieldsMap, {\n    label: label('fields_map'),\n    key: \"mailchimp\",\n    fields: getFields()\n  }, function (_ref4) {\n    var fieldId = _ref4.fieldId,\n      fieldData = _ref4.fieldData,\n      index = _ref4.index;\n    return wp.element.createElement(WrapperRequiredControl, {\n      field: [fieldId, fieldData]\n    }, wp.element.createElement(SelectControl, {\n      className: \"full-width\",\n      key: fieldId + index,\n      value: getMapField({\n        name: fieldId\n      }),\n      onChange: function onChange(value) {\n        return setMapField({\n          nameField: fieldId,\n          value: value\n        });\n      },\n      options: formFieldsList\n    }));\n  }))));\n  /* eslint-enable jsx-a11y/no-onchange */\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (compose(withSelect(withRequestFields), withSelect(withSelectActionLoading))(MailChimpRender));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./editor/form-actions/mailchimp/render.js\n");

/***/ })

}]);