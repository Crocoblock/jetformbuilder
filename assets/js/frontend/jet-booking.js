/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./frontend/compatibility/jet-booking.js":
/*!***********************************************!*\
  !*** ./frontend/compatibility/jet-booking.js ***!
  \***********************************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar _JetFormBuilderAbstra = JetFormBuilderAbstract,\n    InputData = _JetFormBuilderAbstra.InputData,\n    BaseSignal = _JetFormBuilderAbstra.BaseSignal;\nvar _JetPlugins$hooks = JetPlugins.hooks,\n    addAction = _JetPlugins$hooks.addAction,\n    addFilter = _JetPlugins$hooks.addFilter;\n\nfunction CheckOutInput() {\n  InputData.call(this);\n\n  this.isSupported = function (node) {\n    return 'checkin-checkout' === node.dataset.field;\n  };\n\n  this.addListeners = function () {\n    var _this = this;\n\n    var _this$nodes = _slicedToArray(this.nodes, 1),\n        node = _this$nodes[0];\n\n    jQuery(node).on('change.JetFormBuilderMain', function () {\n      _this.value.current = node.value;\n    });\n    var inputs = node.parentElement.querySelectorAll('.jet-abaf-field__input');\n\n    var _iterator = _createForOfIteratorHelper(inputs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var input = _step.value;\n        input.addEventListener('blur', function () {\n          return _this.reportOnBlur();\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  /**\r\n   * @link https://github.com/Crocoblock/issues-tracker/issues/1562\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  this.checkIsRequired = function () {\n    var _this$nodes2 = _slicedToArray(this.nodes, 1),\n        node = _this$nodes2[0];\n\n    if (node.required) {\n      return true;\n    }\n\n    return !!node.parentElement.querySelector('.jet-abaf-field__input[required]');\n  };\n\n  this.onClear = function () {\n    this.silenceSet('');\n  };\n}\n\nfunction CheckOutSignal() {\n  BaseSignal.call(this);\n\n  this.isSupported = function (node, input) {\n    return input instanceof CheckOutInput;\n  };\n\n  this.runSignal = function () {};\n}\n\nCheckOutInput.prototype = Object.create(InputData.prototype);\nCheckOutSignal.prototype = Object.create(BaseSignal.prototype);\naddAction('jet.fb.observe.before', 'jet-form-builder/booking-compatibility',\n/**\r\n * @param observable {Observable}\r\n */\nfunction (observable) {\n  var rootNode = observable.rootNode;\n\n  var _iterator2 = _createForOfIteratorHelper(rootNode.querySelectorAll('.field-type-check-in-out')),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var checkOutWrapper = _step2.value;\n      var input = checkOutWrapper.querySelector('input[data-field=\"checkin-checkout\"]');\n\n      if (!input) {\n        continue;\n      }\n\n      input.dataset.jfbSync = 1;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n});\naddFilter('jet.fb.inputs', 'jet-form-builder/booking-compatibility', function (inputs) {\n  inputs = [CheckOutInput].concat(_toConsumableArray(inputs));\n  return inputs;\n});\naddFilter('jet.fb.signals', 'jet-form-builder/booking-compatibility', function (signals) {\n  signals = [CheckOutSignal].concat(_toConsumableArray(signals));\n  return signals;\n});\nvar relatedCheckOut = [];\naddFilter('jet.fb.onCalculate.part', 'jet-form-builder/booking-compatibility',\n/**\r\n * @param macroPart\r\n * @param formula {CalculatedFormula}\r\n * @return {*}\r\n */\nfunction (macroPart, formula) {\n  var matches = macroPart.match(/ADVANCED_PRICE::([\\w\\-]+)/);\n\n  if (!(matches !== null && matches !== void 0 && matches.length) || !(formula !== null && formula !== void 0 && formula.input)) {\n    return macroPart;\n  }\n\n  var _matches = _slicedToArray(matches, 2),\n      fieldName = _matches[1];\n\n  var checkoutField = formula.input.root.getInput(fieldName);\n\n  if (!checkoutField) {\n    return 0;\n  }\n\n  var formId = formula.input.getSubmit().getFormId();\n\n  if (!relatedCheckOut.includes(formId + checkoutField.name)) {\n    relatedCheckOut.push(formId + checkoutField.name);\n    checkoutField.watch(function () {\n      return formula.setResult();\n    });\n  }\n\n  return macroPart;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./frontend/compatibility/jet-booking.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./frontend/compatibility/jet-booking.js"]();
/******/ 	
/******/ })()
;