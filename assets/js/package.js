(()=>{var __webpack_modules__={6044:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n;// CONCATENATED MODULE: ./package/context/action.fields.map.context.js\nvar createContext = wp.element.createContext;\n/* harmony default export */ const action_fields_map_context = (createContext({\n  name: \'\',\n  data: {},\n  index: 0\n}));\n;// CONCATENATED MODULE: ./package/components/action-fields-map.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar BaseControl = wp.components.BaseControl;\nfunction ActionFieldsMap(_ref) {\n  var _ref$fields = _ref.fields,\n      fields = _ref$fields === void 0 ? [] : _ref$fields,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'[Empty label]\' : _ref$label,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$plainHelp = _ref.plainHelp,\n      plainHelp = _ref$plainHelp === void 0 ? \'\' : _ref$plainHelp,\n      _ref$customHelp = _ref.customHelp,\n      customHelp = _ref$customHelp === void 0 ? false : _ref$customHelp;\n  return wp.element.createElement(BaseControl, {\n    label: label,\n    key: "jet_fields_map"\n  }, wp.element.createElement("div", {\n    className: "jet-user-fields-map__list"\n  }, customHelp && \'function\' === typeof customHelp && customHelp(), Boolean(plainHelp.length) && wp.element.createElement("span", {\n    className: \'description-controls\'\n  }, plainHelp), fields.map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        fieldId = _ref3[0],\n        fieldData = _ref3[1];\n\n    return wp.element.createElement(React.Fragment, {\n      key: "field_in_map_".concat(fieldId + index)\n    }, wp.element.createElement(action_fields_map_context.Provider, {\n      value: {\n        name: fieldId,\n        data: fieldData,\n        index: index\n      }\n    }, \'function\' === typeof children ? children({\n      fieldId: fieldId,\n      fieldData: fieldData,\n      index: index\n    }) : children));\n  })));\n}\n;\n;// CONCATENATED MODULE: ./package/context/action.modal.js\nvar action_modal_createContext = wp.element.createContext;\n/* harmony default export */ const action_modal = (action_modal_createContext({\n  actionClick: null,\n  onRequestClose: function onRequestClose() {}\n}));\n;// CONCATENATED MODULE: ./package/components/action-modal.js\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction action_modal_slicedToArray(arr, i) { return action_modal_arrayWithHoles(arr) || action_modal_iterableToArrayLimit(arr, i) || action_modal_unsupportedIterableToArray(arr, i) || action_modal_nonIterableRest(); }\n\nfunction action_modal_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_modal_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_modal_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || action_modal_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_modal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_modal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_modal_arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return action_modal_arrayLikeToArray(arr); }\n\nfunction action_modal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar _wp$components = wp.components,\n    Button = _wp$components.Button,\n    ButtonGroup = _wp$components.ButtonGroup,\n    Modal = _wp$components.Modal;\nvar _wp$element = wp.element,\n    useState = _wp$element.useState,\n    useEffect = _wp$element.useEffect;\n\nfunction ActionModal(_ref) {\n  var onRequestClose = _ref.onRequestClose,\n      children = _ref.children,\n      title = _ref.title,\n      _ref$classNames = _ref.classNames,\n      classNames = _ref$classNames === void 0 ? [] : _ref$classNames,\n      onUpdateClick = _ref.onUpdateClick,\n      onCancelClick = _ref.onCancelClick,\n      _ref$updateBtnLabel = _ref.updateBtnLabel,\n      updateBtnLabel = _ref$updateBtnLabel === void 0 ? \'Update\' : _ref$updateBtnLabel,\n      _ref$updateBtnProps = _ref.updateBtnProps,\n      updateBtnProps = _ref$updateBtnProps === void 0 ? {} : _ref$updateBtnProps,\n      _ref$cancelBtnProps = _ref.cancelBtnProps,\n      cancelBtnProps = _ref$cancelBtnProps === void 0 ? {} : _ref$cancelBtnProps,\n      _ref$cancelBtnLabel = _ref.cancelBtnLabel,\n      cancelBtnLabel = _ref$cancelBtnLabel === void 0 ? \'Cancel\' : _ref$cancelBtnLabel,\n      _ref$fixedHeight = _ref.fixedHeight,\n      fixedHeight = _ref$fixedHeight === void 0 ? \'\' : _ref$fixedHeight;\n  var modalClasses = [\'jet-form-edit-modal\'].concat(_toConsumableArray(classNames));\n\n  var _useState = useState(null),\n      _useState2 = action_modal_slicedToArray(_useState, 2),\n      actionClick = _useState2[0],\n      setActionClick = _useState2[1];\n\n  var updateClick = function updateClick() {\n    if (onUpdateClick) {\n      onUpdateClick();\n    }\n\n    setActionClick(true);\n  };\n\n  var cancelClick = function cancelClick() {\n    if (onCancelClick) {\n      onCancelClick();\n    }\n\n    setActionClick(false);\n  };\n\n  var style = {};\n\n  if (fixedHeight) {\n    style = {\n      height: fixedHeight\n    };\n    modalClasses.push(\'jet-modal-fixed-height\');\n  }\n\n  return wp.element.createElement(Modal, {\n    onRequestClose: onRequestClose,\n    className: modalClasses.join(\' \'),\n    title: title,\n    style: style\n  }, !children && wp.element.createElement("div", {\n    className: "jet-form-edit-modal__content"\n  }, \'Action callback is not found.\'), children && wp.element.createElement(React.Fragment, null, wp.element.createElement("div", {\n    className: "jet-form-edit-modal__wrapper"\n  }, wp.element.createElement(action_modal.Provider, {\n    value: {\n      actionClick: actionClick,\n      onRequestClose: onRequestClose\n    }\n  }, wp.element.createElement("div", {\n    className: "jet-form-edit-modal__content"\n  }, \'function\' === typeof children && children({\n    actionClick: actionClick,\n    onRequestClose: onRequestClose\n  }), \'function\' !== typeof children && children))), wp.element.createElement(ButtonGroup, {\n    className: "jet-form-edit-modal__actions"\n  }, wp.element.createElement(Button, _extends({\n    isPrimary: true,\n    onClick: updateClick\n  }, updateBtnProps), updateBtnLabel), wp.element.createElement(Button, _extends({\n    isSecondary: true,\n    style: {\n      margin: \'0 0 0 10px\'\n    },\n    onClick: cancelClick\n  }, cancelBtnProps), cancelBtnLabel))));\n}\n\n/* harmony default export */ const components_action_modal = (ActionModal);\n;// CONCATENATED MODULE: ./package/components/wrapper-required-control.js\nfunction wrapper_required_control_slicedToArray(arr, i) { return wrapper_required_control_arrayWithHoles(arr) || wrapper_required_control_iterableToArrayLimit(arr, i) || wrapper_required_control_unsupportedIterableToArray(arr, i) || wrapper_required_control_nonIterableRest(); }\n\nfunction wrapper_required_control_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction wrapper_required_control_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return wrapper_required_control_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return wrapper_required_control_arrayLikeToArray(o, minLen); }\n\nfunction wrapper_required_control_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction wrapper_required_control_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction wrapper_required_control_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar wrapper_required_control_wp$element = wp.element,\n    RawHTML = wrapper_required_control_wp$element.RawHTML,\n    useContext = wrapper_required_control_wp$element.useContext;\nfunction WrapperRequiredControl(_ref) {\n  var children = _ref.children,\n      _ref$labelKey = _ref.labelKey,\n      labelKey = _ref$labelKey === void 0 ? \'label\' : _ref$labelKey,\n      _ref$requiredKey = _ref.requiredKey,\n      requiredKey = _ref$requiredKey === void 0 ? \'required\' : _ref$requiredKey,\n      _ref$helpKey = _ref.helpKey,\n      helpKey = _ref$helpKey === void 0 ? \'help\' : _ref$helpKey,\n      _ref$field = _ref.field,\n      field = _ref$field === void 0 ? [] : _ref$field;\n\n  var _useContext = useContext(action_fields_map_context),\n      name = _useContext.name,\n      data = _useContext.data;\n\n  if (field.length) {\n    var _field = wrapper_required_control_slicedToArray(field, 2);\n\n    name = _field[0];\n    data = _field[1];\n  }\n\n  return wp.element.createElement("div", {\n    className: "jet-user-meta__row",\n    key: \'user_meta_\' + name\n  }, wp.element.createElement("div", {\n    className: "jet-field-map__row-label"\n  }, wp.element.createElement("span", {\n    className: \'fields-map__label\'\n  }, data.hasOwnProperty(labelKey) && data[labelKey] && data[labelKey], !data.hasOwnProperty(labelKey) && data), data.hasOwnProperty(requiredKey) && data[requiredKey] && wp.element.createElement("span", {\n    className: \'fields-map__required\'\n  }, " *"), data[helpKey] && wp.element.createElement("p", {\n    className: \'components-base-control__help\',\n    style: {\n      color: \'rgb(117, 117, 117)\',\n      margin: \'1em 0 0 0\'\n    }\n  }, wp.element.createElement(RawHTML, null, data[helpKey]))), children);\n}\n;// CONCATENATED MODULE: ./package/components/request-button.js\nvar __ = wp.i18n.__;\nvar request_button_Button = wp.components.Button;\nvar request_button_useEffect = wp.element.useEffect;\n\nfunction RequestButton(_ref) {\n  var label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onSuccessRequest = _ref.onSuccessRequest,\n      onSuccessRequest = _ref$onSuccessRequest === void 0 ? function () {} : _ref$onSuccessRequest,\n      _ref$onFailRequest = _ref.onFailRequest,\n      onFailRequest = _ref$onFailRequest === void 0 ? function () {} : _ref$onFailRequest,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \'\' : _ref$className,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? function () {} : _ref$children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$customRequest = _ref.customRequest,\n      customRequest = _ref$customRequest === void 0 ? false : _ref$customRequest,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden,\n      _ref$hasFetched = _ref.hasFetched,\n      hasFetched = _ref$hasFetched === void 0 ? -1 : _ref$hasFetched;\n\n  var defaultRequest = function defaultRequest() {\n    onLoading();\n    jQuery.ajax({\n      url: ajaxurl,\n      type: \'POST\',\n      data: ajaxArgs\n    }).done(function (response) {\n      return response.success ? onSuccessRequest(response) : onFailRequest();\n    }).fail(function () {\n      return onFailRequest();\n    });\n  };\n\n  var request = function request() {\n    if (false === customRequest) {\n      defaultRequest();\n    } else if (\'function\' === typeof customRequest) {\n      customRequest();\n    } else {\n      onFailRequest();\n    }\n  };\n\n  request_button_useEffect(function () {\n    if (isHidden && -1 === hasFetched) {\n      request();\n    }\n  }, []);\n\n  if (isHidden) {\n    return null;\n  }\n\n  return wp.element.createElement(request_button_Button, {\n    disabled: disabled,\n    key: \'validate_api_key\',\n    isPrimary: true,\n    onClick: request,\n    className: className\n  }, children && children, label);\n}\n\n/* harmony default export */ const request_button = (RequestButton);\n;// CONCATENATED MODULE: ./package/helpers/gateways/gateway-action-attrubites.js\n\n\nfunction gatewayActionAttributes(action) {\n  var _fromLocalizeHelper = fromLocalizeHelper(\'getLocalizedFullPack\')(action.type),\n      gatewayAttrs = _fromLocalizeHelper.gatewayAttrs,\n      label = _fromLocalizeHelper.label;\n\n  var actionSettings = getActionSettings(action.id);\n\n  var value = function value(attr) {\n    if (actionSettings[attr]) {\n      return actionSettings[attr];\n    }\n\n    if (actionSettings[action.type] && actionSettings[action.type][attr]) {\n      return actionSettings[action.type][attr];\n    }\n\n    return \'NULL\';\n  };\n\n  var labelWithAttrs = gatewayAttrs().map(function (attr) {\n    return "".concat(label(attr), " ").concat(value(attr));\n  });\n  return labelWithAttrs.join(\', \');\n}\n\n/* harmony default export */ const gateway_action_attrubites = (gatewayActionAttributes);\n;// CONCATENATED MODULE: ./package/helpers/actions/action-helper.js\nfunction action_helper_toConsumableArray(arr) { return action_helper_arrayWithoutHoles(arr) || action_helper_iterableToArray(arr) || action_helper_unsupportedIterableToArray(arr) || action_helper_nonIterableSpread(); }\n\nfunction action_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction action_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return action_helper_arrayLikeToArray(arr); }\n\nfunction action_helper_slicedToArray(arr, i) { return action_helper_arrayWithHoles(arr) || action_helper_iterableToArrayLimit(arr, i) || action_helper_unsupportedIterableToArray(arr, i) || action_helper_nonIterableRest(); }\n\nfunction action_helper_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_helper_arrayLikeToArray(o, minLen); }\n\nfunction action_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction action_helper_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_helper_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar getActionsByType = function getActionsByType(type) {\n  var _useActions = useActions(),\n      _useActions2 = action_helper_slicedToArray(_useActions, 1),\n      actions = _useActions2[0];\n\n  return actions.filter(function (action) {\n    return type === action.type;\n  });\n};\nvar fromLocalizeHelper = function fromLocalizeHelper(name) {\n  return name ? window.JetFBLocalizeHelper[name] : window.JetFBLocalizeHelper;\n};\nvar actionByTypeList = function actionByTypeList(actionType) {\n  var withDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return prepareActionsListByType(getActionsByType(actionType), actionType, withDesc);\n};\nvar prepareActionsListByType = function prepareActionsListByType(source, actionType) {\n  var withDesc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return source.filter(function (action) {\n    return actionType === action.type;\n  }).map(function (action) {\n    var newAction = {\n      value: action.id,\n      label: fromLocalizeHelper(\'getActionLabel\')(action.type)\n    };\n\n    if (withDesc) {\n      newAction.label += " (".concat(gateway_action_attrubites(action), ")");\n    }\n\n    return newAction;\n  });\n};\nvar getActionSettings = function getActionSettings(actionId) {\n  var _useActions3 = useActions(),\n      _useActions4 = action_helper_slicedToArray(_useActions3, 1),\n      actions = _useActions4[0];\n\n  var action = actions.find(function (action) {\n    return actionId === action.id;\n  });\n  return action && action.settings ? action.settings : false;\n};\nvar convertListToFieldsMap = function convertListToFieldsMap() {\n  var response = [];\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  for (var _i2 = 0, _sources = sources; _i2 < _sources.length; _i2++) {\n    var source = _sources[_i2];\n    response.push.apply(response, action_helper_toConsumableArray(source.map(function (item) {\n      var id = item.value;\n      return [id, item];\n    })));\n  }\n\n  return response;\n};\n;// CONCATENATED MODULE: ./package/helpers/settings/helper.js\nfunction globalTab(_ref) {\n  var slug = _ref.slug,\n      _ref$element = _ref.element,\n      element = _ref$element === void 0 ? \'\' : _ref$element,\n      _ref$empty = _ref.empty,\n      empty = _ref$empty === void 0 ? \'\' : _ref$empty;\n  var global = JetFormEditorData.global_settings;\n\n  if (!global) {\n    return empty;\n  }\n\n  if (element) {\n    return global[slug] && global[slug][element] ? global[slug][element] : empty;\n  }\n\n  return global[slug] || empty;\n}\n\n\n;// CONCATENATED MODULE: ./package/helpers/gateways/gateway-helper.js\nvar gatewayAttr = function gatewayAttr() {\n  var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var isEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  var data = window.JetFormEditorData.gateways;\n\n  if (!attr) {\n    return data;\n  }\n\n  if (!data[attr]) {\n    return false;\n  }\n\n  var source = data[attr];\n  return function (name) {\n    return source[name] ? source[name] : isEmpty;\n  };\n};\nvar gatewayLabel = function gatewayLabel(type) {\n  var isEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  var label = gatewayAttr(\'labels\');\n  return function (attr) {\n    return label(type) ? label(type)[attr] : isEmpty;\n  };\n};\nvar registerGateway = function registerGateway(id, callback) {\n  var forWhat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n  window.JetFBGatewaysList = window.JetFBGatewaysList || {};\n  window.JetFBGatewaysList[id] = window.JetFBGatewaysList[id] || {};\n  window.JetFBGatewaysList[id][forWhat] = callback;\n};\nvar issetRenderGateway = function issetRenderGateway(id) {\n  var what = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'cred\';\n  return window.JetFBGatewaysList && window.JetFBGatewaysList[id] && window.JetFBGatewaysList[id][what];\n};\nvar renderGateway = function renderGateway(id, props) {\n  var what = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n\n  if (!issetRenderGateway(id, what)) {\n    return null;\n  }\n\n  var GatewayComponent = window.JetFBGatewaysList[id][what];\n  return wp.element.createElement(GatewayComponent, props);\n};\nvar renderGatewayWithPlaceholder = function renderGatewayWithPlaceholder(id, props) {\n  var what = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n  var Placeholder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!issetRenderGateway(id, what)) {\n    return Placeholder;\n  }\n\n  props.Placeholder = Placeholder;\n  return renderGateway(id, props, what);\n};\n;// CONCATENATED MODULE: ./package/context/current.action.edit.js\nvar current_action_edit_createContext = wp.element.createContext;\n/* harmony default export */ const current_action_edit = (current_action_edit_createContext({}));\n;// CONCATENATED MODULE: ./package/helpers/blocks/blocks-helper.js\nfunction blocks_helper_toConsumableArray(arr) { return blocks_helper_arrayWithoutHoles(arr) || blocks_helper_iterableToArray(arr) || blocks_helper_unsupportedIterableToArray(arr) || blocks_helper_nonIterableSpread(); }\n\nfunction blocks_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blocks_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blocks_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blocks_helper_arrayLikeToArray(o, minLen); }\n\nfunction blocks_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction blocks_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return blocks_helper_arrayLikeToArray(arr); }\n\nfunction blocks_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar blocks_helper_ = wp.i18n.__;\nvar _wp$hooks = wp.hooks,\n    applyFilters = _wp$hooks.applyFilters,\n    addFilter = _wp$hooks.addFilter;\nvar blocks_helper_select = wp.data.select;\nvar blocksStore = wp.blocks.store;\n\nvar loopBlocks = function loopBlocks(current) {\n  var _select = blocks_helper_select(\'core/block-editor\'),\n      getBlock = _select.getBlock;\n\n  var _current = current,\n      innerBlocks = _current.innerBlocks;\n  current = _objectSpread(_objectSpread({}, current), getBlock(current.clientId));\n\n  if (innerBlocks !== null && innerBlocks !== void 0 && innerBlocks.length) {\n    current.innerBlocks = innerBlocks.map(loopBlocks);\n  }\n\n  return current;\n};\n\nvar getBlocks = function getBlocks() {\n  var _select2 = blocks_helper_select(\'core/block-editor\'),\n      getBlocks = _select2.getBlocks,\n      getTree = _select2.__unstableGetClientIdsTree;\n\n  if (\'function\' !== typeof getTree) {\n    return getBlocks();\n  }\n\n  return getTree().map(loopBlocks);\n};\n\nvar blocksRecursiveIterator = function blocksRecursiveIterator(blockParserFunc) {\n  var blocksRecursiveIterator = function blocksRecursiveIterator(blocks) {\n    blocks = blocks || getBlocks();\n    blocks.map(function (block) {\n      blockParserFunc(block);\n\n      if (block.innerBlocks.length) {\n        blocksRecursiveIterator(block.innerBlocks);\n      }\n    });\n  };\n\n  blocksRecursiveIterator();\n};\n\nvar getFormFieldsBlocks = function getFormFieldsBlocks() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var suppressFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \'default\';\n  var formFields = [];\n  var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'].concat(blocks_helper_toConsumableArray(exclude));\n  blocksRecursiveIterator(function (block) {\n    if (block.name.includes(\'jet-forms/\') && block.attributes.name && !skipFields.find(function (field) {\n      return block.name.includes(field);\n    })) {\n      /*const blockType = select( blocksStore ).getBlockType( block.name );*/\n      formFields.push({\n        blockName: block.name,\n        name: block.attributes.name,\n        label: block.attributes.label || block.attributes.name,\n        value: block.attributes.name //icon: blockType.icon.src,\n\n      });\n    }\n  });\n  formFields = placeholder ? [{\n    value: \'\',\n    label: placeholder\n  }].concat(blocks_helper_toConsumableArray(formFields)) : formFields;\n  return suppressFilter ? formFields : applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields, context);\n};\n\nvar getFieldsWithoutCurrent = function getFieldsWithoutCurrent() {\n  var placeholder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var suppressFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'default\';\n  var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'];\n  var formFields = [];\n  var current = wp.data.select(\'core/block-editor\').getSelectedBlock();\n\n  if (null === current) {\n    return [];\n  }\n\n  blocksRecursiveIterator(function (block) {\n    if (block.name.includes(\'jet-forms/\') && current.clientId !== block.clientId && !skipFields.find(function (field) {\n      return block.name.includes(field);\n    })) {\n      formFields.push({\n        blockName: block.name,\n        label: block.attributes.label || block.attributes.name,\n        value: block.attributes.name\n      });\n    }\n  });\n  formFields = placeholder ? [{\n    value: \'\',\n    label: placeholder\n  }].concat(blocks_helper_toConsumableArray(formFields)) : formFields;\n  return suppressFilter ? formFields : applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields, context);\n};\n\nvar getAvailableFields = function getAvailableFields() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'default\';\n  var fields = [];\n  var blocks = getFormFieldsBlocks(exclude, false, false, context);\n\n  if (blocks) {\n    blocks.forEach(function (item) {\n      return fields.push(item.name);\n    });\n  }\n\n  return fields;\n};\n\nvar getAvailableFieldsString = function getAvailableFieldsString(blockName) {\n  var fields = getAvailableFields([blockName]);\n  var fieldsString = [];\n  fields.forEach(function (item) {\n    fieldsString.push(\'%FIELD::\' + item + \'%\');\n  });\n  return blocks_helper_(\'Available fields: \', \'jet-form-builder\') + fieldsString.join(\', \');\n};\n\nvar getInnerBlocks = function getInnerBlocks(clientId) {\n  var block = wp.data.select(\'core/block-editor\').getBlock(clientId);\n  return block ? block.innerBlocks : [];\n};\n\nvar getFormFieldsByBlock = function getFormFieldsByBlock(blockExclude) {\n  return function () {\n    return getFormFieldsBlocks([blockExclude.name]);\n  };\n};\n\nvar getBlocksByName = function getBlocksByName(blockNames) {\n  var blocks = [];\n  blocksRecursiveIterator(function (block) {\n    if (!blockNames.includes(block.name)) {\n      return;\n    }\n\n    blocks.push(block);\n  });\n  return blocks;\n};\n\nvar appendField = function appendField(callback) {\n  var fieldNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  addFilter(\'jet.fb.register.fields\', \'jet-form-builder\', function (blocks) {\n    return blocks.map(function (block) {\n      if (fieldNames.length && !fieldNames.includes(block.name)) {\n        return block;\n      }\n\n      return callback(block);\n    });\n  });\n};\n\n\n;// CONCATENATED MODULE: ./package/helpers/hooks/hooks-helper.js\nfunction hooks_helper_toConsumableArray(arr) { return hooks_helper_arrayWithoutHoles(arr) || hooks_helper_iterableToArray(arr) || hooks_helper_unsupportedIterableToArray(arr) || hooks_helper_nonIterableSpread(); }\n\nfunction hooks_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction hooks_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction hooks_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return hooks_helper_arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = hooks_helper_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction hooks_helper_slicedToArray(arr, i) { return hooks_helper_arrayWithHoles(arr) || hooks_helper_iterableToArrayLimit(arr, i) || hooks_helper_unsupportedIterableToArray(arr, i) || hooks_helper_nonIterableRest(); }\n\nfunction hooks_helper_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction hooks_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return hooks_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return hooks_helper_arrayLikeToArray(o, minLen); }\n\nfunction hooks_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction hooks_helper_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction hooks_helper_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction hooks_helper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction hooks_helper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? hooks_helper_ownKeys(Object(source), !0).forEach(function (key) { hooks_helper_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : hooks_helper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction hooks_helper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar hooks_helper_wp$element = wp.element,\n    hooks_helper_useState = hooks_helper_wp$element.useState,\n    hooks_helper_useEffect = hooks_helper_wp$element.useEffect,\n    hooks_helper_useContext = hooks_helper_wp$element.useContext;\nvar _wp$data = wp.data,\n    useSelect = _wp$data.useSelect,\n    useDispatch = _wp$data.useDispatch;\nvar hooks_helper_applyFilters = wp.hooks.applyFilters;\nvar useMetaState = function useMetaState(key) {\n  var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'{}\';\n  var meta = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  });\n\n  var _useDispatch = useDispatch(\'core/editor\', [meta]),\n      editPost = _useDispatch.editPost;\n\n  var metaStateValue = JSON.parse(meta[key] || ifEmpty);\n\n  var setMetaStateValue = function setMetaStateValue(callable) {\n    var value;\n\n    if (\'function\' === typeof callable) {\n      value = callable(metaStateValue);\n    } else {\n      value = callable;\n    }\n\n    editPost({\n      meta: hooks_helper_objectSpread(hooks_helper_objectSpread({}, meta), {}, hooks_helper_defineProperty({}, key, JSON.stringify(value)))\n    });\n  };\n\n  return [metaStateValue, setMetaStateValue];\n};\nvar useActions = function useActions() {\n  return useMetaState(\'_jf_actions\');\n};\nvar initClasses = [\'jet-form-validate-button\'];\nvar useStateValidClasses = function useStateValidClasses(initialValid) {\n  var validClass = \'is-valid\';\n  var invalidClass = \'is-invalid\';\n\n  var initStateClasses = function initStateClasses() {\n    if (initialValid) {\n      return [].concat(initClasses, [validClass]);\n    } else if (!initialValid) {\n      return [].concat(initClasses, [invalidClass]);\n    }\n  };\n\n  var _useState = hooks_helper_useState(initStateClasses()),\n      _useState2 = hooks_helper_slicedToArray(_useState, 2),\n      classes = _useState2[0],\n      setClasses = _useState2[1];\n\n  var setValidClass = function setValidClass() {\n    setClasses([].concat(initClasses, [validClass]));\n  };\n\n  var setInvalidClass = function setInvalidClass() {\n    setClasses([].concat(initClasses, [invalidClass]));\n  };\n\n  var setLoadingClass = function setLoadingClass() {\n    setClasses([].concat(initClasses, [\'loading\']));\n  };\n\n  return [classes.join(\' \'), setValidClass, setInvalidClass, setLoadingClass];\n};\nvar useStateLoadingClasses = function useStateLoadingClasses() {\n  var _useState3 = hooks_helper_useState([].concat(initClasses)),\n      _useState4 = hooks_helper_slicedToArray(_useState3, 2),\n      classes = _useState4[0],\n      setClasses = _useState4[1];\n\n  var setLoadingClass = function setLoadingClass() {\n    setClasses([].concat(initClasses, [\'loading\']));\n  };\n\n  var clearLoadingClass = function clearLoadingClass() {\n    setClasses(initClasses);\n  };\n\n  return [classes.join(\' \'), setLoadingClass, clearLoadingClass];\n};\nvar useSuccessNotice = function useSuccessNotice(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useState5 = hooks_helper_useState(false),\n      _useState6 = hooks_helper_slicedToArray(_useState5, 2),\n      hasCopied = _useState6[0],\n      setHasCopied = _useState6[1];\n\n  var noticeStore = useDispatch(wp.notices.store);\n  hooks_helper_useEffect(function () {\n    if (hasCopied) {\n      noticeStore.createWarningNotice(text, hooks_helper_objectSpread({\n        type: \'snackbar\'\n      }, options));\n    }\n  }, [hasCopied]);\n  return setHasCopied;\n};\nvar withDispatchNotice = function withDispatchNotice(dispatch) {\n  return {\n    createNotice: function createNotice(status, text) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      dispatch(wp.notices.store).createNotice(status, text, hooks_helper_objectSpread({\n        type: \'default\',\n        status: \'info\'\n      }, options));\n    }\n  };\n};\nvar getRequestFields = function getRequestFields(actions) {\n  var requestFields = [];\n\n  var _iterator = _createForOfIteratorHelper(actions),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var action = _step.value;\n      var _action$settings$acti = action.settings[action.type],\n          current = _action$settings$acti === void 0 ? {} : _action$settings$acti;\n\n      if (!current.requestFields) {\n        continue;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(current.requestFields),\n          _step2;\n\n      try {\n        var _loop = function _loop() {\n          var requestField = _step2.value;\n          var index = requestFields.findIndex(function (field) {\n            return field.value === requestField.name;\n          });\n\n          if (-1 !== index) {\n            return "continue";\n          }\n\n          requestFields.push({\n            from: action.type,\n            id: action.id,\n            label: requestField.name,\n            value: requestField.name,\n            name: requestField.name,\n            help: requestField.help\n          });\n        };\n\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === "continue") continue;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return requestFields;\n};\nvar useRequestFields = function useRequestFields() {\n  var meta = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  }, []);\n  var actions = JSON.parse(meta._jf_actions || \'[]\');\n  var currentAction = useSelect(function (select) {\n    return select(\'jet-forms/actions\').getCurrentAction();\n  }, []);\n  actions.splice(currentAction.index);\n  return getRequestFields(actions);\n};\n\nvar selectPostMeta = function selectPostMeta(select) {\n  return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n};\n\nvar selectParsedPostMeta = function selectParsedPostMeta(select, name) {\n  var allMeta = selectPostMeta(select);\n  return JSON.parse(allMeta[name] || \'{}\');\n};\nvar useSelectPostMeta = function useSelectPostMeta(name) {\n  var allMeta = useSelect(function (select) {\n    return selectPostMeta(select);\n  });\n  return JSON.parse(allMeta[name] || \'{}\');\n};\nvar withCurrentAction = function withCurrentAction(select) {\n  var currentAction = select(\'jet-forms/actions\').getCurrentAction();\n  return {\n    currentAction: currentAction\n  };\n};\nvar withRequestFields = function withRequestFields(select) {\n  var meta = select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  var actions = JSON.parse(meta._jf_actions || \'[]\');\n  var currentAction = select(\'jet-forms/actions\').getCurrentAction();\n  actions.splice(currentAction.index);\n  return {\n    requestFields: getRequestFields(actions)\n  };\n};\nvar withSelectActionLoading = function withSelectActionLoading(select) {\n  var loadingState = select(\'jet-forms/actions\').getCurrentLoading();\n  return {\n    loadingState: loadingState\n  };\n};\nvar withDispatchActionLoading = function withDispatchActionLoading(dispatch) {\n  return {\n    setLoading: function setLoading(actionId) {\n      dispatch(\'jet-forms/actions\').setLoading({\n        actionId: actionId\n      });\n    },\n    setResultSuccess: function setResultSuccess(actionId, response) {\n      dispatch(\'jet-forms/actions\').setLoadingResult({\n        actionId: actionId,\n        success: true,\n        response: response\n      });\n    },\n    setResultFail: function setResultFail(actionId) {\n      dispatch(\'jet-forms/actions\').setLoadingResult({\n        actionId: actionId,\n        success: false,\n        response: {}\n      });\n    }\n  };\n};\nvar withDispatchMeta = function withDispatchMeta(metaSlug, callbackName) {\n  return function (dispatch, ownProps, _ref) {\n    var select = _ref.select;\n    var allMeta = selectPostMeta(select);\n\n    var _dispatch = dispatch(\'core/editor\'),\n        editPost = _dispatch.editPost;\n\n    var change = function change(newState) {\n      return editPost({\n        meta: hooks_helper_objectSpread(hooks_helper_objectSpread({}, allMeta), {}, hooks_helper_defineProperty({}, metaSlug, JSON.stringify(newState)))\n      });\n    };\n\n    return hooks_helper_defineProperty({}, callbackName, change);\n  };\n};\nvar withSelectMeta = function withSelectMeta(metaSlug) {\n  var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (select) {\n    var current = selectParsedPostMeta(select, metaSlug);\n    return hooks_helper_defineProperty({}, metaSlug, current !== null && current !== void 0 ? current : ifEmpty);\n  };\n};\nvar withSelectGateways = function withSelectGateways(select) {\n  var store = select(\'jet-forms/gateways\');\n  var gatewayRequestId = store.getCurrentRequestId();\n  var gatewaySpecific = store.getGatewaySpecific();\n  var scenario = store.getScenario();\n  var CURRENT_GATEWAY = store.getGatewayId();\n  var _scenario$id = scenario.id,\n      CURRENT_SCENARIO = _scenario$id === void 0 ? \'PAY_NOW\' : _scenario$id;\n  var _gatewaySpecific$use_ = gatewaySpecific.use_global,\n      use_global = _gatewaySpecific$use_ === void 0 ? false : _gatewaySpecific$use_;\n  var currentTab = globalTab({\n    slug: CURRENT_GATEWAY\n  });\n\n  var getSpecificOrGlobal = function getSpecificOrGlobal(key) {\n    var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return use_global ? currentTab[key] || ifEmpty : gatewaySpecific[key] || ifEmpty;\n  };\n\n  var callableGateway = gatewayAttr(\'additional\');\n  var additionalSourceGateway = callableGateway(CURRENT_GATEWAY);\n  var loadingGateway = select(\'jet-forms/actions\').getLoading(gatewayRequestId);\n  var globalGatewayLabel = gatewayAttr(\'labels\');\n  var specificGatewayLabel = gatewayLabel(CURRENT_GATEWAY);\n\n  var customGatewayLabel = function customGatewayLabel(key) {\n    return globalGatewayLabel("".concat(CURRENT_GATEWAY, ".").concat(key));\n  };\n\n  var scenarioLabel = function scenarioLabel(key) {\n    return customGatewayLabel("scenario.".concat(CURRENT_SCENARIO, ".").concat(key));\n  };\n\n  return {\n    gatewayGeneral: store.getGateway(),\n    gatewayRequest: store.getCurrentRequest(),\n    scenarioSource: additionalSourceGateway[CURRENT_SCENARIO] || {},\n    currentScenario: scenario[CURRENT_SCENARIO] || {},\n    CURRENT_SCENARIO: CURRENT_SCENARIO,\n    gatewayScenario: scenario,\n    additionalSourceGateway: additionalSourceGateway,\n    gatewaySpecific: gatewaySpecific,\n    gatewayRequestId: gatewayRequestId,\n    loadingGateway: loadingGateway,\n    getSpecificOrGlobal: getSpecificOrGlobal,\n    globalGatewayLabel: globalGatewayLabel,\n    specificGatewayLabel: specificGatewayLabel,\n    customGatewayLabel: customGatewayLabel,\n    scenarioLabel: scenarioLabel\n  };\n};\nvar withDispatchGateways = function withDispatchGateways(dispatch) {\n  var store = dispatch(\'jet-forms/gateways\');\n  return {\n    setGatewayRequest: store.setRequest,\n    setGatewayScenario: store.setScenario,\n    setScenario: store.setCurrentScenario,\n    setGateway: store.setGateway,\n    setGatewayInner: store.setGatewayInner,\n    setGatewaySpecific: store.setGatewaySpecific,\n    clearGateway: store.clearGateway,\n    clearScenario: store.clearScenario\n  };\n};\n\nvar getFormFields = function getFormFields(blockParserFunc, blocks) {\n  blocks.map(function (block) {\n    blockParserFunc(block);\n\n    if (block.innerBlocks.length) {\n      getFormFields(blockParserFunc, block.innerBlocks);\n    }\n  });\n};\n\nvar withSelectFormFields = function withSelectFormFields() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var suppressFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function (select) {\n    var formFields = [];\n    var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'].concat(hooks_helper_toConsumableArray(exclude));\n    getFormFields(function (block) {\n      if (block.name.includes(\'jet-forms/\') && block.attributes.name && !skipFields.find(function (field) {\n        return block.name.includes(field);\n      })) {\n        /*const blockType = select( blocksStore ).getBlockType( block.name );*/\n        formFields.push({\n          blockName: block.name,\n          name: block.attributes.name,\n          label: block.attributes.label || block.attributes.name,\n          value: block.attributes.name //icon: blockType.icon.src,\n\n        });\n      }\n    }, select(\'core/block-editor\').getBlocks());\n    formFields = placeholder ? [{\n      value: \'\',\n      label: placeholder\n    }].concat(hooks_helper_toConsumableArray(formFields)) : formFields;\n    return {\n      formFields: suppressFilter ? formFields : hooks_helper_applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields)\n    };\n  };\n};\nvar withSelectActionsByType = function withSelectActionsByType(actionType) {\n  var withDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (select) {\n    var _withSelectMeta = withSelectMeta(\'_jf_actions\', [])(select),\n        _jf_actions = _withSelectMeta._jf_actions;\n\n    return hooks_helper_defineProperty({}, actionType, prepareActionsListByType(_jf_actions, actionType, withDesc));\n  };\n};\nvar useSanitizeFieldsMap = function useSanitizeFieldsMap() {\n  var mapProperty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'fields_map\';\n  var requestFields = useRequestFields();\n\n  var _useContext = hooks_helper_useContext(current_action_edit),\n      settings = _useContext.settings,\n      onChangeSettingObj = _useContext.onChangeSettingObj;\n\n  hooks_helper_useEffect(function () {\n    if (!settings.hasOwnProperty(mapProperty)) {\n      return;\n    }\n\n    var fields = [].concat(hooks_helper_toConsumableArray(getFormFieldsBlocks()), hooks_helper_toConsumableArray(requestFields));\n    var fieldsMap = settings[mapProperty];\n\n    var hasField = function hasField(fieldName) {\n      return -1 !== fields.findIndex(function (current) {\n        return current.value === fieldName;\n      });\n    };\n\n    for (var fieldName in fieldsMap) {\n      if (!fieldsMap.hasOwnProperty(fieldName)) {\n        continue;\n      }\n\n      if (!hasField(fieldName)) {\n        delete fieldsMap[fieldName];\n      }\n    }\n\n    onChangeSettingObj(hooks_helper_defineProperty({}, mapProperty, fieldsMap));\n  }, []);\n};\n;// CONCATENATED MODULE: ./package/components/validate-button.js\nfunction validate_button_slicedToArray(arr, i) { return validate_button_arrayWithHoles(arr) || validate_button_iterableToArrayLimit(arr, i) || validate_button_unsupportedIterableToArray(arr, i) || validate_button_nonIterableRest(); }\n\nfunction validate_button_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction validate_button_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return validate_button_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return validate_button_arrayLikeToArray(o, minLen); }\n\nfunction validate_button_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction validate_button_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction validate_button_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction ValidateButton(_ref) {\n  var initialValid = _ref.initialValid,\n      label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onValid = _ref.onValid,\n      onValid = _ref$onValid === void 0 ? function () {} : _ref$onValid,\n      _ref$onInvalid = _ref.onInvalid,\n      onInvalid = _ref$onInvalid === void 0 ? function () {} : _ref$onInvalid;\n\n  var _useStateValidClasses = useStateValidClasses(initialValid || false),\n      _useStateValidClasses2 = validate_button_slicedToArray(_useStateValidClasses, 4),\n      className = _useStateValidClasses2[0],\n      setValidClass = _useStateValidClasses2[1],\n      setInvalidClass = _useStateValidClasses2[2],\n      setLoadingClass = _useStateValidClasses2[3];\n\n  var setValid = function setValid(response) {\n    setValidClass();\n    onValid(response);\n  };\n\n  var setInvalid = function setInvalid() {\n    setInvalidClass();\n    onInvalid();\n  };\n\n  return wp.element.createElement(request_button, {\n    ajaxArgs: ajaxArgs,\n    label: label,\n    onLoading: setLoadingClass,\n    onSuccessRequest: setValid,\n    onFailRequest: setInvalid,\n    className: className\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const validate_button = (ValidateButton);\n;// CONCATENATED MODULE: ./package/helpers/actions/action-manager.js\nfunction addAction(actionType, actionInstance) {\n  wp.data.dispatch(\'jet-forms/actions\').addCallback(actionType, actionInstance);\n}\n\n/* harmony default export */ const action_manager = (addAction);\n;// CONCATENATED MODULE: ./package/helpers/tools.js\nfunction tools_slicedToArray(arr, i) { return tools_arrayWithHoles(arr) || tools_iterableToArrayLimit(arr, i) || tools_unsupportedIterableToArray(arr, i) || tools_nonIterableRest(); }\n\nfunction tools_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction tools_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction tools_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction tools_toConsumableArray(arr) { return tools_arrayWithoutHoles(arr) || tools_iterableToArray(arr) || tools_unsupportedIterableToArray(arr) || tools_nonIterableSpread(); }\n\nfunction tools_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction tools_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tools_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tools_arrayLikeToArray(o, minLen); }\n\nfunction tools_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction tools_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return tools_arrayLikeToArray(arr); }\n\nfunction tools_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar semverGt = __webpack_require__(2260);\n\nvar semverLt = __webpack_require__(290);\n\nvar semverGte = __webpack_require__(6579);\n\nvar semverLte = __webpack_require__(5891);\n\nvar tools_ = wp.i18n.__;\nvar tools_applyFilters = wp.hooks.applyFilters;\n\nvar Tools = /*#__PURE__*/function () {\n  function Tools() {\n    _classCallCheck(this, Tools);\n  }\n\n  _createClass(Tools, null, [{\n    key: "withPlaceholder",\n    value: function withPlaceholder(source) {\n      var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'--\';\n      var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'\';\n      return [{\n        label: label,\n        value: value\n      }].concat(tools_toConsumableArray(source));\n    }\n  }, {\n    key: "isEmptyObject",\n    value: function isEmptyObject(object) {\n      return \'object\' === _typeof(object) && Object.keys(object).length === 0;\n    }\n  }]);\n\n  return Tools;\n}();\n\nvar tools_event = function event(name) {\n  var initializeCallbacksEvent = new Event(name);\n  return function () {\n    return document.dispatchEvent(initializeCallbacksEvent);\n  };\n};\nvar listen = function listen(name, func) {\n  document.addEventListener(name, func);\n};\n\nfunction getSemVerFunc(operator) {\n  switch (operator) {\n    case \'>\':\n      return semverGt;\n\n    case \'>=\':\n      return semverGte;\n\n    case \'<\':\n      return semverLt;\n\n    case \'<=\':\n      return semverLte;\n  }\n\n  return function () {\n    return false;\n  };\n}\n\nfunction versionCompare(version1, version2, operator) {\n  try {\n    return getSemVerFunc(operator)(version1, version2);\n  } catch (te) {\n    return false;\n  }\n}\nvar convertSymbols = tools_applyFilters(\'jet.fb.tools.convertSymbols\', {\n  checkCyrRegex: /[а-яёїєґі]/i,\n  cyrRegex: /[а-яёїєґі]/gi,\n  charsMap: {\n    \'а\': \'a\',\n    \'б\': \'b\',\n    \'в\': \'v\',\n    \'г\': \'g\',\n    \'д\': \'d\',\n    \'е\': \'e\',\n    \'ё\': \'io\',\n    \'ж\': \'zh\',\n    \'з\': \'z\',\n    \'и\': \'i\',\n    \'й\': \'i\',\n    \'к\': \'k\',\n    \'л\': \'l\',\n    \'м\': \'m\',\n    \'н\': \'n\',\n    \'о\': \'o\',\n    \'п\': \'p\',\n    \'р\': \'r\',\n    \'с\': \'s\',\n    \'т\': \'t\',\n    \'у\': \'u\',\n    \'ф\': \'f\',\n    \'х\': \'kh\',\n    \'ц\': \'ts\',\n    \'ч\': \'ch\',\n    \'ш\': \'sh\',\n    \'щ\': \'shch\',\n    \'ы\': \'y\',\n    \'э\': \'e\',\n    \'ю\': \'iu\',\n    \'я\': \'ia\',\n    \'ї\': \'i\',\n    \'є\': \'ie\',\n    \'ґ\': \'g\',\n    \'і\': \'i\'\n  }\n});\nfunction maybeCyrToLatin(str) {\n  if (convertSymbols.checkCyrRegex.test(str)) {\n    str = str.replace(convertSymbols.cyrRegex, function (match) {\n      if (undefined === convertSymbols.charsMap[match]) {\n        return \'\';\n      }\n\n      return convertSymbols.charsMap[match];\n    });\n  }\n\n  return str;\n}\nfunction getConvertedName(valueToChange) {\n  var regex = /\\s+/g,\n      slug = valueToChange.toLowerCase().replace(regex, \'_\'); // Replace accents\n\n  slug = slug.normalize(\'NFD\').replace(/[\\u0300-\\u036f]/g, \'\'); // Replace cyrillic\n\n  slug = maybeCyrToLatin(slug);\n\n  if (20 < slug.length) {\n    // 34 - Lionel Messi\'s age when he left Barcelona\n    slug = slug.substr(0, 34);\n\n    if (\'-\' === slug.slice(-1)) {\n      slug = slug.slice(0, -1);\n    }\n  }\n\n  return slug;\n}\nfunction classnames() {\n  var result = [];\n\n  var parseValues = function parseValues(source) {\n    source.forEach(function (itemClass) {\n      if (!itemClass) {\n        return;\n      }\n\n      if (Array.isArray(itemClass)) {\n        parseValues(itemClass);\n      }\n\n      if (\'string\' === typeof itemClass) {\n        result.push(itemClass.trim());\n      }\n\n      if (\'object\' === _typeof(itemClass)) {\n        for (var itemClassKey in itemClass) {\n          if (itemClass[itemClassKey]) {\n            result.push((itemClassKey + \'\').trim());\n          }\n        }\n      }\n    });\n  };\n\n  for (var _len = arguments.length, additional = new Array(_len), _key = 0; _key < _len; _key++) {\n    additional[_key] = arguments[_key];\n  }\n\n  parseValues(additional);\n  return result.join(\' \');\n}\nfunction convertObjectToOptionsList() {\n  var entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$usePlaceholder = _ref.usePlaceholder,\n      usePlaceholder = _ref$usePlaceholder === void 0 ? true : _ref$usePlaceholder,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'--\' : _ref$label,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \'\' : _ref$value;\n\n  var placeholder = {\n    label: label,\n    value: value\n  };\n\n  if (!entries) {\n    return usePlaceholder ? [placeholder] : [];\n  }\n\n  var options = Object.entries(entries).map(function (_ref2) {\n    var _ref3 = tools_slicedToArray(_ref2, 2),\n        value = _ref3[0],\n        label = _ref3[1];\n\n    return {\n      value: value,\n      label: label\n    };\n  });\n  return usePlaceholder ? [placeholder].concat(tools_toConsumableArray(options)) : options;\n}\n/* harmony default export */ const tools = (Tools);\n;// CONCATENATED MODULE: ./package/components/presets/preset-editor.js\nfunction preset_editor_extends() { preset_editor_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return preset_editor_extends.apply(this, arguments); }\n\nfunction preset_editor_toConsumableArray(arr) { return preset_editor_arrayWithoutHoles(arr) || preset_editor_iterableToArray(arr) || preset_editor_unsupportedIterableToArray(arr) || preset_editor_nonIterableSpread(); }\n\nfunction preset_editor_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction preset_editor_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return preset_editor_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return preset_editor_arrayLikeToArray(o, minLen); }\n\nfunction preset_editor_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction preset_editor_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return preset_editor_arrayLikeToArray(arr); }\n\nfunction preset_editor_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction preset_editor_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction preset_editor_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? preset_editor_ownKeys(Object(source), !0).forEach(function (key) { preset_editor_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : preset_editor_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction preset_editor_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction preset_editor_typeof(obj) { "@babel/helpers - typeof"; return preset_editor_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, preset_editor_typeof(obj); }\n\nvar preset_editor_applyFilters = wp.hooks.applyFilters;\n\nfunction withPreset(WrappedComponent) {\n  return function JetFormPresetEditor(props) {\n    var parseValue = function parseValue() {\n      var val = {};\n\n      if (\'object\' === preset_editor_typeof(props.value)) {\n        val = preset_editor_objectSpread({}, props.value);\n      } else if (props.value && \'string\' === typeof props.value) {\n        try {\n          val = JSON.parse(props.value);\n\n          if (\'number\' === typeof val) {\n            throw new Error();\n          }\n        } catch (exception) {\n          val = {};\n        }\n      }\n\n      val.jet_preset = true;\n      return val;\n    };\n\n    var isVisible = function isVisible(currentState, data, position) {\n      return (data.position && position === data.position || !data.position || \'query_var\' !== currentState.from) && isGlobalVisible(currentState, data);\n    };\n\n    var isGlobalVisible = function isGlobalVisible(currentState, data) {\n      if (!data.condition && !data.custom_condition) {\n        return true;\n      }\n\n      if (data.custom_condition) {\n        switch (data.custom_condition) {\n          case \'query_var\':\n            return \'post\' === currentState.from && \'query_var\' === currentState.post_from || \'user\' === currentState.from && \'query_var\' === currentState.user_from || \'query_var\' === currentState.from;\n\n          default:\n            return preset_editor_applyFilters(\'jet.fb.preset.editor.custom.condition\', false, data.custom_condition, currentState);\n        }\n      }\n\n      if (data.condition) {\n        return currentState[data.condition.field] === data.condition.value;\n      }\n\n      return true;\n    };\n\n    var isCurrentFieldVisible = function isCurrentFieldVisible(currentState, data, position) {\n      if (!data.condition && !data.parent_condition) {\n        return true;\n      }\n\n      if (data.position && position !== data.position) {\n        return false;\n      }\n\n      if (data.parent_condition && !data.condition) {\n        return currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (data.parent_condition && data.condition) {\n        return currentState[\'current_field_\' + data.condition.field] === data.condition.value && currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (!data.parent_condition && data.condition) {\n        return currentState[\'current_field_\' + data.condition.field] === data.condition.value;\n      }\n\n      return true;\n    };\n\n    var isMapFieldVisible = function isMapFieldVisible(currentState, data, field) {\n      if (!data.condition && !data.parent_condition) {\n        return true;\n      }\n\n      if (data.parent_condition && !data.condition) {\n        return currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (data.parent_condition && data.condition) {\n        if (!currentState.fields_map || !currentState.fields_map[field]) {\n          return false;\n        } else {\n          return currentState.fields_map[field][data.condition.field] === data.condition.value && currentState[data.parent_condition.field] === data.parent_condition.value;\n        }\n      } else if (!data.parent_condition && data.condition) {\n        if (!currentState.fields_map || !currentState.fields_map[field]) {\n          return false;\n        } else {\n          return currentState.fields_map[field][data.condition.field] === data.condition.value;\n        }\n      }\n\n      return true;\n    };\n\n    var excludeOptions = function excludeOptions(selectOptions) {\n      var options = preset_editor_toConsumableArray(selectOptions);\n\n      options.forEach(function (option, index) {\n        if (props.excludeSources && props.excludeSources.includes(option.value)) {\n          options.splice(index, 1);\n        }\n      });\n      return options;\n    };\n\n    return wp.element.createElement(WrappedComponent, preset_editor_extends({\n      key: "wrapped-preset-editor"\n    }, props, {\n      parseValue: parseValue,\n      isVisible: isVisible,\n      isMapFieldVisible: isMapFieldVisible,\n      isCurrentFieldVisible: isCurrentFieldVisible,\n      excludeOptions: excludeOptions\n    }));\n  };\n}\n\n/* harmony default export */ const preset_editor = (withPreset);\n;// CONCATENATED MODULE: ./package/components/grouped-select-control.js\nvar isEmpty = window.lodash.isEmpty;\n/**\r\n * WordPress dependencies\r\n */\n\nvar withInstanceId = window.wp.compose.withInstanceId;\n/**\r\n * Internal dependencies\r\n */\n\nvar grouped_select_control_BaseControl = window.wp.components.BaseControl;\n\nfunction GroupedSelectControl(_ref) {\n  var help = _ref.help,\n      instanceId = _ref.instanceId,\n      label = _ref.label,\n      _ref$multiple = _ref.multiple,\n      multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n      onChange = _ref.onChange,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options,\n      className = _ref.className,\n      value = _ref.value,\n      hideLabelFromVision = _ref.hideLabelFromVision;\n  var id = "inspector-select-control-".concat(instanceId);\n\n  var onChangeValue = function onChangeValue(event) {\n    onChange(event.target.value);\n  }; // Disable reason: A select with an onchange throws a warning\n\n  /* eslint-disable jsx-a11y/no-onchange */\n\n\n  return !isEmpty(options) && wp.element.createElement(grouped_select_control_BaseControl, {\n    label: label,\n    hideLabelFromVision: hideLabelFromVision,\n    id: id,\n    help: help,\n    className: className\n  }, wp.element.createElement("select", {\n    id: id,\n    className: "components-select-control__input",\n    onChange: onChangeValue,\n    value: value,\n    "aria-describedby": !!help ? "".concat(id, "__help") : undefined\n  }, wp.element.createElement("option", {\n    key: "".concat(label, "-placeholder"),\n    value: ""\n  }, "--"), options.map(function (optGroup, groupIndex) {\n    return !isEmpty(optGroup.values) && wp.element.createElement("optgroup", {\n      key: "".concat(optGroup.label, "-").concat(groupIndex),\n      label: optGroup.label\n    }, optGroup.values.map(function (option, index) {\n      return wp.element.createElement("option", {\n        key: "".concat(option.value, "-").concat(index, "-").concat(groupIndex),\n        value: option.value,\n        disabled: option.disabled\n      }, option.label);\n    }));\n  })));\n  /* eslint-enable jsx-a11y/no-onchange */\n}\n\n/* harmony default export */ const grouped_select_control = (withInstanceId(GroupedSelectControl));\n;// CONCATENATED MODULE: ./package/components/presets/preset-render.js\nfunction preset_render_extends() { preset_render_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return preset_render_extends.apply(this, arguments); }\n\nfunction preset_render_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction preset_render_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? preset_render_ownKeys(Object(source), !0).forEach(function (key) { preset_render_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : preset_render_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction preset_render_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction preset_render_typeof(obj) { "@babel/helpers - typeof"; return preset_render_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, preset_render_typeof(obj); }\n\n\nvar preset_render_wp$components = wp.components,\n    TextControl = preset_render_wp$components.TextControl,\n    SelectControl = preset_render_wp$components.SelectControl,\n    CustomSelectControl = preset_render_wp$components.CustomSelectControl,\n    Card = preset_render_wp$components.Card,\n    CardBody = preset_render_wp$components.CardBody,\n    CardHeader = preset_render_wp$components.CardHeader;\n\nfunction GlobalField(_ref) {\n  var data = _ref.data,\n      value = _ref.value,\n      index = _ref.index,\n      onChangeValue = _ref.onChangeValue,\n      isVisible = _ref.isVisible,\n      _ref$excludeOptions = _ref.excludeOptions,\n      excludeOptions = _ref$excludeOptions === void 0 ? function (options) {\n    return options;\n  } : _ref$excludeOptions,\n      position = _ref.position;\n\n  switch (data.type) {\n    case \'text\':\n      return isVisible(value, data, position) && wp.element.createElement("div", {\n        key: \'field_\' + data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(TextControl, {\n        key: data.name + index,\n        label: data.label,\n        value: value[data.name],\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, data.name);\n        }\n      }));\n\n    case \'select\':\n      return isVisible(value, data, position) && wp.element.createElement("div", {\n        key: \'field_\' + data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(SelectControl, {\n        key: data.name + index,\n        labelPosition: "side",\n        options: excludeOptions(data.options),\n        label: data.label,\n        value: value[data.name],\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, data.name);\n        }\n      }));\n  }\n\n  return null;\n}\n\nfunction AvailableMapField(_ref2) {\n  var fieldsMap = _ref2.fieldsMap,\n      field = _ref2.field,\n      index = _ref2.index,\n      value = _ref2.value,\n      onChangeValue = _ref2.onChangeValue,\n      isMapFieldVisible = _ref2.isMapFieldVisible;\n  var currentVal = null;\n\n  if (!fieldsMap) {\n    fieldsMap = {};\n  }\n\n  currentVal = fieldsMap[field];\n\n  if (!currentVal || \'object\' !== preset_render_typeof(currentVal)) {\n    currentVal = {};\n  }\n\n  var AvailableFieldWrapper = function AvailableFieldWrapper(_ref3) {\n    var field = _ref3.field,\n        name = _ref3.name,\n        index = _ref3.index,\n        fIndex = _ref3.fIndex,\n        children = _ref3.children;\n    return wp.element.createElement(Card, {\n      key: field + name + index + fIndex,\n      size: \'extraSmall\',\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, wp.element.createElement(CardHeader, null, wp.element.createElement("span", {\n      className: "jet-label-overflow"\n    }, field)), wp.element.createElement(CardBody, {\n      key: field + name + index + fIndex,\n      className: \'jet-form-preset__fields-map-item\'\n    }, children));\n  };\n\n  function AvailableFieldWrapperFunc(_ref4, children) {\n    var field = _ref4.field,\n        name = _ref4.name,\n        index = _ref4.index,\n        fIndex = _ref4.fIndex;\n    return wp.element.createElement(Card, {\n      key: field + name + index + fIndex,\n      size: \'extraSmall\',\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, wp.element.createElement(CardHeader, null, wp.element.createElement("span", {\n      className: "jet-label-overflow"\n    }, field)), wp.element.createElement(CardBody, {\n      key: field + name + index + fIndex,\n      className: \'jet-form-preset__fields-map-item\'\n    }, children));\n  }\n\n  return wp.element.createElement(React.Fragment, {\n    key: "map_field_preset_".concat(field + index)\n  }, window.JetFormEditorData.presetConfig.map_fields.map(function (data, fIndex) {\n    var props = {\n      field: field,\n      name: data.name,\n      index: index,\n      fIndex: fIndex\n    };\n    var uniqKey = \'control_\' + field + data.name + index + fIndex;\n\n    switch (data.type) {\n      case \'text\':\n        return isMapFieldVisible(value, data, field) && AvailableFieldWrapperFunc(props, wp.element.createElement(TextControl, {\n          key: uniqKey + \'TextControl\',\n          placeholder: data.label,\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n\n      case \'select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(SelectControl, {\n          options: data.options //label={ data.label }\n          ,\n          labelPosition: "top",\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n\n      case \'custom_select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(CustomSelectControl, {\n          options: data.options,\n          onChange: function onChange(_ref5) {\n            var selectedItem = _ref5.selectedItem;\n            currentVal[data.name] = selectedItem.key;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          },\n          value: data.options.find(function (option) {\n            return option.key === currentVal[data.name];\n          })\n        }));\n\n      case \'grouped_select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(grouped_select_control, {\n          options: data.options //label={ data.label }\n          ,\n          labelPosition: "top",\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n    }\n  }));\n}\n\nfunction MapField(_ref6) {\n  var data = _ref6.data,\n      value = _ref6.value,\n      index = _ref6.index,\n      currentState = _ref6.currentState,\n      onChangeValue = _ref6.onChangeValue,\n      isCurrentFieldVisible = _ref6.isCurrentFieldVisible,\n      _ref6$position = _ref6.position,\n      position = _ref6$position === void 0 ? \'general\' : _ref6$position;\n\n  switch (data.type) {\n    case \'text\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(TextControl, {\n        key: \'control_\' + data.name + index,\n        placeholder: data.label,\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n\n    case \'select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(SelectControl, {\n        key: \'control_\' + data.name + index,\n        labelPosition: "side",\n        options: data.options,\n        label: data.label,\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n\n    case \'custom_select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(CustomSelectControl, {\n        className: "jet-custom-select-control",\n        label: data.label,\n        options: data.options,\n        onChange: function onChange(_ref7) {\n          var selectedItem = _ref7.selectedItem;\n          value = selectedItem.key;\n          onChangeValue(value, \'current_field_\' + data.name);\n        },\n        value: data.options.find(function (option) {\n          return option.key === value;\n        })\n      }));\n\n    case \'grouped_select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(grouped_select_control, {\n        options: data.options,\n        label: data.label,\n        labelPosition: "side",\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n  }\n\n  return null;\n}\n\n\n;// CONCATENATED MODULE: ./package/components/presets/dynamic-preset.js\nfunction dynamic_preset_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction dynamic_preset_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? dynamic_preset_ownKeys(Object(source), !0).forEach(function (key) { dynamic_preset_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : dynamic_preset_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction dynamic_preset_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction dynamic_preset_slicedToArray(arr, i) { return dynamic_preset_arrayWithHoles(arr) || dynamic_preset_iterableToArrayLimit(arr, i) || dynamic_preset_unsupportedIterableToArray(arr, i) || dynamic_preset_nonIterableRest(); }\n\nfunction dynamic_preset_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction dynamic_preset_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dynamic_preset_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dynamic_preset_arrayLikeToArray(o, minLen); }\n\nfunction dynamic_preset_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction dynamic_preset_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction dynamic_preset_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar dynamic_preset_wp$element = wp.element,\n    dynamic_preset_useState = dynamic_preset_wp$element.useState,\n    dynamic_preset_useEffect = dynamic_preset_wp$element.useEffect;\n\nfunction DynamicPreset(_ref) {\n  var value = _ref.value,\n      isSaveAction = _ref.isSaveAction,\n      onSavePreset = _ref.onSavePreset,\n      onUnMount = _ref.onUnMount,\n      parseValue = _ref.parseValue,\n      excludeOptions = _ref.excludeOptions,\n      isCurrentFieldVisible = _ref.isCurrentFieldVisible,\n      isVisible = _ref.isVisible;\n  var position = \'dynamic\';\n\n  var _useState = dynamic_preset_useState(function () {\n    return parseValue(value);\n  }),\n      _useState2 = dynamic_preset_slicedToArray(_useState, 2),\n      stateValue = _useState2[0],\n      setValue = _useState2[1];\n\n  var onChangeValue = function onChangeValue(newValue, name) {\n    setValue(function (prev) {\n      return dynamic_preset_objectSpread(dynamic_preset_objectSpread({}, prev), {}, dynamic_preset_defineProperty({}, name, newValue));\n    });\n  };\n\n  dynamic_preset_useEffect(function () {\n    if (true === isSaveAction) {\n      if (onSavePreset) {\n        onSavePreset(JSON.stringify(stateValue));\n      }\n\n      onUnMount();\n    } else if (false === isSaveAction) {\n      onUnMount();\n    }\n  }, [isSaveAction]);\n  return wp.element.createElement(React.Fragment, null, window.JetFormEditorData.presetConfig.global_fields.map(function (data, index) {\n    return wp.element.createElement(GlobalField, {\n      key: "current_field_".concat(data.name, "_").concat(index),\n      value: stateValue,\n      index: index,\n      data: data,\n      excludeOptions: excludeOptions,\n      onChangeValue: onChangeValue,\n      isVisible: isVisible,\n      position: position\n    });\n  }), window.JetFormEditorData.presetConfig.map_fields.map(function (data, index) {\n    return wp.element.createElement(MapField, {\n      key: "current_field_".concat(data.name, "_").concat(index),\n      currentState: stateValue,\n      value: stateValue[\'current_field_\' + data.name],\n      index: index,\n      data: data,\n      onChangeValue: onChangeValue,\n      isCurrentFieldVisible: isCurrentFieldVisible,\n      position: position\n    });\n  }));\n}\n\n/* harmony default export */ const dynamic_preset = (preset_editor(DynamicPreset));\n;// CONCATENATED MODULE: ./editor/blocks/controls/fields-map.js\nfunction fields_map_typeof(obj) { "@babel/helpers - typeof"; return fields_map_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, fields_map_typeof(obj); }\n\nfunction fields_map_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction fields_map_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? fields_map_ownKeys(Object(source), !0).forEach(function (key) { fields_map_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : fields_map_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction fields_map_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction fields_map_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction fields_map_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction fields_map_createClass(Constructor, protoProps, staticProps) { if (protoProps) fields_map_defineProperties(Constructor.prototype, protoProps); if (staticProps) fields_map_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (fields_map_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Internal dependencies\r\n */\nvar fields_map_wp$components = wp.components,\n    fields_map_SelectControl = fields_map_wp$components.SelectControl,\n    fields_map_TextControl = fields_map_wp$components.TextControl;\n\nvar JetFieldsMapControl = /*#__PURE__*/function (_wp$element$Component) {\n  _inherits(JetFieldsMapControl, _wp$element$Component);\n\n  var _super = _createSuper(JetFieldsMapControl);\n\n  function JetFieldsMapControl(props) {\n    var _this;\n\n    fields_map_classCallCheck(this, JetFieldsMapControl);\n\n    _this = _super.call(this, props);\n    _this.fieldTypes = _this.props.fieldTypes;\n    _this.taxonomiesList = _this.props.taxonomiesList;\n    _this.className = _this.props.className;\n    _this.metaProp = _this.props.metaProp ? _this.props.metaProp : \'post_meta\';\n    _this.termsProp = _this.props.termsProp ? _this.props.termsProp : \'post_terms\';\n    _this.index = _this.props.index;\n\n    _this.init();\n\n    _this.bindFunctions();\n\n    _this.state = {\n      type: _this.getFieldType(_this.props.fieldValue)\n    };\n    return _this;\n  }\n\n  fields_map_createClass(JetFieldsMapControl, [{\n    key: "bindFunctions",\n    value: function bindFunctions() {\n      this.onChangeType = this.onChangeType.bind(this);\n      this.onChangeValue = this.onChangeValue.bind(this);\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      this.id = "inspector-select-control-".concat(this.index);\n      this.preparedTaxes = [];\n      this.taxPrefix = \'jet_tax__\';\n\n      if (!this.taxonomiesList) {\n        return;\n      }\n\n      for (var i = 0; i < this.taxonomiesList.length; i++) {\n        this.preparedTaxes.push({\n          value: this.taxPrefix + this.taxonomiesList[i].value,\n          label: this.taxonomiesList[i].label\n        });\n      }\n    }\n  }, {\n    key: "getFieldName",\n    value: function getFieldName(value) {\n      if (!value) {\n        return \'\';\n      }\n\n      var fieldType = this.getFieldType(value);\n\n      if (this.termsProp === fieldType || this.metaProp === fieldType) {\n        return value;\n      } else {\n        return \'\';\n      }\n    }\n  }, {\n    key: "isTermOrMeta",\n    value: function isTermOrMeta(value) {\n      return this.termsProp === value || this.metaProp === value;\n    }\n  }, {\n    key: "getFieldType",\n    value: function getFieldType(value) {\n      if (!value) {\n        return \'\';\n      }\n\n      for (var i = 0; i < this.fieldTypes.length; i++) {\n        if (value === this.fieldTypes[i].value) {\n          return value;\n        }\n      }\n\n      if (value.includes(this.taxPrefix)) {\n        return this.termsProp;\n      } else {\n        return this.metaProp;\n      }\n    }\n  }, {\n    key: "onChangeValue",\n    value: function onChangeValue(newValue) {\n      this.props.onChange(fields_map_objectSpread(fields_map_objectSpread({}, this.props.fieldsMap), {}, fields_map_defineProperty({}, this.props.fieldName, newValue)));\n    }\n  }, {\n    key: "onChangeType",\n    value: function onChangeType(newValue) {\n      var val = this.getFieldType(newValue);\n      this.setState({\n        type: val\n      });\n\n      if (this.isTermOrMeta(val)) {\n        val = \'\';\n      }\n\n      this.onChangeValue(val);\n    } // Disable reason: A select with an onchange throws a warning\n\n    /* eslint-disable jsx-a11y/no-onchange */\n\n  }, {\n    key: "render",\n    value: function render() {\n      return wp.element.createElement("div", {\n        className: "jet-fields-map__row"\n      }, wp.element.createElement("div", {\n        className: "jet-post-field-control"\n      }, wp.element.createElement(fields_map_SelectControl, {\n        key: \'field_type_\' + this.props.fieldName + this.index,\n        label: this.props.fieldName,\n        labelPosition: "side",\n        value: this.state.type,\n        onChange: this.onChangeType,\n        options: this.fieldTypes,\n        style: {\n          width: \'160px\'\n        }\n      }), this.metaProp === this.state.type && wp.element.createElement(fields_map_TextControl, {\n        key: \'field_name_\' + this.props.fieldName + this.index,\n        value: this.props.fieldValue,\n        onChange: this.onChangeValue,\n        style: {\n          width: \'200px\'\n        }\n      }), this.termsProp === this.state.type && wp.element.createElement(fields_map_SelectControl, {\n        className: "jet-control-without-label",\n        key: \'field_tax_\' + this.props.fieldName + this.index,\n        value: this.props.fieldValue,\n        onChange: this.onChangeValue,\n        options: this.preparedTaxes,\n        style: {\n          width: \'200px\'\n        }\n      })));\n    }\n    /* eslint-enable jsx-a11y/no-onchange */\n\n  }]);\n\n  return JetFieldsMapControl;\n}(wp.element.Component);\n\n/* harmony default export */ const fields_map = (JetFieldsMapControl);\n;// CONCATENATED MODULE: ./package/components/fields/field-with-preset.js\nfunction field_with_preset_extends() { field_with_preset_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_with_preset_extends.apply(this, arguments); }\n\nfunction field_with_preset_toConsumableArray(arr) { return field_with_preset_arrayWithoutHoles(arr) || field_with_preset_iterableToArray(arr) || field_with_preset_unsupportedIterableToArray(arr) || field_with_preset_nonIterableSpread(); }\n\nfunction field_with_preset_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction field_with_preset_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction field_with_preset_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return field_with_preset_arrayLikeToArray(arr); }\n\nfunction field_with_preset_slicedToArray(arr, i) { return field_with_preset_arrayWithHoles(arr) || field_with_preset_iterableToArrayLimit(arr, i) || field_with_preset_unsupportedIterableToArray(arr, i) || field_with_preset_nonIterableRest(); }\n\nfunction field_with_preset_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction field_with_preset_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return field_with_preset_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return field_with_preset_arrayLikeToArray(o, minLen); }\n\nfunction field_with_preset_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction field_with_preset_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction field_with_preset_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar field_with_preset_wp$components = wp.components,\n    Path = field_with_preset_wp$components.Path,\n    SVG = field_with_preset_wp$components.SVG,\n    field_with_preset_BaseControl = field_with_preset_wp$components.BaseControl;\nvar field_with_preset_useState = wp.element.useState;\n\nfunction FieldWithPreset(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      ModalEditor = _ref.ModalEditor,\n      _ref$triggerClasses = _ref.triggerClasses,\n      triggerClasses = _ref$triggerClasses === void 0 ? [] : _ref$triggerClasses,\n      _ref$baseControlProps = _ref.baseControlProps,\n      baseControlProps = _ref$baseControlProps === void 0 ? {} : _ref$baseControlProps;\n\n  var _useState = field_with_preset_useState(false),\n      _useState2 = field_with_preset_slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var changeModalState = function changeModalState() {\n    setModalState(function (prev) {\n      return !prev;\n    });\n  };\n\n  var classNames = [\'jet-form-dynamic-preset__trigger\'].concat(field_with_preset_toConsumableArray(triggerClasses)).join(\' \');\n  return wp.element.createElement(React.Fragment, null, wp.element.createElement(field_with_preset_BaseControl, field_with_preset_extends({\n    className: "jet-form-dynamic-preset"\n  }, baseControlProps), children, wp.element.createElement("div", {\n    className: classNames,\n    onClick: changeModalState\n  }, wp.element.createElement(SVG, {\n    viewBox: "0 0 54 64",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, wp.element.createElement(Path, {\n    d: "M42.6396 26.4347C37.8682 27.3436 32.5666 28.0252 27.1894 28.0252C21.8121 28.0252 16.4348 27.3436 11.7391 26.4347C6.96774 25.4502 3.18093 23.8597 0.37868 21.9663L0.37868 28.0252C0.37868 29.5399 1.59046 31.1304 3.78682 32.4179C5.98317 33.7054 9.46704 34.9172 13.6325 35.5988C17.798 36.2805 22.115 36.8106 27.1894 36.8106C32.2637 36.8106 36.6564 36.5077 40.7462 35.5988C44.8359 34.69 48.3198 33.7054 50.5162 32.4179C52.7125 31.1304 54 29.5399 54 28.0252L54 21.9663C51.122 23.8597 47.3352 25.4502 42.6396 26.4347ZM42.6396 53.5484C37.8682 54.5329 32.5666 55.1388 27.1894 55.1388C21.8121 55.1388 16.4348 54.5329 11.7391 53.5484C7.04348 52.5638 3.18093 51.0491 0.378682 49.1556L0.378682 55.1388C0.378683 56.7293 1.59046 58.3197 3.78682 59.5315C6.36186 60.819 9.46705 62.1066 13.6325 62.7125C17.7223 63.697 22.115 64 27.1894 64C32.2637 64 36.6564 63.697 40.7462 62.7125C44.8359 61.8036 48.3198 60.819 50.5162 59.5315C52.7125 57.9411 54 56.7293 54 54.8359L54 48.8527C51.122 51.0491 47.3352 52.2608 42.6396 53.5484ZM42.6396 39.9915C37.8682 40.9004 32.5666 41.582 27.1894 41.582C21.8121 41.582 16.4348 40.9004 11.7391 39.9915C6.96774 39.007 3.18093 37.4922 0.378681 35.5988L0.378681 41.582C0.378681 43.1725 1.59046 44.6872 3.78682 45.9747C6.36185 47.2622 9.46705 48.474 13.6325 49.1556C17.7223 50.0645 22.115 50.3674 27.1894 50.3674C32.2637 50.3674 36.6564 50.0645 40.7462 49.1556C44.8359 48.1711 48.3198 47.2622 50.5162 45.9747C52.7125 44.3843 54 43.1725 54 41.582L54 35.5988C51.122 37.4922 47.3352 39.007 42.6396 39.9915ZM40.4432 2.12337C36.3535 1.13879 31.885 0.835848 26.8864 0.835849C21.8878 0.835849 17.4194 1.13879 13.2539 2.12337C9.08836 3.10794 5.68022 4.01678 3.48387 5.3043C1.28751 6.59181 -3.4782e-06 8.10654 -3.33916e-06 9.697L-2.95513e-06 14.0897C-2.81609e-06 15.6802 1.28752 17.2706 3.48387 18.5582C6.05891 19.7699 9.1641 21.0575 13.2539 21.6633C17.3436 22.2692 21.8121 22.9509 26.8864 22.9509C31.9607 22.9509 36.3535 22.9509 40.4432 22.345C44.533 21.7391 48.0169 20.4516 50.2132 19.164C52.7125 17.5736 54 15.9831 54 14.3927L54 9.99995C54 8.40948 52.7125 6.81902 50.5162 5.60724C48.3198 4.39546 44.533 2.72926 40.4432 2.12337Z",\n    fill: "#7E8993"\n  })))), modalState && wp.element.createElement(components_action_modal, {\n    onRequestClose: changeModalState,\n    classNames: [\'width-60\'],\n    title: \'Edit Preset\'\n  }, function (modalProps) {\n    return wp.element.createElement(ModalEditor, modalProps);\n  }));\n}\n\n/* harmony default export */ const field_with_preset = (FieldWithPreset);\n;// CONCATENATED MODULE: ./package/helpers/hooks/event-types.js\nfunction event_types_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = event_types_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction event_types_toConsumableArray(arr) { return event_types_arrayWithoutHoles(arr) || event_types_iterableToArray(arr) || event_types_unsupportedIterableToArray(arr) || event_types_nonIterableSpread(); }\n\nfunction event_types_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction event_types_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return event_types_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return event_types_arrayLikeToArray(o, minLen); }\n\nfunction event_types_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction event_types_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return event_types_arrayLikeToArray(arr); }\n\nfunction event_types_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar event_types_useSelect = wp.data.useSelect;\nvar useRequestEvents = function useRequestEvents() {\n  var currentAction = event_types_useSelect(function (select) {\n    return select(\'jet-forms/actions\').getCurrentAction();\n  });\n  var list = [].concat(event_types_toConsumableArray(useDefaultEvents(currentAction)), event_types_toConsumableArray(useEventsFromGateways(currentAction)), event_types_toConsumableArray(useEventsFromActions(currentAction)));\n  return event_types_useSelect(function (select) {\n    return select(\'jet-forms/events\').filterList(currentAction.type, list);\n  }, [currentAction.id]);\n};\n\nvar useDefaultEvents = function useDefaultEvents() {\n  var eventsObjects = event_types_useSelect(function (select) {\n    return select(\'jet-forms/events\').getAlwaysTypes();\n  }, []);\n  var events = [];\n\n  var _iterator = event_types_createForOfIteratorHelper(eventsObjects),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value.value;\n      events.push(value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return event_types_toConsumableArray(new Set(events));\n};\n\nvar useEventsFromGateways = function useEventsFromGateways() {\n  var _gateways$gateways$ga;\n\n  var gateways = useSelectPostMeta(\'_jf_gateways\');\n\n  var _ref = (_gateways$gateways$ga = gateways[gateways === null || gateways === void 0 ? void 0 : gateways.gateway]) !== null && _gateways$gateways$ga !== void 0 ? _gateways$gateways$ga : {},\n      _ref$scenario = _ref.scenario,\n      scenario = _ref$scenario === void 0 ? {} : _ref$scenario;\n\n  return event_types_useSelect(function (select) {\n    var eventsObjects = select(\'jet-forms/events\').getGatewayTypes();\n    var events = [];\n\n    var _iterator2 = event_types_createForOfIteratorHelper(eventsObjects),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var event = _step2.value;\n        var correctGateway = event.gateway ? event.gateway === gateways.gateway : true;\n        var correctScenario = event.scenario ? event.scenario === (scenario === null || scenario === void 0 ? void 0 : scenario.id) : true;\n\n        if (correctGateway && correctScenario) {\n          events.push(event.value);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return event_types_toConsumableArray(new Set(events));\n  }, [gateways === null || gateways === void 0 ? void 0 : gateways.gateway]);\n};\n\nvar useEventsFromActions = function useEventsFromActions(_ref2) {\n  var index = _ref2.index;\n  var actions = useSelectPostMeta(\'_jf_actions\');\n  actions.splice(index, 1);\n  var events = [];\n\n  var _iterator3 = event_types_createForOfIteratorHelper(actions),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _current$provideEvent;\n\n      var action = _step3.value;\n      var _action$settings$acti = action.settings[action.type],\n          current = _action$settings$acti === void 0 ? {} : _action$settings$acti;\n\n      if (!((_current$provideEvent = current.provideEvents) !== null && _current$provideEvent !== void 0 && _current$provideEvent.length)) {\n        continue;\n      }\n\n      events.push.apply(events, event_types_toConsumableArray(current.provideEvents));\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return event_types_toConsumableArray(new Set(events));\n};\n;// CONCATENATED MODULE: ./package/helpers/hooks/block-conditions.js\nfunction block_conditions_slicedToArray(arr, i) { return block_conditions_arrayWithHoles(arr) || block_conditions_iterableToArrayLimit(arr, i) || block_conditions_unsupportedIterableToArray(arr, i) || block_conditions_nonIterableRest(); }\n\nfunction block_conditions_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction block_conditions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return block_conditions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return block_conditions_arrayLikeToArray(o, minLen); }\n\nfunction block_conditions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction block_conditions_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction block_conditions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useBlockProps = wp.blockEditor.useBlockProps;\nvar block_conditions_useSelect = wp.data.useSelect;\n/**\r\n * @returns {{functions, operators}}\r\n */\n\nfunction useBlockConditions() {\n  var blockProps = useBlockProps();\n\n  var _useSelect = block_conditions_useSelect(function (select) {\n    return [select(\'jet-forms/block-conditions\').getOperators(), select(\'jet-forms/block-conditions\').getFunctions()];\n  }, []),\n      _useSelect2 = block_conditions_slicedToArray(_useSelect, 2),\n      operators = _useSelect2[0],\n      functions = _useSelect2[1];\n\n  if (\'jet-forms/conditional-block\' !== blockProps[\'data-type\']) {\n    return {\n      operators: operators,\n      functions: functions\n    };\n  }\n\n  var filteredFunctions = block_conditions_useSelect(function (select) {\n    return select(\'jet-forms/block-conditions\').getFilteredFunctions(blockProps);\n  }, []);\n  return {\n    operators: operators,\n    functions: filteredFunctions\n  };\n}\n\n\n;// CONCATENATED MODULE: ./package/helpers/hooks/blocks.js\nfunction blocks_typeof(obj) { "@babel/helpers - typeof"; return blocks_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, blocks_typeof(obj); }\n\nfunction blocks_slicedToArray(arr, i) { return blocks_arrayWithHoles(arr) || blocks_iterableToArrayLimit(arr, i) || blocks_unsupportedIterableToArray(arr, i) || blocks_nonIterableRest(); }\n\nfunction blocks_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blocks_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blocks_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blocks_arrayLikeToArray(o, minLen); }\n\nfunction blocks_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction blocks_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction blocks_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar blocks_useBlockProps = wp.blockEditor.useBlockProps;\nvar blocks_wp$data = wp.data,\n    blocks_useSelect = blocks_wp$data.useSelect,\n    blocks_useDispatch = blocks_wp$data.useDispatch;\n\nfunction useUniqKey() {\n  var blockProps = blocks_useBlockProps();\n  return function (slug) {\n    return slug + \'-\' + blockProps[\'data-block\'];\n  };\n}\n\nfunction useBlockAttributes() {\n  var _useSelect = blocks_useSelect(function (select) {\n    var clientId = select(\'core/block-editor\').getSelectedBlockClientId();\n    return [clientId, select(\'core/block-editor\').getBlockAttributes(clientId)];\n  }),\n      _useSelect2 = blocks_slicedToArray(_useSelect, 2),\n      clientId = _useSelect2[0],\n      attributes = _useSelect2[1];\n\n  var _useDispatch = blocks_useDispatch(\'core/block-editor\', []),\n      updateBlock = _useDispatch.updateBlock;\n\n  var updateAttributes = function updateAttributes(props) {\n    if (\'object\' === blocks_typeof(props)) {\n      updateBlock(clientId, {\n        attributes: props\n      });\n    }\n\n    updateBlock(clientId, {\n      attributes: props(attributes)\n    });\n  };\n\n  return [attributes, updateAttributes];\n}\n\n\n;// CONCATENATED MODULE: ./package/components/fields/field-wrapper.js\n\n\nvar field_wrapper_BaseControl = wp.components.BaseControl;\nvar withSelect = wp.data.withSelect;\nvar RichText = wp.blockEditor.RichText;\nvar field_wrapper_ = wp.i18n.__;\n\nfunction RichDescription(content) {\n  return wp.element.createElement("small", {\n    style: {\n      whiteSpace: \'nowrap\',\n      padding: \'0.2em 0.8em 0 0\',\n      color: \'#8e8a8a\'\n    }\n  }, content);\n}\n\nfunction FieldWrapper(props) {\n  var attributes = props.attributes,\n      _props$editProps = props.editProps,\n      uniqKey = _props$editProps.uniqKey,\n      _props$editProps$bloc = _props$editProps.blockName,\n      blockName = _props$editProps$bloc === void 0 ? \'\' : _props$editProps$bloc,\n      children = props.children,\n      _props$wrapClasses = props.wrapClasses,\n      wrapClasses = _props$wrapClasses === void 0 ? [] : _props$wrapClasses,\n      _props$valueIfEmptyLa = props.valueIfEmptyLabel,\n      valueIfEmptyLabel = _props$valueIfEmptyLa === void 0 ? \'\' : _props$valueIfEmptyLa,\n      setAttributes = props.setAttributes,\n      _props$childrenPositi = props.childrenPosition,\n      childrenPosition = _props$childrenPositi === void 0 ? \'between\' : _props$childrenPositi;\n\n  var _jf_args = useSelectPostMeta(\'_jf_args\');\n\n  var setDynamicName = function setDynamicName() {\n    if (1 < attributes.label.length && (!attributes.name || \'field_name\' === attributes.name)) {\n      setAttributes({\n        name: getConvertedName(attributes.label)\n      });\n    }\n  };\n\n  function renderLabel() {\n    return wp.element.createElement(field_wrapper_BaseControl.VisualLabel, null, RichDescription(field_wrapper_(\'input label:\', \'jet-form-builder\')), wp.element.createElement("div", {\n      onBlur: setDynamicName,\n      className: "jet-form-builder__label"\n    }, wp.element.createElement(RichText, {\n      key: uniqKey(\'rich-label\'),\n      placeholder: "Label...",\n      allowedFormats: [],\n      value: attributes.label ? attributes.label : valueIfEmptyLabel,\n      onChange: function onChange(newLabel) {\n        return setAttributes({\n          label: newLabel\n        });\n      }\n    }), attributes.required && wp.element.createElement("span", {\n      className: \'jet-form-builder__required\'\n    }, _jf_args.required_mark ? _jf_args.required_mark : \'*\')));\n  }\n\n  function renderDescription() {\n    return wp.element.createElement("div", {\n      className: "jet-form-builder__desc--wrapper"\n    }, RichDescription(field_wrapper_(\'input description:\', \'jet-form-builder\')), wp.element.createElement(field_wrapper_BaseControl, {\n      key: \'custom_help_description\',\n      className: \'jet-form-builder__desc\'\n    }, wp.element.createElement("div", {\n      className: "components-base-control__help"\n    }, wp.element.createElement(RichText, {\n      key: uniqKey(\'rich-description\'),\n      tagName: "small",\n      placeholder: "Description...",\n      allowedFormats: [],\n      value: attributes.desc,\n      onChange: function onChange(desc) {\n        return setAttributes({\n          desc: desc\n        });\n      },\n      style: {\n        marginTop: \'0px\'\n      }\n    }))));\n  }\n\n  if (\'row\' === _jf_args.fields_layout) {\n    wrapClasses.push(\'jet-form-builder-row__flex\');\n  }\n\n  return wp.element.createElement(field_wrapper_BaseControl, {\n    key: uniqKey(\'placeHolder_block\'),\n    className: classnames(\'jet-form-builder__field-wrap\', \'jet-form-builder-row\', wrapClasses)\n  }, \'row\' !== _jf_args.fields_layout && wp.element.createElement(React.Fragment, null, \'top\' === childrenPosition && children, renderLabel(), \'between\' === childrenPosition && children, renderDescription(), \'bottom\' === childrenPosition && children), \'row\' === _jf_args.fields_layout && wp.element.createElement(React.Fragment, null, wp.element.createElement("div", {\n    className: "jet-form-builder-row__flex--label"\n  }, renderLabel(), renderDescription()), wp.element.createElement("div", {\n    className: "jet-form-builder-row__flex--content"\n  }, children)));\n}\n\n/* harmony default export */ const field_wrapper = (FieldWrapper);\n;// CONCATENATED MODULE: ./package/components/fields/macros-inserter.js\nvar _excluded = ["children", "fields", "onFieldClick", "customMacros", "zIndex"];\n\nfunction macros_inserter_extends() { macros_inserter_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return macros_inserter_extends.apply(this, arguments); }\n\nfunction macros_inserter_slicedToArray(arr, i) { return macros_inserter_arrayWithHoles(arr) || macros_inserter_iterableToArrayLimit(arr, i) || macros_inserter_unsupportedIterableToArray(arr, i) || macros_inserter_nonIterableRest(); }\n\nfunction macros_inserter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction macros_inserter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return macros_inserter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return macros_inserter_arrayLikeToArray(o, minLen); }\n\nfunction macros_inserter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction macros_inserter_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction macros_inserter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar macros_inserter_wp$components = wp.components,\n    macros_inserter_Button = macros_inserter_wp$components.Button,\n    Popover = macros_inserter_wp$components.Popover,\n    PanelBody = macros_inserter_wp$components.PanelBody;\nvar macros_inserter_useState = wp.element.useState;\n\nfunction MacrosInserter(_ref) {\n  var children = _ref.children,\n      fields = _ref.fields,\n      onFieldClick = _ref.onFieldClick,\n      customMacros = _ref.customMacros,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 1000000 : _ref$zIndex,\n      popoverProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = macros_inserter_useState(function () {\n    return false;\n  }),\n      _useState2 = macros_inserter_slicedToArray(_useState, 2),\n      showPopover = _useState2[0],\n      setPopoverState = _useState2[1];\n\n  return wp.element.createElement("div", {\n    className: "jet-form-editor__macros-inserter"\n  }, wp.element.createElement(macros_inserter_Button, {\n    isTertiary: true,\n    isSmall: true,\n    icon: showPopover ? \'no-alt\' : \'admin-tools\',\n    label: \'Insert macros\',\n    className: "jet-form-editor__macros-trigger",\n    onClick: function onClick() {\n      setPopoverState(function (prev) {\n        return !prev;\n      });\n    }\n  }), showPopover && wp.element.createElement(Popover, macros_inserter_extends({\n    style: {\n      zIndex: zIndex\n    },\n    position: \'bottom left\'\n  }, popoverProps), fields.length && wp.element.createElement(PanelBody, {\n    title: \'Form Fields\'\n  }, fields.map(function (field) {\n    return wp.element.createElement("div", {\n      key: \'field_\' + field.name\n    }, wp.element.createElement(macros_inserter_Button, {\n      isLink: true,\n      onClick: function onClick() {\n        onFieldClick(field.name);\n      }\n    }, \'%\' + field.name + \'%\'));\n  })), customMacros && wp.element.createElement(PanelBody, {\n    title: \'Custom Macros\'\n  }, customMacros.map(function (macros) {\n    return wp.element.createElement("div", {\n      key: \'macros_\' + macros\n    }, wp.element.createElement(macros_inserter_Button, {\n      isLink: true,\n      onClick: function onClick() {\n        onFieldClick(macros);\n      }\n    }, \'%\' + macros + \'%\'));\n  }))));\n}\n\n/* harmony default export */ const macros_inserter = (MacrosInserter);\n;// CONCATENATED MODULE: ./package/components/fields/repeater-with-state.js\nfunction repeater_with_state_slicedToArray(arr, i) { return repeater_with_state_arrayWithHoles(arr) || repeater_with_state_iterableToArrayLimit(arr, i) || repeater_with_state_unsupportedIterableToArray(arr, i) || repeater_with_state_nonIterableRest(); }\n\nfunction repeater_with_state_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction repeater_with_state_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction repeater_with_state_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction repeater_with_state_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction repeater_with_state_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? repeater_with_state_ownKeys(Object(source), !0).forEach(function (key) { repeater_with_state_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : repeater_with_state_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction repeater_with_state_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction repeater_with_state_toConsumableArray(arr) { return repeater_with_state_arrayWithoutHoles(arr) || repeater_with_state_iterableToArray(arr) || repeater_with_state_unsupportedIterableToArray(arr) || repeater_with_state_nonIterableSpread(); }\n\nfunction repeater_with_state_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction repeater_with_state_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return repeater_with_state_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return repeater_with_state_arrayLikeToArray(o, minLen); }\n\nfunction repeater_with_state_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction repeater_with_state_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return repeater_with_state_arrayLikeToArray(arr); }\n\nfunction repeater_with_state_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar repeater_with_state_ = wp.i18n.__;\nvar repeater_with_state_wp$components = wp.components,\n    repeater_with_state_Button = repeater_with_state_wp$components.Button,\n    repeater_with_state_ButtonGroup = repeater_with_state_wp$components.ButtonGroup,\n    repeater_with_state_Card = repeater_with_state_wp$components.Card,\n    repeater_with_state_CardBody = repeater_with_state_wp$components.CardBody,\n    repeater_with_state_CardHeader = repeater_with_state_wp$components.CardHeader,\n    ToggleControl = repeater_with_state_wp$components.ToggleControl,\n    Flex = repeater_with_state_wp$components.Flex,\n    FlexItem = repeater_with_state_wp$components.FlexItem;\nvar repeater_with_state_wp$element = wp.element,\n    repeater_with_state_useState = repeater_with_state_wp$element.useState,\n    repeater_with_state_useEffect = repeater_with_state_wp$element.useEffect;\n\nfunction RepeaterWithState(_ref) {\n  var children = _ref.children,\n      ItemHeading = _ref.ItemHeading,\n      _ref$repeaterClasses = _ref.repeaterClasses,\n      repeaterClasses = _ref$repeaterClasses === void 0 ? [] : _ref$repeaterClasses,\n      _ref$repeaterItemClas = _ref.repeaterItemClasses,\n      repeaterItemClasses = _ref$repeaterItemClas === void 0 ? [] : _ref$repeaterItemClas,\n      newItem = _ref.newItem,\n      _ref$addNewButtonLabe = _ref.addNewButtonLabel,\n      addNewButtonLabel = _ref$addNewButtonLabe === void 0 ? \'Add New\' : _ref$addNewButtonLabe,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      isSaveAction = _ref.isSaveAction,\n      onSaveItems = _ref.onSaveItems,\n      onUnMount = _ref.onUnMount,\n      onAddNewItem = _ref.onAddNewItem,\n      onRemoveItem = _ref.onRemoveItem,\n      _ref$help = _ref.help,\n      help = _ref$help === void 0 ? {\n    helpSource: {},\n    helpVisible: function helpVisible() {\n      return false;\n    },\n    helpKey: \'\'\n  } : _ref$help,\n      _ref$additionalContro = _ref.additionalControls,\n      additionalControls = _ref$additionalContro === void 0 ? null : _ref$additionalContro;\n  var classNames = [\'jet-form-builder__repeater-component\'].concat(repeater_with_state_toConsumableArray(repeaterClasses)).join(\' \');\n  var itemClassNames = [\'jet-form-builder__repeater-component-item\'].concat(repeater_with_state_toConsumableArray(repeaterItemClasses)).join(\' \');\n\n  var parsedItems = function parsedItems() {\n    if (items && items.length > 0) {\n      return items.map(function (item) {\n        item.__visible = false;\n        return item;\n      });\n    } else {\n      return [repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, newItem), {}, {\n        __visible: true\n      })];\n    }\n  };\n\n  var _useState = repeater_with_state_useState([]),\n      _useState2 = repeater_with_state_slicedToArray(_useState, 2),\n      itemsData = _useState2[0],\n      setItemsData = _useState2[1];\n\n  repeater_with_state_useEffect(function () {\n    setItemsData(parsedItems());\n  }, []);\n\n  var _useState3 = repeater_with_state_useState(true),\n      _useState4 = repeater_with_state_slicedToArray(_useState3, 2),\n      isSafeDeleting = _useState4[0],\n      setSafeDeleting = _useState4[1];\n\n  var _changeCurrentItem = function changeCurrentItem(valueToSet, index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index] = repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, prev[index]), valueToSet);\n      return prevClone;\n    });\n  };\n\n  var onSaveDeleting = function onSaveDeleting(index) {\n    return confirm(repeater_with_state_("Are you sure you want to remove item ".concat(index + 1, "?"), \'jet-form-builder\'));\n  };\n\n  var removeOption = function removeOption(index) {\n    if (isSafeDeleting && !onSaveDeleting(index) || onRemoveItem && !onRemoveItem(index, itemsData)) {\n      return;\n    }\n\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone.splice(index, 1);\n      return prevClone;\n    });\n  };\n\n  var addNewItem = function addNewItem(value) {\n    if (onAddNewItem) {\n      onAddNewItem(value, itemsData);\n    }\n\n    setItemsData(function (prev) {\n      return [].concat(repeater_with_state_toConsumableArray(prev), [repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, value), {}, {\n        __visible: true\n      })]);\n    });\n  };\n\n  var cloneItem = function cloneItem(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref2 = [prevClone.slice(0, index + 1), prevClone.slice(index + 1)],\n          before = _ref2[0],\n          after = _ref2[1];\n      return [].concat(repeater_with_state_toConsumableArray(before), [prevClone[index]], repeater_with_state_toConsumableArray(after));\n    });\n  };\n\n  var moveRepeaterItem = function moveRepeaterItem(_ref3) {\n    var oldIndex = _ref3.oldIndex,\n        newIndex = _ref3.newIndex;\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref4 = [prevClone[oldIndex], prevClone[newIndex]];\n      prevClone[newIndex] = _ref4[0];\n      prevClone[oldIndex] = _ref4[1];\n      return prevClone;\n    });\n  };\n\n  var moveUp = function moveUp(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index - 1\n    });\n  };\n\n  var moveDown = function moveDown(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index + 1\n    });\n  };\n\n  var isDisabledEnd = function isDisabledEnd(index) {\n    return !(index < itemsData.length - 1);\n  };\n  /*\r\n    \r\n   */\n\n\n  var toggleVisible = function toggleVisible(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index].__visible = !prevClone[index].__visible;\n      return prevClone;\n    });\n  };\n\n  repeater_with_state_useEffect(function () {\n    if (true === isSaveAction) {\n      for (var itemsDataKey in itemsData) {\n        for (var itemKey in itemsData[itemsDataKey]) {\n          if (itemKey.startsWith(\'__\')) {\n            delete itemsData[itemsDataKey][itemKey];\n          }\n        }\n      }\n\n      onSaveItems(itemsData);\n      onUnMount();\n    } else if (false === isSaveAction) {\n      onUnMount();\n    }\n  }, [isSaveAction]);\n\n  var getRepeaterItemId = function getRepeaterItemId(index) {\n    return "jet-form-builder-repeater__item_".concat(index);\n  };\n\n  var helpSource = help.helpSource,\n      helpVisible = help.helpVisible,\n      helpKey = help.helpKey;\n  var isVisibleHelp = helpVisible(itemsData) && helpSource && helpSource[helpKey];\n  return wp.element.createElement("div", {\n    className: classNames,\n    key: \'jet-form-builder-repeater\'\n  }, isVisibleHelp && wp.element.createElement("p", null, helpSource[helpKey].label), 0 < itemsData.length && wp.element.createElement(React.Fragment, null, wp.element.createElement(Flex, null, wp.element.createElement(FlexItem, null, wp.element.createElement(ToggleControl, {\n    label: repeater_with_state_(\'Safe deleting\', \'jet-form-builder\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  })), wp.element.createElement(FlexItem, {\n    style: {\n      flex: \'unset\',\n      marginBottom: \'1em\'\n    }\n  }))), additionalControls, itemsData.map(function (currentItem, index) {\n    return wp.element.createElement(repeater_with_state_Card, {\n      isElevated: true,\n      className: itemClassNames,\n      key: getRepeaterItemId(index)\n    }, wp.element.createElement(repeater_with_state_CardHeader, {\n      className: \'repeater__item__header\'\n    }, wp.element.createElement("div", {\n      className: "repeater-item__left-heading"\n    }, wp.element.createElement(repeater_with_state_ButtonGroup, {\n      className: \'repeater-action-buttons\'\n    }, wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      icon: currentItem.__visible ? \'no-alt\' : \'edit\',\n      onClick: function onClick() {\n        return toggleVisible(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !Boolean(index),\n      icon: \'arrow-up-alt2\',\n      onClick: function onClick() {\n        return moveUp(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: isDisabledEnd(index),\n      icon: \'arrow-down-alt2\',\n      onClick: function onClick() {\n        return moveDown(index);\n      },\n      className: \'repeater-action-button\'\n    })), wp.element.createElement("span", {\n      className: \'repeater-item-title\'\n    }, ItemHeading && wp.element.createElement(ItemHeading, {\n      currentItem: currentItem,\n      index: index,\n      changeCurrentItem: function changeCurrentItem(data) {\n        return _changeCurrentItem(data, index);\n      }\n    }), !ItemHeading && "#".concat(index + 1))), wp.element.createElement(repeater_with_state_ButtonGroup, null, wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      onClick: function onClick() {\n        return cloneItem(index);\n      }\n    }, repeater_with_state_(\'Clone\', \'jet-form-builder\')), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      isDestructive: true,\n      onClick: function onClick() {\n        return removeOption(index);\n      }\n    }, repeater_with_state_(\'Delete\', \'jet-form-builder\')))), currentItem.__visible && wp.element.createElement(repeater_with_state_CardBody, {\n      className: \'repeater-item__content\'\n    }, children && wp.element.createElement(React.Fragment, {\n      key: "repeater-component__item_".concat(index)\n    }, \'function\' === typeof children && children({\n      currentItem: currentItem,\n      changeCurrentItem: function changeCurrentItem(data) {\n        return _changeCurrentItem(data, index);\n      },\n      currentIndex: index\n    }), \'function\' !== typeof children && children), !children && \'Set up your Repeater Template, please.\'));\n  }), 1 < itemsData.length && wp.element.createElement(React.Fragment, null, additionalControls, wp.element.createElement(ToggleControl, {\n    className: "jet-control-clear",\n    label: repeater_with_state_(\'Safe deleting\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  })), wp.element.createElement(repeater_with_state_Button, {\n    isSecondary: true,\n    onClick: function onClick() {\n      return addNewItem(newItem);\n    }\n  }, addNewButtonLabel));\n}\n\n/* harmony default export */ const repeater_with_state = (RepeaterWithState);\n;// CONCATENATED MODULE: ./package/components/fields/controls.js\nvar controls_ = wp.i18n.__;\nvar controls_applyFilters = wp.hooks.applyFilters;\nvar ControlsSettings = function ControlsSettings() {\n  return controls_applyFilters(\'jet.fb.register.fields.controls\', {\n    "general": {\n      label: controls_(\'General\', \'jet-form-builder\'),\n      attrs: [{\n        "attrName": "label",\n        "type": "text",\n        "label": controls_("Field Label", \'jet-form-builder\')\n      }, {\n        "attrName": "name",\n        "type": "text",\n        "label": controls_("Form field name", \'jet-form-builder\'),\n        "help": controls_("Should contain only Latin letters, numbers, `-` or `_` chars, no spaces only lower case", \'jet-form-builder\')\n      }, {\n        "attrName": "desc",\n        "type": "text",\n        "label": controls_("Field Description", \'jet-form-builder\')\n      }, {\n        "attrName": "default",\n        "type": "dynamic_text",\n        "label": controls_("Default Value", \'jet-form-builder\')\n      }]\n    },\n    "toolbar": {\n      attrs: [{\n        "attrName": "required",\n        "type": "toggle",\n        "label": controls_("Is Required", \'jet-form-builder\')\n      }]\n    },\n    "advanced": {\n      label: controls_(\'Advanced\', \'jet-form-builder\'),\n      attrs: [{\n        "attrName": "placeholder",\n        "type": "text",\n        "label": controls_("Placeholder", \'jet-form-builder\')\n      }, {\n        "attrName": "add_prev",\n        "type": "toggle",\n        "label": controls_("Add Prev Page Button", \'jet-form-builder\'),\n        help: controls_("It is recommended to use \\n\\t\\t\\t\\tthe \\"Action Button\\" block with the \\"Go to Prev Page\\" type", \'jet-from-builder\')\n      }, {\n        "attrName": "prev_label",\n        "type": "text",\n        "label": controls_("Prev Page Button Label", \'jet-form-builder\'),\n        "condition": "add_prev"\n      }, {\n        "attrName": "visibility",\n        "label": controls_("Field Visibility", \'jet-form-builder\'),\n        "type": "select",\n        "options": [{\n          "value": "all",\n          "label": controls_("For all", \'jet-form-builder\')\n        }, {\n          "value": "logged_id",\n          "label": controls_("Only for logged in users", \'jet-form-builder\')\n        }, {\n          "value": "not_logged_in",\n          "label": controls_("Only for NOT-logged in users", \'jet-form-builder\')\n        }]\n      }, {\n        "attrName": "class_name",\n        "type": "text",\n        "label": controls_("CSS Class Name", \'jet-form-builder\')\n      }]\n    }\n  });\n};\nfunction getBlockControls() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'all\';\n\n  if (!type) {\n    return false;\n  }\n\n  var controls = ControlsSettings();\n\n  if (\'all\' === type) {\n    return controls;\n  }\n\n  if (controls[type] && controls[type].attrs && Array.isArray(controls[type].attrs) && 0 < controls[type].attrs.length) {\n    return controls[type].attrs;\n  }\n\n  return false;\n}\n;// CONCATENATED MODULE: ./package/components/fields/field-control.js\nvar field_control_excluded = ["help", "attrName", "label"],\n    _excluded2 = ["help", "attrName", "label"];\n\nfunction field_control_extends() { field_control_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_control_extends.apply(this, arguments); }\n\nfunction field_control_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction field_control_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = field_control_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction field_control_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction field_control_typeof(obj) { "@babel/helpers - typeof"; return field_control_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, field_control_typeof(obj); }\n\n\n\n\n\n\n\nvar _ref = wp.blockEditor ? wp.blockEditor : wp.editor,\n    BlockControls = _ref.BlockControls,\n    field_control_RichText = _ref.RichText;\n\nvar field_control_wp$element = wp.element,\n    field_control_useState = field_control_wp$element.useState,\n    field_control_useEffect = field_control_wp$element.useEffect;\nvar field_control_useDispatch = wp.data.useDispatch;\nvar field_control_wp$components = wp.components,\n    field_control_TextControl = field_control_wp$components.TextControl,\n    field_control_SelectControl = field_control_wp$components.SelectControl,\n    field_control_PanelBody = field_control_wp$components.PanelBody,\n    field_control_ToggleControl = field_control_wp$components.ToggleControl,\n    ToolbarGroup = field_control_wp$components.ToolbarGroup,\n    field_control_Flex = field_control_wp$components.Flex,\n    field_control_BaseControl = field_control_wp$components.BaseControl,\n    __experimentalNumberControl = field_control_wp$components.__experimentalNumberControl,\n    ClipboardButton = field_control_wp$components.ClipboardButton,\n    Snackbar = field_control_wp$components.Snackbar;\nvar NumberControl = wp.components.NumberControl;\n\nif (typeof NumberControl === \'undefined\') {\n  NumberControl = __experimentalNumberControl;\n}\n\nfunction filterFieldControls(_ref2) {\n  var type = _ref2.type,\n      attributes = _ref2.attributes,\n      _ref2$attrsSettings = _ref2.attrsSettings,\n      attrsSettings = _ref2$attrsSettings === void 0 ? {} : _ref2$attrsSettings,\n      _ref2$editProps = _ref2.editProps,\n      _ref2$editProps$attrH = _ref2$editProps.attrHelp,\n      attrHelp = _ref2$editProps$attrH === void 0 ? function () {\n    return \'\';\n  } : _ref2$editProps$attrH,\n      _ref2$editProps$block = _ref2$editProps.blockName,\n      blockName = _ref2$editProps$block === void 0 ? \'\' : _ref2$editProps$block;\n  var controls = ControlsSettings();\n\n  if (!controls[type]) {\n    return [];\n  }\n\n  var currentControl = controls[type];\n\n  var isValidCondition = function isValidCondition(attr) {\n    if (!attr.condition) {\n      return true;\n    }\n\n    if (blockName && attr.condition.blockName) {\n      if (\'string\' === typeof attr.condition.blockName && blockName !== attr.condition.blockName) {\n        return false;\n      }\n\n      if (\'object\' === field_control_typeof(attr.condition.blockName) && attr.condition.blockName.length && !attr.condition.blockName.includes(blockName)) {\n        return false;\n      }\n    }\n\n    var objectNotMatch = function () {\n      if (\'object\' !== field_control_typeof(attr.condition.attr)) {\n        return true;\n      }\n\n      var _attr$condition$attr = attr.condition.attr,\n          _attr$condition$attr$ = _attr$condition$attr.operator,\n          operator = _attr$condition$attr$ === void 0 ? \'and\' : _attr$condition$attr$,\n          _attr$condition$attr$2 = _attr$condition$attr.items,\n          items = _attr$condition$attr$2 === void 0 ? {} : _attr$condition$attr$2;\n\n      if (\'or\' === operator.toLowerCase()) {\n        for (var attrToCompare in items) {\n          var valueCompare = items[attrToCompare];\n\n          if (valueCompare === attributes[attrToCompare]) {\n            return true;\n          }\n        }\n      }\n\n      if (\'and\' === operator.toLowerCase()) {\n        return function () {\n          for (var _attrToCompare in items) {\n            if (items[_attrToCompare] !== attributes[_attrToCompare]) {\n              return false;\n            }\n          }\n\n          return true;\n        }();\n      }\n\n      return true;\n    }();\n\n    if (!objectNotMatch || \'string\' === typeof attr.condition.attr && attr.condition.attr && !attributes[attr.condition.attr] || \'string\' === typeof attr.condition && !attributes[attr.condition]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return currentControl.attrs.filter(function (_ref3) {\n    var _ref3$help = _ref3.help,\n        help = _ref3$help === void 0 ? \'\' : _ref3$help,\n        attrName = _ref3.attrName,\n        label = _ref3.label,\n        attr = field_control_objectWithoutProperties(_ref3, field_control_excluded);\n\n    var isRegisterAttribute = (attrName in attributes);\n    var validCondition = isValidCondition(attr);\n    var isHidden = attrName in attrsSettings && \'show\' in attrsSettings[attrName] && false === attrsSettings[attrName].show;\n    return isRegisterAttribute && validCondition && !isHidden;\n  });\n}\n\nfunction FieldControl(props) {\n  var setAttributes = props.setAttributes,\n      attributes = props.attributes,\n      _props$editProps = props.editProps,\n      _props$editProps$attr = _props$editProps.attrHelp,\n      attrHelp = _props$editProps$attr === void 0 ? function () {\n    return \'\';\n  } : _props$editProps$attr,\n      _props$editProps$bloc = _props$editProps.blockName,\n      blockName = _props$editProps$bloc === void 0 ? \'\' : _props$editProps$bloc,\n      _props$fieldControls = props.fieldControls,\n      fieldControls = _props$fieldControls === void 0 ? [] : _props$fieldControls,\n      _props$autoCompleteLa = props.autoCompleteLabel,\n      autoCompleteLabel = _props$autoCompleteLa === void 0 ? true : _props$autoCompleteLa;\n\n  if (!fieldControls.length) {\n    fieldControls = filterFieldControls(props);\n  }\n\n  var onChangeValue = function onChangeValue(value, key) {\n    setAttributes(field_control_defineProperty({}, key, value));\n  };\n\n  return fieldControls.map(function (_ref4) {\n    var _ref4$help = _ref4.help,\n        help = _ref4$help === void 0 ? \'\' : _ref4$help,\n        attrName = _ref4.attrName,\n        label = _ref4.label,\n        attr = field_control_objectWithoutProperties(_ref4, _excluded2);\n\n    switch (attr.type) {\n      case \'text\':\n        return wp.element.createElement(field_control_TextControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-TextControl"),\n          label: label,\n          help: help,\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            return onChangeValue(newVal, attrName);\n          },\n          onBlur: function onBlur() {\n            if (\'label\' === attrName && 1 < attributes.label.length && (!attributes.name || \'field_name\' === attributes.name) && autoCompleteLabel) {\n              onChangeValue(getConvertedName(attributes.label), \'name\');\n            }\n          }\n        });\n\n      case \'dynamic_text\':\n        return wp.element.createElement(field_with_preset, {\n          key: "".concat(attr.type, "-").concat(attrName, "-FieldWithPreset"),\n          ModalEditor: function ModalEditor(_ref5) {\n            var actionClick = _ref5.actionClick,\n                onRequestClose = _ref5.onRequestClose;\n            return wp.element.createElement(dynamic_preset, {\n              value: attributes[attrName],\n              isSaveAction: actionClick,\n              onSavePreset: function onSavePreset(newVal) {\n                onChangeValue(newVal, attrName);\n              },\n              onUnMount: onRequestClose\n            });\n          }\n        }, wp.element.createElement(field_control_TextControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-TextControlDynamic"),\n          label: label,\n          help: help || attrHelp(attrName),\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        }));\n\n      case \'select\':\n        return wp.element.createElement(field_control_SelectControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-SelectControl"),\n          label: label,\n          help: help || attrHelp(attrName),\n          value: attributes[attrName],\n          options: attr.options,\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        });\n\n      case \'toggle\':\n        return wp.element.createElement(field_control_ToggleControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-ToggleControl"),\n          label: label,\n          help: help || attrHelp(attrName),\n          checked: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        });\n\n      case \'number\':\n        return wp.element.createElement(field_control_BaseControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-BaseControl"),\n          label: label\n        }, wp.element.createElement(NumberControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-NumberControl"),\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(Number(newVal), attrName);\n          }\n        }), wp.element.createElement("p", {\n          className: \'components-base-control__help\',\n          style: {\n            color: \'rgb(117, 117, 117)\'\n          }\n        }, help || attrHelp(attrName)));\n    }\n  });\n}\n\nfunction GeneralFields(props) {\n  var currentControl = ControlsSettings().general;\n  return wp.element.createElement(field_control_PanelBody, {\n    title: currentControl.label,\n    key: \'jet-form-general-fields\'\n  }, wp.element.createElement(FieldControl, field_control_extends({\n    type: "general",\n    key: \'jet-form-general-fields-component\'\n  }, props)), wp.element.createElement(FieldControl, field_control_extends({\n    type: "custom_general",\n    key: \'jet-form-general-custom-fields-component\'\n  }, props)));\n}\n\nfunction AdvancedFields(props) {\n  var currentControl = ControlsSettings().advanced;\n  return wp.element.createElement(field_control_PanelBody, {\n    title: currentControl.label,\n    key: \'jet-form-advanced-fields\',\n    initialOpen: false\n  }, wp.element.createElement(FieldControl, field_control_extends({\n    type: "advanced",\n    key: \'jet-form-advanced-fields-component\'\n  }, props)), wp.element.createElement(FieldControl, field_control_extends({\n    type: "custom_advanced",\n    key: \'jet-form-advanced-custom-fields-component\'\n  }, props)));\n}\n\nfunction ToolBarFields(props) {\n  var uniqKey = props.editProps.uniqKey,\n      _props$children = props.children,\n      children = _props$children === void 0 ? [] : _props$children,\n      _props$displayName = props.displayName,\n      displayName = _props$displayName === void 0 ? true : _props$displayName,\n      attributes = props.attributes,\n      setAttributes = props.setAttributes;\n  var displayNotice = useSuccessNotice("Copied \\"".concat(attributes.name, "\\" to clipboard."));\n  return wp.element.createElement(BlockControls, {\n    key: uniqKey(\'ToolBarFields-BlockControls\')\n  }, wp.element.createElement(ToolbarGroup, {\n    key: uniqKey(\'ToolBarFields-ToolbarGroup\')\n  }, wp.element.createElement(field_control_Flex, {\n    align: \'center\',\n    justify: \'center\',\n    className: \'jet-form-toggle-box\'\n  }, displayName && wp.element.createElement("div", {\n    className: \'jet-input-with-button\'\n  }, wp.element.createElement(ClipboardButton, {\n    isSmall: true,\n    icon: "admin-page",\n    showTooltip: true,\n    shortcut: "Copy name",\n    text: attributes.name,\n    onCopy: function onCopy() {\n      return displayNotice(true);\n    },\n    onFinishCopy: function onFinishCopy() {\n      return displayNotice(false);\n    }\n  }), wp.element.createElement(field_control_TextControl, {\n    value: attributes.name,\n    onChange: function onChange(name) {\n      return setAttributes({\n        name: name\n      });\n    }\n  })), wp.element.createElement(FieldControl, field_control_extends({\n    type: "toolbar",\n    key: uniqKey(\'jet-form-toolbar-fields-component\')\n  }, props)), children)));\n}\n\n\n;// CONCATENATED MODULE: ./package/components/actions/placeholder-message.js\nfunction placeholder_message_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction placeholder_message_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? placeholder_message_ownKeys(Object(source), !0).forEach(function (key) { placeholder_message_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : placeholder_message_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction placeholder_message_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PlaceholderMessage(_ref) {\n  var style = _ref.style,\n      children = _ref.children;\n\n  var propStyle = placeholder_message_objectSpread({\n    fontSize: \'1.5em\',\n    padding: \'2em\',\n    textAlign: \'center\',\n    backgroundColor: \'aliceblue\'\n  }, style);\n\n  return wp.element.createElement("p", {\n    style: propStyle\n  }, children);\n}\n\n/* harmony default export */ const placeholder_message = (PlaceholderMessage);\n;// CONCATENATED MODULE: ./package/components/actions/action-messages.js\nfunction action_messages_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction action_messages_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? action_messages_ownKeys(Object(source), !0).forEach(function (key) { action_messages_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : action_messages_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction action_messages_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction action_messages_slicedToArray(arr, i) { return action_messages_arrayWithHoles(arr) || action_messages_iterableToArrayLimit(arr, i) || action_messages_unsupportedIterableToArray(arr, i) || action_messages_nonIterableRest(); }\n\nfunction action_messages_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_messages_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_messages_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_messages_arrayLikeToArray(o, minLen); }\n\nfunction action_messages_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction action_messages_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_messages_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar action_messages_wp$components = wp.components,\n    action_messages_TextControl = action_messages_wp$components.TextControl,\n    action_messages_BaseControl = action_messages_wp$components.BaseControl;\nvar action_messages_wp$element = wp.element,\n    action_messages_useState = action_messages_wp$element.useState,\n    action_messages_useEffect = action_messages_wp$element.useEffect;\nvar action_messages_ = wp.i18n.__;\n\nfunction ActionMessages(props) {\n  var settings = props.settings,\n      source = props.source,\n      getMapField = props.getMapField,\n      setMapField = props.setMapField,\n      messages = props.messages,\n      onChangeSetting = props.onChangeSetting;\n  action_messages_useEffect(function () {\n    var oldMessages = settings.messages || {};\n    var messages = {};\n    Object.entries(source.__messages).forEach(function (_ref) {\n      var _ref2 = action_messages_slicedToArray(_ref, 2),\n          type = _ref2[0],\n          data = _ref2[1];\n\n      if (!oldMessages[type]) {\n        messages[type] = data.value;\n      }\n    });\n\n    if (messages) {\n      onChangeSetting(action_messages_objectSpread(action_messages_objectSpread({}, oldMessages), messages), \'messages\');\n    }\n  }, []);\n\n  var setMessage = function setMessage(value, nameField) {\n    var source = \'messages\';\n    setMapField({\n      value: value,\n      nameField: nameField,\n      source: source\n    });\n  };\n\n  var getMessage = function getMessage(name) {\n    var source = \'messages\';\n    return getMapField({\n      name: name,\n      source: source\n    });\n  };\n\n  return wp.element.createElement(action_messages_BaseControl, {\n    label: action_messages_(\'Messages Settings:\'),\n    key: "messages_settings_fields"\n  }, wp.element.createElement("div", {\n    className: "jet-user-fields-map__list"\n  }, settings.messages && Object.entries(settings.messages).map(function (_ref3, id) {\n    var _ref4 = action_messages_slicedToArray(_ref3, 2),\n        type = _ref4[0],\n        data = _ref4[1];\n\n    return wp.element.createElement("div", {\n      className: "jet-user-meta__row",\n      key: \'message_\' + type + id\n    }, wp.element.createElement(action_messages_TextControl, {\n      key: type + id,\n      label: messages(type).label,\n      value: getMessage(type),\n      onChange: function onChange(newValue) {\n        return setMessage(newValue, type);\n      }\n    }));\n  })));\n}\n\n/* harmony default export */ const action_messages = (ActionMessages);\n;// CONCATENATED MODULE: ./package/components/horizontal-line.js\nfunction horizontal_line_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction horizontal_line_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? horizontal_line_ownKeys(Object(source), !0).forEach(function (key) { horizontal_line_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : horizontal_line_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction horizontal_line_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction HorizontalLine(props) {\n  return wp.element.createElement("hr", {\n    style: horizontal_line_objectSpread({}, props)\n  });\n}\n\n/* harmony default export */ const horizontal_line = (HorizontalLine);\n;// CONCATENATED MODULE: ./package/components/request-loading-button.js\nfunction request_loading_button_slicedToArray(arr, i) { return request_loading_button_arrayWithHoles(arr) || request_loading_button_iterableToArrayLimit(arr, i) || request_loading_button_unsupportedIterableToArray(arr, i) || request_loading_button_nonIterableRest(); }\n\nfunction request_loading_button_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction request_loading_button_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return request_loading_button_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return request_loading_button_arrayLikeToArray(o, minLen); }\n\nfunction request_loading_button_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction request_loading_button_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction request_loading_button_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction RequestLoadingButton(_ref) {\n  var label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onSuccessRequest = _ref.onSuccessRequest,\n      _onSuccessRequest = _ref$onSuccessRequest === void 0 ? function () {} : _ref$onSuccessRequest,\n      _ref$onFailRequest = _ref.onFailRequest,\n      _onFailRequest = _ref$onFailRequest === void 0 ? function () {} : _ref$onFailRequest;\n\n  var _useStateLoadingClass = useStateLoadingClasses(),\n      _useStateLoadingClass2 = request_loading_button_slicedToArray(_useStateLoadingClass, 3),\n      className = _useStateLoadingClass2[0],\n      setLoadingClass = _useStateLoadingClass2[1],\n      clearLoadingClass = _useStateLoadingClass2[2];\n\n  return wp.element.createElement(request_button, {\n    ajaxArgs: ajaxArgs,\n    label: label,\n    onLoading: setLoadingClass,\n    onSuccessRequest: function onSuccessRequest(response) {\n      clearLoadingClass();\n\n      _onSuccessRequest(response);\n    },\n    onFailRequest: function onFailRequest() {\n      clearLoadingClass();\n\n      _onFailRequest();\n    },\n    className: className\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const request_loading_button = (RequestLoadingButton);\n;// CONCATENATED MODULE: ./package/components/fields/field-settings-wrapper.js\nfunction field_settings_wrapper_extends() { field_settings_wrapper_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_settings_wrapper_extends.apply(this, arguments); }\n\nfunction field_settings_wrapper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction field_settings_wrapper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? field_settings_wrapper_ownKeys(Object(source), !0).forEach(function (key) { field_settings_wrapper_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : field_settings_wrapper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction field_settings_wrapper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar field_settings_wrapper_ = wp.i18n.__;\nvar field_settings_wrapper_PanelBody = wp.components.PanelBody;\nfunction FieldSettingsWrapper(props) {\n  var title = props.title,\n      children = props.children,\n      _props$editProps$uniq = props.editProps.uniqKey,\n      uniqKey = _props$editProps$uniq === void 0 ? function (val) {\n    return val;\n  } : _props$editProps$uniq;\n  var fieldControls = filterFieldControls(field_settings_wrapper_objectSpread(field_settings_wrapper_objectSpread({}, props), {}, {\n    type: \'custom_settings\'\n  }));\n  return Boolean(fieldControls.length || children) && wp.element.createElement(field_settings_wrapper_PanelBody, {\n    title: title || field_settings_wrapper_(\'Field Settings\')\n  }, children, wp.element.createElement(FieldControl, field_settings_wrapper_extends({\n    type: "custom_settings",\n    fieldControls: fieldControls,\n    key: uniqKey(\'customSettingsFields\')\n  }, props)));\n}\n;// CONCATENATED MODULE: ./package/components/controls/base-help.js\nfunction base_help_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction base_help_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? base_help_ownKeys(Object(source), !0).forEach(function (key) { base_help_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : base_help_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction base_help_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction BaseHelp(_ref) {\n  var children = _ref.children,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style;\n  return wp.element.createElement("p", {\n    className: \'jet-fb-base-control__help\',\n    style: base_help_objectSpread({\n      fontSize: \'12px\',\n      fontStyle: \'normal\',\n      color: \'rgb(117, 117, 117)\',\n      marginTop: \'0px\'\n    }, style)\n  }, children);\n}\n\n/* harmony default export */ const base_help = (BaseHelp);\n;// CONCATENATED MODULE: ./package/components/fetch-ajax-button.js\n\n\nvar compose = wp.compose.compose;\nvar fetch_ajax_button_wp$data = wp.data,\n    fetch_ajax_button_withSelect = fetch_ajax_button_wp$data.withSelect,\n    withDispatch = fetch_ajax_button_wp$data.withDispatch;\n\nfunction FetchAjaxButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      loadingState = _ref.loadingState,\n      setLoading = _ref.setLoading,\n      id = _ref.id,\n      setResultSuccess = _ref.setResultSuccess,\n      setResultFail = _ref.setResultFail;\n\n  var getLabel = function getLabel() {\n    if (-1 === loadingState.id && initialLabel) {\n      return initialLabel;\n    }\n\n    return label;\n  };\n\n  return wp.element.createElement(request_button, {\n    disabled: loadingState.loading,\n    ajaxArgs: ajaxArgs,\n    label: getLabel(),\n    onLoading: function onLoading() {\n      setLoading(id);\n    },\n    onSuccessRequest: function onSuccessRequest(response) {\n      setResultSuccess(id, response);\n    },\n    onFailRequest: function onFailRequest() {\n      return setResultFail(id);\n    },\n    className: loadingState.buttonClassName\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const fetch_ajax_button = (compose(fetch_ajax_button_withSelect(withSelectActionLoading), withDispatch(withDispatchActionLoading))(FetchAjaxButton));\n;// CONCATENATED MODULE: ./package/components/validate-button-with-store.js\nvar validate_button_with_store_excluded = ["currentAction"];\n\nfunction validate_button_with_store_extends() { validate_button_with_store_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return validate_button_with_store_extends.apply(this, arguments); }\n\nfunction validate_button_with_store_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = validate_button_with_store_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction validate_button_with_store_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar validate_button_with_store_compose = wp.compose.compose;\nvar validate_button_with_store_wp$data = wp.data,\n    validate_button_with_store_withSelect = validate_button_with_store_wp$data.withSelect,\n    validate_button_with_store_withDispatch = validate_button_with_store_wp$data.withDispatch;\n\nfunction ValidateButtonWithStore(_ref) {\n  var currentAction = _ref.currentAction,\n      props = validate_button_with_store_objectWithoutProperties(_ref, validate_button_with_store_excluded);\n\n  return wp.element.createElement(fetch_ajax_button, validate_button_with_store_extends({\n    id: currentAction.id\n  }, props));\n}\n\n/* harmony default export */ const validate_button_with_store = (validate_button_with_store_compose(validate_button_with_store_withSelect(withCurrentAction))(ValidateButtonWithStore));\n;// CONCATENATED MODULE: ./package/components/fetch-api-button.js\n\n\nvar fetch_api_button_compose = wp.compose.compose;\nvar fetch_api_button_wp$data = wp.data,\n    fetch_api_button_withSelect = fetch_api_button_wp$data.withSelect,\n    fetch_api_button_withDispatch = fetch_api_button_wp$data.withDispatch;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\nfunction FetchApiButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$apiArgs = _ref.apiArgs,\n      apiArgs = _ref$apiArgs === void 0 ? {} : _ref$apiArgs,\n      loadingState = _ref.loadingState,\n      setLoading = _ref.setLoading,\n      id = _ref.id,\n      setResultSuccess = _ref.setResultSuccess,\n      setResultFail = _ref.setResultFail,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n      _ref$onFail = _ref.onFail,\n      onFail = _ref$onFail === void 0 ? function () {} : _ref$onFail,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden;\n\n  var getLabel = function getLabel() {\n    if ((-1 === loadingState.id || loadingState.loading) && initialLabel) {\n      return initialLabel;\n    }\n\n    return label;\n  };\n\n  return wp.element.createElement(request_button, {\n    disabled: loadingState.loading,\n    hasFetched: loadingState.id,\n    label: getLabel(),\n    className: loadingState.buttonClassName,\n    isHidden: isHidden,\n    customRequest: function customRequest() {\n      setLoading(id);\n      onLoading();\n      apiFetch(apiArgs).then(function (response) {\n        setResultSuccess(id, response);\n        onSuccess(response);\n      }).catch(function (error) {\n        setResultFail(id);\n        onFail(error);\n      });\n    }\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const fetch_api_button = (fetch_api_button_compose(fetch_api_button_withDispatch(withDispatchActionLoading))(FetchApiButton));\n;// CONCATENATED MODULE: ./package/components/gateway-fetch-button.js\n\n\nvar gateway_fetch_button_compose = wp.compose.compose;\nvar gateway_fetch_button_withSelect = wp.data.withSelect;\n\nfunction GatewayFetchButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$apiArgs = _ref.apiArgs,\n      apiArgs = _ref$apiArgs === void 0 ? {} : _ref$apiArgs,\n      gatewayRequestId = _ref.gatewayRequestId,\n      loadingGateway = _ref.loadingGateway,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n      _ref$onFail = _ref.onFail,\n      onFail = _ref$onFail === void 0 ? function () {} : _ref$onFail,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden;\n  return wp.element.createElement(fetch_api_button, {\n    id: gatewayRequestId,\n    loadingState: loadingGateway,\n    initialLabel: initialLabel,\n    label: label,\n    apiArgs: apiArgs,\n    onFail: onFail,\n    onLoading: onLoading,\n    onSuccess: onSuccess,\n    isHidden: isHidden\n  });\n}\n\n/* harmony default export */ const gateway_fetch_button = (gateway_fetch_button_compose(gateway_fetch_button_withSelect(withSelectGateways))(GatewayFetchButton));\n;// CONCATENATED MODULE: ./package/stores/actions/constants.js\n/* harmony default export */ const constants = ({\n  setCurrentAction: \'SET_CURRENT_ACTION\',\n  setLoading: \'SET_LOADING\',\n  setLoadingResult: \'SET_LOADING\',\n  updateCurrentSettings: \'UPDATE_ACTION_SETTINGS\',\n  updateCurrentConditions: \'UPDATE_ACTION_CONDITIONS\',\n  addCallback: \'ADD_CALLBACK\',\n  setMeta: \'SET_CURRENT_META\',\n  clearCurrent: \'CLEAR_CURRENT\'\n});\n;// CONCATENATED MODULE: ./package/stores/actions/loading.state.js\nfunction loading_state_toConsumableArray(arr) { return loading_state_arrayWithoutHoles(arr) || loading_state_iterableToArray(arr) || loading_state_unsupportedIterableToArray(arr) || loading_state_nonIterableSpread(); }\n\nfunction loading_state_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction loading_state_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return loading_state_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return loading_state_arrayLikeToArray(o, minLen); }\n\nfunction loading_state_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction loading_state_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return loading_state_arrayLikeToArray(arr); }\n\nfunction loading_state_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/* harmony default export */ const loading_state = ({\n  id: -1,\n  state: \'\',\n  success: false,\n  response: {},\n  loading: false,\n  buttonClassName: loading_state_toConsumableArray(initClasses)\n});\n;// CONCATENATED MODULE: ./package/stores/actions/selectors.js\nfunction selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? selectors_ownKeys(Object(source), !0).forEach(function (key) { selectors_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar selectors_self = {\n  getLoadingIndex: function getLoadingIndex(state, actionId) {\n    return state.loadingState.findIndex(function (action) {\n      return action.id === actionId;\n    });\n  },\n  getLoading: function getLoading(state, actionId) {\n    var actionIndex = selectors_self.getLoadingIndex(state, actionId);\n    return -1 !== actionIndex ? state.loadingState[actionIndex] : selectors_objectSpread({}, loading_state);\n  },\n  getCallback: function getCallback(state, actionType) {\n    return state.callbacks[actionType];\n  }\n};\n/* harmony default export */ const selectors = (selectors_objectSpread(selectors_objectSpread({}, selectors_self), {}, {\n  isSettingsModal: function isSettingsModal(state) {\n    var _state$meta;\n\n    return \'settings\' === ((_state$meta = state.meta) === null || _state$meta === void 0 ? void 0 : _state$meta.modalType);\n  },\n  isConditionalModal: function isConditionalModal(state) {\n    var _state$meta2;\n\n    return \'conditions\' === ((_state$meta2 = state.meta) === null || _state$meta2 === void 0 ? void 0 : _state$meta2.modalType);\n  },\n  getMetaIndex: function getMetaIndex(state) {\n    var _state$meta3;\n\n    return (_state$meta3 = state.meta) === null || _state$meta3 === void 0 ? void 0 : _state$meta3.index;\n  },\n  getCurrentAction: function getCurrentAction(state) {\n    return state.currentAction;\n  },\n  getCurrentCallback: function getCurrentCallback(state) {\n    var _state$currentAction$, _state$currentAction;\n\n    var type = (_state$currentAction$ = (_state$currentAction = state.currentAction) === null || _state$currentAction === void 0 ? void 0 : _state$currentAction.type) !== null && _state$currentAction$ !== void 0 ? _state$currentAction$ : false;\n    return selectors_self.getCallback(state, type);\n  },\n  getCurrentSettings: function getCurrentSettings(state) {\n    var _state$currentAction$2, _state$currentAction2, _state$currentAction$3, _state$currentAction3, _settings$type;\n\n    var settings = (_state$currentAction$2 = (_state$currentAction2 = state.currentAction) === null || _state$currentAction2 === void 0 ? void 0 : _state$currentAction2.settings) !== null && _state$currentAction$2 !== void 0 ? _state$currentAction$2 : {};\n    var type = (_state$currentAction$3 = (_state$currentAction3 = state.currentAction) === null || _state$currentAction3 === void 0 ? void 0 : _state$currentAction3.type) !== null && _state$currentAction$3 !== void 0 ? _state$currentAction$3 : false;\n    return (_settings$type = settings[type]) !== null && _settings$type !== void 0 ? _settings$type : {};\n  },\n  getCurrentLoading: function getCurrentLoading(state) {\n    var _state$currentAction4;\n\n    var actionId = (_state$currentAction4 = state.currentAction) === null || _state$currentAction4 === void 0 ? void 0 : _state$currentAction4.id;\n    return selectors_self.getLoading(state, actionId);\n  },\n  dangerGetAllLoading: function dangerGetAllLoading(state) {\n    return state.loadingState;\n  }\n}));\n;// CONCATENATED MODULE: ./package/stores/actions/functions.js\nfunction functions_toConsumableArray(arr) { return functions_arrayWithoutHoles(arr) || functions_iterableToArray(arr) || functions_unsupportedIterableToArray(arr) || functions_nonIterableSpread(); }\n\nfunction functions_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction functions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return functions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return functions_arrayLikeToArray(o, minLen); }\n\nfunction functions_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction functions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return functions_arrayLikeToArray(arr); }\n\nfunction functions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction functions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction functions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? functions_ownKeys(Object(source), !0).forEach(function (key) { functions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : functions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction functions_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar getLoadingItem = function getLoadingItem() {\n  var additional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var item = functions_objectSpread({}, loading_state);\n\n  if (additional.state) {\n    item.buttonClassName = [].concat(functions_toConsumableArray(initClasses), [additional.state]);\n  }\n\n  return functions_objectSpread(functions_objectSpread({}, item), additional);\n};\n\n/* harmony default export */ const functions = ({\n  getLoadingItem: getLoadingItem\n});\n;// CONCATENATED MODULE: ./package/helpers/actions/action-wrapper.js\nfunction action_wrapper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction action_wrapper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? action_wrapper_ownKeys(Object(source), !0).forEach(function (key) { action_wrapper_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : action_wrapper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction action_wrapper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar withFilters = wp.components.withFilters;\nfunction withActionLocalizeScript(actionType, ActionInstance) {\n  var localizedData = fromLocalizeHelper(\'getLocalizedFullPack\')(actionType);\n  return function (props) {\n    var onChangeSetting = function onChangeSetting(value, key) {\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), {}, action_wrapper_defineProperty({}, key, value)));\n    };\n\n    var onChangeSettingObj = function onChangeSettingObj(value) {\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), value));\n    };\n\n    var getMapField = function getMapField(_ref) {\n      var _ref$source = _ref.source,\n          source = _ref$source === void 0 ? \'fields_map\' : _ref$source,\n          name = _ref.name;\n      var settings = props.settings;\n\n      if (typeof settings[source] !== \'undefined\' && typeof settings[source][name] !== \'undefined\') {\n        return settings[source][name];\n      }\n\n      return \'\';\n    };\n\n    var setMapField = function setMapField(_ref2) {\n      var _ref2$source = _ref2.source,\n          source = _ref2$source === void 0 ? \'fields_map\' : _ref2$source,\n          nameField = _ref2.nameField,\n          value = _ref2.value;\n\n      var fieldsMap = action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings[source]), {}, action_wrapper_defineProperty({}, nameField, value));\n\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), {}, action_wrapper_defineProperty({}, source, fieldsMap)));\n    };\n\n    var additionalProps = {\n      onChangeSetting: onChangeSetting,\n      getMapField: getMapField,\n      setMapField: setMapField,\n      onChangeSettingObj: onChangeSettingObj\n    };\n\n    var resultProps = action_wrapper_objectSpread(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props), localizedData), additionalProps);\n\n    var CustomSettings = withFilters("jet.fb.render.action.".concat(actionType))(function () {\n      return null;\n    });\n    return wp.element.createElement(current_action_edit.Provider, {\n      value: resultProps\n    }, wp.element.createElement(ActionInstance, resultProps), wp.element.createElement(CustomSettings, resultProps));\n  };\n}\n;// CONCATENATED MODULE: ./package/stores/actions/dispatchers.js\nvar _constants$setCurrent;\n\nfunction dispatchers_toConsumableArray(arr) { return dispatchers_arrayWithoutHoles(arr) || dispatchers_iterableToArray(arr) || dispatchers_unsupportedIterableToArray(arr) || dispatchers_nonIterableSpread(); }\n\nfunction dispatchers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction dispatchers_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction dispatchers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return dispatchers_arrayLikeToArray(arr); }\n\nfunction dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? dispatchers_ownKeys(Object(source), !0).forEach(function (key) { dispatchers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/* harmony default export */ const dispatchers = (_constants$setCurrent = {}, dispatchers_defineProperty(_constants$setCurrent, constants.setCurrentAction, function (state, action) {\n  var update = {};\n\n  if (\'function\' === typeof action.item) {\n    update.currentAction = action.item(state.currentAction);\n  } else {\n    update.currentAction = action.item;\n  }\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), update);\n}), dispatchers_defineProperty(_constants$setCurrent, constants.setMeta, function (state, action) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    meta: dispatchers_objectSpread({}, action.item)\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.clearCurrent, function (state) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: {},\n    meta: {}\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.setLoading, function (state, action) {\n  var actionIndex = selectors.getLoadingIndex(state, action.state.id);\n\n  var loading = dispatchers_toConsumableArray(state.loadingState);\n\n  if (-1 !== actionIndex) {\n    loading[actionIndex] = functions.getLoadingItem(action.state);\n  } else {\n    loading.push(functions.getLoadingItem(action.state));\n  }\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    loadingState: loading\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.updateCurrentSettings, function (state, action) {\n  var _state$currentAction = state.currentAction,\n      settings = _state$currentAction.settings,\n      type = _state$currentAction.type;\n\n  var updateSettings = dispatchers_objectSpread(dispatchers_objectSpread({}, selectors.getCurrentSettings(state)), action.item);\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: dispatchers_objectSpread(dispatchers_objectSpread({}, state.currentAction), {}, {\n      settings: dispatchers_objectSpread(dispatchers_objectSpread({}, settings), {}, dispatchers_defineProperty({}, type, updateSettings))\n    })\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.updateCurrentConditions, function (state, action) {\n  var _state$currentAction$ = state.currentAction.conditions,\n      conditions = _state$currentAction$ === void 0 ? [] : _state$currentAction$;\n  var update = \'function\' === typeof action.item ? action.item(conditions) : action.item;\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: dispatchers_objectSpread(dispatchers_objectSpread({}, state.currentAction), {}, {\n      conditions: update\n    })\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.addCallback, function (state, action) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    callbacks: dispatchers_objectSpread(dispatchers_objectSpread({}, state.callbacks), {}, dispatchers_defineProperty({}, action.actionType, withActionLocalizeScript(action.actionType, action.callback)))\n  });\n}), _constants$setCurrent);\n;// CONCATENATED MODULE: ./package/stores/actions/default.state.js\n\n/* harmony default export */ const default_state = ({\n  currentAction: {},\n  callbacks: {},\n  meta: {},\n  loadingState: [functions.getLoadingItem()]\n});\n;// CONCATENATED MODULE: ./package/stores/actions/reducer.js\n\n\n/* harmony default export */ function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : default_state;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/actions/actions.js\n\n/* harmony default export */ const actions = ({\n  setCurrentAction: function setCurrentAction() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      type: constants.setCurrentAction,\n      item: item\n    };\n  },\n  setMeta: function setMeta(item) {\n    return {\n      type: constants.setMeta,\n      item: item\n    };\n  },\n  clearCurrent: function clearCurrent() {\n    return {\n      type: constants.clearCurrent\n    };\n  },\n  setLoading: function setLoading(item) {\n    return {\n      type: constants.setLoading,\n      state: {\n        id: item.actionId,\n        state: \'loading\',\n        loading: true\n      }\n    };\n  },\n  setLoadingResult: function setLoadingResult(item) {\n    return {\n      type: constants.setLoadingResult,\n      state: {\n        id: item.actionId,\n        state: item.success ? \'is-valid\' : \'is-invalid\',\n        success: item.success,\n        response: item.response,\n        loading: false\n      }\n    };\n  },\n  updateCurrentSettings: function updateCurrentSettings(item) {\n    return {\n      type: constants.updateCurrentSettings,\n      item: item\n    };\n  },\n  updateCurrentConditions: function updateCurrentConditions(item) {\n    return {\n      type: constants.updateCurrentConditions,\n      item: item\n    };\n  },\n  addCallback: function addCallback(actionType, callback) {\n    return {\n      type: constants.addCallback,\n      actionType: actionType,\n      callback: callback\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/actions/index.js\n\n\n\nvar createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const stores_actions = (createReduxStore(\'jet-forms/actions\', {\n  reducer: reducer,\n  actions: actions,\n  selectors: selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/gateways/constants.js\n/* harmony default export */ const gateways_constants = ({\n  clearGateway: \'CLEAR_GATEWAY\',\n  clearScenario: \'CLEAR_SCENARIO\',\n  setScenario: \'SET_CURRENT_GATEWAY_SCENARIO\',\n  setGateway: \'SET_CURRENT_GATEWAY\',\n  setGatewaySpecific: \'SET_CURRENT_GATEWAY_SPECIFIC\',\n  setGatewayInner: \'SET_CURRENT_GATEWAY_INNER\',\n  setRequest: \'SET_CURRENT_REQUEST\',\n  setCurrentScenario: \'SET_CURRENT_SCENARIO\',\n  registerEventType: \'REGISTER_EVENT_TYPE\',\n  hardSetGateway: \'HARD_SET_CURRENT_GATEWAY\',\n  hardSetGatewaySpecific: \'HARD_SET_CURRENT_GATEWAY_SPECIFIC\'\n});\n;// CONCATENATED MODULE: ./package/stores/gateways/selectors.js\nfunction gateways_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction gateways_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? gateways_selectors_ownKeys(Object(source), !0).forEach(function (key) { gateways_selectors_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : gateways_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction gateways_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar selectors_selectors = {\n  getCurrentRequestId: function getCurrentRequestId(state) {\n    return state.currentRequest.id;\n  },\n  getCurrentRequest: function getCurrentRequest(state) {\n    return state.currentRequest;\n  },\n  getScenario: function getScenario(state) {\n    return state.currentScenario;\n  },\n  getScenarioId: function getScenarioId(state) {\n    var _state$currentScenari;\n\n    return (_state$currentScenari = state.currentScenario) === null || _state$currentScenari === void 0 ? void 0 : _state$currentScenari.id;\n  },\n  getGatewayId: function getGatewayId(state) {\n    var _state$currentGateway;\n\n    return (_state$currentGateway = state.currentGateway) === null || _state$currentGateway === void 0 ? void 0 : _state$currentGateway.gateway;\n  },\n  getGateway: function getGateway(state) {\n    return state.currentGateway;\n  },\n  getEventTypes: function getEventTypes(state) {\n    return state.eventTypes;\n  }\n};\n/* harmony default export */ const gateways_selectors = (gateways_selectors_objectSpread(gateways_selectors_objectSpread({}, selectors_selectors), {}, {\n  getGatewaySpecific: function getGatewaySpecific(state) {\n    return state.currentGateway[selectors_selectors.getGatewayId(state)] || {};\n  }\n}));\n;// CONCATENATED MODULE: ./package/stores/gateways/dispatchers.js\nvar _constants$clearGatew;\n\nfunction gateways_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction gateways_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? gateways_dispatchers_ownKeys(Object(source), !0).forEach(function (key) { gateways_dispatchers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : gateways_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction gateways_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/* harmony default export */ const gateways_dispatchers = (_constants$clearGatew = {}, gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.clearGateway, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: {}\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.clearScenario, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: {}\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setScenario, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario), action.item || {})\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGateway, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), action.item)\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGatewaySpecific, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), {}, gateways_dispatchers_defineProperty({}, state.currentGateway.gateway, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, gateways_selectors.getGatewaySpecific(state)), action.item)))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGatewayInner, function (state, action) {\n  var _action$item = action.item,\n      key = _action$item.key,\n      value = _action$item.value;\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), {}, gateways_dispatchers_defineProperty({}, key, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway[key] || {}), value)))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setRequest, function (state, action) {\n  var _action$item2;\n\n  var items = [gateways_selectors.getGatewayId(state), (_action$item2 = action.item) === null || _action$item2 === void 0 ? void 0 : _action$item2.id].filter(function (value) {\n    return value;\n  });\n  action.item.id = items.join(\'/\');\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentRequest: action.item\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setCurrentScenario, function (state, action) {\n  var _state$currentScenari, _state$currentScenari2;\n\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario), {}, gateways_dispatchers_defineProperty({}, (_state$currentScenari = state.currentScenario) === null || _state$currentScenari === void 0 ? void 0 : _state$currentScenari.id, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario[(_state$currentScenari2 = state.currentScenario) === null || _state$currentScenari2 === void 0 ? void 0 : _state$currentScenari2.id] || {}), action.item || {})))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.hardSetGateway, function (state, action) {\n  if (action.item) {\n    state.currentGateway[action.item] = action.value;\n  }\n\n  return gateways_dispatchers_objectSpread({}, state);\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.hardSetGatewaySpecific, function (state, action) {\n  var _state$currentGateway;\n\n  if (action.item && (_state$currentGateway = state.currentGateway) !== null && _state$currentGateway !== void 0 && _state$currentGateway.gateway) {\n    var _state$currentGateway2, _state$currentGateway3;\n\n    state.currentGateway[(_state$currentGateway2 = state.currentGateway) === null || _state$currentGateway2 === void 0 ? void 0 : _state$currentGateway2.gateway] = {};\n    state.currentGateway[(_state$currentGateway3 = state.currentGateway) === null || _state$currentGateway3 === void 0 ? void 0 : _state$currentGateway3.gateway][action.item] = action.value;\n  }\n\n  return gateways_dispatchers_objectSpread({}, state);\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.registerEventType, function (state, action) {\n  var _action$item$gateway, _action$item3, _state$currentGateway4, _action$item$scenario, _action$item4, _state$currentScenari3;\n\n  var event = gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, action.item), {}, {\n    gateway: (_action$item$gateway = (_action$item3 = action.item) === null || _action$item3 === void 0 ? void 0 : _action$item3.gateway) !== null && _action$item$gateway !== void 0 ? _action$item$gateway : (_state$currentGateway4 = state.currentGateway) === null || _state$currentGateway4 === void 0 ? void 0 : _state$currentGateway4.gateway,\n    scenario: (_action$item$scenario = (_action$item4 = action.item) === null || _action$item4 === void 0 ? void 0 : _action$item4.scenario) !== null && _action$item$scenario !== void 0 ? _action$item$scenario : (_state$currentScenari3 = state.currentScenario) === null || _state$currentScenari3 === void 0 ? void 0 : _state$currentScenari3.id\n  });\n\n  state.eventTypes.push(event);\n  return state;\n}), _constants$clearGatew);\n;// CONCATENATED MODULE: ./package/stores/gateways/reducer.js\n\nvar DEFAULT_STATE = {\n  currentRequest: {\n    id: -1\n  },\n  currentGateway: {},\n  currentScenario: {},\n  eventTypes: []\n};\n/* harmony default export */ function gateways_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = gateways_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/gateways/actions.js\n\n/* harmony default export */ const gateways_actions = ({\n  clearGateway: function clearGateway() {\n    return {\n      type: gateways_constants.clearGateway\n    };\n  },\n  clearScenario: function clearScenario() {\n    return {\n      type: gateways_constants.clearScenario\n    };\n  },\n  setRequest: function setRequest(item) {\n    return {\n      type: gateways_constants.setRequest,\n      item: item\n    };\n  },\n  setGateway: function setGateway(item) {\n    return {\n      type: gateways_constants.setGateway,\n      item: item\n    };\n  },\n  setGatewayInner: function setGatewayInner(item) {\n    return {\n      type: gateways_constants.setGatewayInner,\n      item: item\n    };\n  },\n  setGatewaySpecific: function setGatewaySpecific(item) {\n    return {\n      type: gateways_constants.setGatewaySpecific,\n      item: item\n    };\n  },\n  setScenario: function setScenario(item) {\n    return {\n      type: gateways_constants.setScenario,\n      item: item\n    };\n  },\n  setCurrentScenario: function setCurrentScenario(item) {\n    return {\n      type: gateways_constants.setCurrentScenario,\n      item: item\n    };\n  },\n  registerEventType: function registerEventType(item) {\n    return {\n      type: gateways_constants.registerEventType,\n      item: item\n    };\n  },\n  hardSetGateway: function hardSetGateway(item) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return {\n      type: gateways_constants.hardSetGateway,\n      item: item,\n      value: value\n    };\n  },\n  hardSetGatewaySpecific: function hardSetGatewaySpecific(item) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return {\n      type: gateways_constants.hardSetGatewaySpecific,\n      item: item,\n      value: value\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/gateways/index.js\n\n\n\nvar gateways_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const gateways = (gateways_createReduxStore(\'jet-forms/gateways\', {\n  reducer: gateways_reducer,\n  actions: gateways_actions,\n  selectors: gateways_selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/events/constants.js\n/* harmony default export */ const events_constants = ({\n  register: \'REGISTER\',\n  lockActions: \'LOCK_ACTIONS\'\n});\n;// CONCATENATED MODULE: ./package/stores/events/selectors.js\nfunction events_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction events_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? events_selectors_ownKeys(Object(source), !0).forEach(function (key) { events_selectors_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : events_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction events_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction selectors_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = selectors_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction selectors_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return selectors_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return selectors_arrayLikeToArray(o, minLen); }\n\nfunction selectors_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar events_selectors_selectors = {\n  getTypeIndex: function getTypeIndex(state, slug) {\n    return state.types.findIndex(function (event) {\n      return event.value === slug;\n    });\n  },\n  getTypes: function getTypes(state) {\n    return state.types;\n  },\n  getGatewayTypes: function getGatewayTypes(state) {\n    return state.types.filter(function (event) {\n      return \'gateway\' in event;\n    });\n  },\n  getAlwaysTypes: function getAlwaysTypes(state) {\n    return state.types.filter(function (event) {\n      return \'always\' in event;\n    });\n  },\n  getType: function getType(state, slug) {\n    var index = events_selectors_selectors.getTypeIndex(state, slug);\n    return state.types[index];\n  },\n  getUnsupported: function getUnsupported(state, actionId) {\n    var _state$lockedActions$;\n\n    var action = (_state$lockedActions$ = state.lockedActions[actionId]) !== null && _state$lockedActions$ !== void 0 ? _state$lockedActions$ : false;\n\n    if (false === action) {\n      return [];\n    }\n\n    return action.unsupported;\n  },\n  getSupported: function getSupported(state, actionId) {\n    var _state$lockedActions$2;\n\n    var action = (_state$lockedActions$2 = state.lockedActions[actionId]) !== null && _state$lockedActions$2 !== void 0 ? _state$lockedActions$2 : false;\n\n    if (false === action) {\n      return [];\n    }\n\n    return action.supported;\n  },\n  isValid: function isValid(state, actionId, eventSlug) {\n    var unsupported = events_selectors_selectors.getUnsupported(state, actionId);\n\n    if (unsupported.length && unsupported.includes(eventSlug)) {\n      return false;\n    }\n\n    var supported = events_selectors_selectors.getSupported(state, actionId);\n    return !supported.length || supported.includes(eventSlug);\n  },\n  filterList: function filterList(state, actionId, eventList) {\n    return eventList.filter(function (current) {\n      return events_selectors_selectors.isValid(state, actionId, current);\n    });\n  },\n  getHelpMap: function getHelpMap(state) {\n    var map = {};\n\n    var _iterator = selectors_createForOfIteratorHelper(state.types),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n            value = _step$value.value,\n            help = _step$value.help;\n        map[value] = help;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return map;\n  }\n};\n/* harmony default export */ const events_selectors = (events_selectors_objectSpread({}, events_selectors_selectors));\n;// CONCATENATED MODULE: ./package/stores/events/dispatchers.js\nvar _constants$register$c;\n\nfunction events_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction events_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? events_dispatchers_ownKeys(Object(source), !0).forEach(function (key) { events_dispatchers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : events_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction events_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction dispatchers_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = events_dispatchers_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction events_dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return events_dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return events_dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction events_dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n/* harmony default export */ const events_dispatchers = (_constants$register$c = {}, events_dispatchers_defineProperty(_constants$register$c, events_constants.register, function (state, action) {\n  var _iterator = dispatchers_createForOfIteratorHelper(action.items),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      item.title = item.label;\n      var issetIndex = events_selectors.getTypeIndex(state, item.value); // is new event type\n\n      if (-1 === issetIndex) {\n        state.types.push(events_dispatchers_objectSpread({}, item));\n      } else {\n        state.types[issetIndex] = events_dispatchers_objectSpread({}, item);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return state;\n}), events_dispatchers_defineProperty(_constants$register$c, events_constants.lockActions, function (state, action) {\n  var _iterator2 = dispatchers_createForOfIteratorHelper(window.jetFormActionTypes),\n      _step2;\n\n  try {\n    var _loop = function _loop() {\n      var _window$actionSelf;\n\n      var _step2$value = _step2.value,\n          id = _step2$value.id,\n          actionSelf = _step2$value.self;\n      var current = (_window$actionSelf = window[actionSelf]) !== null && _window$actionSelf !== void 0 ? _window$actionSelf : false;\n\n      if (false === current) {\n        return "continue";\n      }\n\n      var unSup = current.__unsupported_events,\n          sup = current.__supported_events;\n      var action = {\n        unsupported: state.types.filter(function (_ref) {\n          var self = _ref.self;\n          return unSup.includes(self);\n        }).map(function (_ref2) {\n          var value = _ref2.value;\n          return value;\n        }),\n        supported: state.types.filter(function (_ref3) {\n          var self = _ref3.self;\n          return sup.includes(self);\n        }).map(function (_ref4) {\n          var value = _ref4.value;\n          return value;\n        })\n      };\n\n      if (!action.supported.length && !action.unsupported.length) {\n        return "continue";\n      }\n\n      state.lockedActions[id] = action;\n    };\n\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _ret = _loop();\n\n      if (_ret === "continue") continue;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return state;\n}), _constants$register$c);\n;// CONCATENATED MODULE: ./package/stores/events/reducer.js\n\nvar reducer_DEFAULT_STATE = {\n  types: [],\n  labels: {},\n  lockedActions: {}\n};\n/* harmony default export */ function events_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : reducer_DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = events_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/events/actions.js\n\n/* harmony default export */ const events_actions = ({\n  register: function register(items) {\n    return {\n      type: events_constants.register,\n      items: items\n    };\n  },\n  lockActions: function lockActions() {\n    return {\n      type: events_constants.lockActions\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/events/index.js\n\n\n\nvar events_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const events = (events_createReduxStore(\'jet-forms/events\', {\n  reducer: events_reducer,\n  actions: events_actions,\n  selectors: events_selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/block-conditions/constants.js\n/* harmony default export */ const block_conditions_constants = ({\n  register: \'REGISTER\',\n  registerFunctionsFilters: \'REGISTER_FUNCTION_FILTERS\'\n});\n;// CONCATENATED MODULE: ./package/stores/block-conditions/dispatchers.js\nvar dispatchers_constants$register$c;\n\nfunction block_conditions_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction block_conditions_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? block_conditions_dispatchers_ownKeys(Object(source), !0).forEach(function (key) { block_conditions_dispatchers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : block_conditions_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction block_conditions_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction block_conditions_dispatchers_toConsumableArray(arr) { return block_conditions_dispatchers_arrayWithoutHoles(arr) || block_conditions_dispatchers_iterableToArray(arr) || block_conditions_dispatchers_unsupportedIterableToArray(arr) || block_conditions_dispatchers_nonIterableSpread(); }\n\nfunction block_conditions_dispatchers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction block_conditions_dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return block_conditions_dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return block_conditions_dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction block_conditions_dispatchers_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction block_conditions_dispatchers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return block_conditions_dispatchers_arrayLikeToArray(arr); }\n\nfunction block_conditions_dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/* harmony default export */ const block_conditions_dispatchers = (dispatchers_constants$register$c = {}, block_conditions_dispatchers_defineProperty(dispatchers_constants$register$c, block_conditions_constants.register, function (state, action) {\n  var _action$items = action.items,\n      operators = _action$items.operators,\n      functions = _action$items.functions,\n      render_states = _action$items.render_states;\n  state.operators = block_conditions_dispatchers_toConsumableArray(operators);\n  state.functions = block_conditions_dispatchers_toConsumableArray(functions);\n  state.renderStates = block_conditions_dispatchers_toConsumableArray(render_states);\n  return state;\n}), block_conditions_dispatchers_defineProperty(dispatchers_constants$register$c, block_conditions_constants.registerFunctionsFilters, function (state, action) {\n  state.functionFilters = block_conditions_dispatchers_objectSpread(block_conditions_dispatchers_objectSpread({}, state.functionFilters), action.item);\n  return state;\n}), dispatchers_constants$register$c);\n;// CONCATENATED MODULE: ./package/stores/block-conditions/reducer.js\n\n\nvar block_conditions_reducer_DEFAULT_STATE = {\n  functions: [],\n  operators: [],\n  renderStates: [],\n  functionFilters: {\n    set_value: function set_value(item, blockProps) {\n      var clientId = blockProps[\'data-block\'];\n      return 1 === getInnerBlocks(clientId).length;\n    }\n  }\n};\n/* harmony default export */ function block_conditions_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : block_conditions_reducer_DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = block_conditions_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/block-conditions/actions.js\n\n/* harmony default export */ const block_conditions_actions = ({\n  register: function register(items) {\n    return {\n      type: block_conditions_constants.register,\n      items: items\n    };\n  },\n  registerFunctionsFilters: function registerFunctionsFilters(item) {\n    return {\n      type: block_conditions_constants.registerFunctionsFilters,\n      item: item\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/block-conditions/selectors.js\nfunction block_conditions_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction block_conditions_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? block_conditions_selectors_ownKeys(Object(source), !0).forEach(function (key) { block_conditions_selectors_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : block_conditions_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction block_conditions_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar block_conditions_selectors_selectors = {\n  getFunctions: function getFunctions(state) {\n    return state.functions;\n  },\n  getOperators: function getOperators(state) {\n    return state.operators;\n  },\n  getFunctionFilters: function getFunctionFilters(state) {\n    return state.functionFilters;\n  },\n  getRenderStates: function getRenderStates(state) {\n    return state.renderStates;\n  },\n  getRenderStatesList: function getRenderStatesList(state) {\n    return state.renderStates.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n  },\n  getFilteredFunctions: function getFilteredFunctions(state, blockProps) {\n    return state.functions.filter(function (item) {\n      var _state$functionFilter;\n\n      var callback = (_state$functionFilter = state.functionFilters[item.value]) !== null && _state$functionFilter !== void 0 ? _state$functionFilter : false;\n\n      if (false === callback) {\n        return true;\n      }\n\n      return callback(item, blockProps);\n    });\n  }\n};\n/* harmony default export */ const block_conditions_selectors = (block_conditions_selectors_objectSpread({}, block_conditions_selectors_selectors));\n;// CONCATENATED MODULE: ./package/stores/block-conditions/index.js\n\n\n\nvar block_conditions_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const block_conditions = (block_conditions_createReduxStore(\'jet-forms/block-conditions\', {\n  reducer: block_conditions_reducer,\n  actions: block_conditions_actions,\n  selectors: block_conditions_selectors\n}));\n// EXTERNAL MODULE: ./package/stores/subscribers/migrate-gateways-settings.js\nvar migrate_gateways_settings = __webpack_require__(6089);\n;// CONCATENATED MODULE: ./package/stores/manager.js\n\n\n\n\n\nvar manager_wp$data = wp.data,\n    register = manager_wp$data.register,\n    dispatch = manager_wp$data.dispatch;\nregister(gateways);\nregister(events);\nregister(stores_actions);\nregister(block_conditions);\ndispatch(\'jet-forms/block-conditions\').register(window.jetFormBlockConditions);\ndispatch(\'jet-forms/events\').register(window.jetFormEvents.types);\ndispatch(\'jet-forms/events\').lockActions();\n;// CONCATENATED MODULE: ./package/context/safe.delete.js\nvar safe_delete_createContext = wp.element.createContext;\n/* harmony default export */ const safe_delete = (safe_delete_createContext(false));\n;// CONCATENATED MODULE: ./package/context/repeater.item.js\nvar repeater_item_createContext = wp.element.createContext;\n/* harmony default export */ const repeater_item = (repeater_item_createContext({\n  currentItem: {},\n  changeCurrentItem: function changeCurrentItem() {},\n  currentIndex: -1\n}));\n;// CONCATENATED MODULE: ./package/context/action.list.item.js\nvar action_list_item_createContext = wp.element.createContext;\n/* harmony default export */ const action_list_item = (action_list_item_createContext({\n  index: -1,\n  action: {}\n}));\n;// CONCATENATED MODULE: ./package/context/current.property.map.js\nvar current_property_map_createContext = wp.element.createContext;\n/* harmony default export */ const current_property_map = (current_property_map_createContext({\n  FieldSelect: null,\n  property: \'\'\n}));\n;// CONCATENATED MODULE: ./package/components/fields/safe.delete.toggle.js\nfunction safe_delete_toggle_slicedToArray(arr, i) { return safe_delete_toggle_arrayWithHoles(arr) || safe_delete_toggle_iterableToArrayLimit(arr, i) || safe_delete_toggle_unsupportedIterableToArray(arr, i) || safe_delete_toggle_nonIterableRest(); }\n\nfunction safe_delete_toggle_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction safe_delete_toggle_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return safe_delete_toggle_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return safe_delete_toggle_arrayLikeToArray(o, minLen); }\n\nfunction safe_delete_toggle_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction safe_delete_toggle_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction safe_delete_toggle_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar safe_delete_toggle_ToggleControl = wp.components.ToggleControl;\nvar safe_delete_toggle_ = wp.i18n.__;\nvar safe_delete_toggle_useState = wp.element.useState;\n\nfunction SafeDeleteToggle(props) {\n  var _useState = safe_delete_toggle_useState(true),\n      _useState2 = safe_delete_toggle_slicedToArray(_useState, 2),\n      isSafeDeleting = _useState2[0],\n      setSafeDeleting = _useState2[1];\n\n  return wp.element.createElement(React.Fragment, null, wp.element.createElement(safe_delete_toggle_ToggleControl, {\n    label: safe_delete_toggle_(\'Safe deleting\', \'jet-form-builder\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  }), wp.element.createElement(safe_delete.Provider, {\n    value: isSafeDeleting\n  }, props.children));\n}\n\n/* harmony default export */ const safe_delete_toggle = (SafeDeleteToggle);\n;// CONCATENATED MODULE: ./package/helpers/hooks/useRepeaterState.js\nfunction useRepeaterState_toConsumableArray(arr) { return useRepeaterState_arrayWithoutHoles(arr) || useRepeaterState_iterableToArray(arr) || useRepeaterState_unsupportedIterableToArray(arr) || useRepeaterState_nonIterableSpread(); }\n\nfunction useRepeaterState_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction useRepeaterState_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return useRepeaterState_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useRepeaterState_arrayLikeToArray(o, minLen); }\n\nfunction useRepeaterState_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction useRepeaterState_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useRepeaterState_arrayLikeToArray(arr); }\n\nfunction useRepeaterState_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction useRepeaterState_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction useRepeaterState_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useRepeaterState_ownKeys(Object(source), !0).forEach(function (key) { useRepeaterState_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useRepeaterState_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction useRepeaterState_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar useRepeaterState_useContext = wp.element.useContext;\nvar useRepeaterState_ = wp.i18n.__;\n\nvar onSaveDeleting = function onSaveDeleting(index) {\n  return confirm(useRepeaterState_("Are you sure you want to remove item ".concat(index + 1, "?"), \'jet-form-builder\'));\n};\n/**\r\n *\r\n * @param setItemsData\r\n * @returns {{\r\n * cloneItem: function,\r\n * addNewItem: function,\r\n * changeCurrentItem: function,\r\n * toggleVisible: function,\r\n * moveDown: function,\r\n * moveUp: function,\r\n * removeOption: function\r\n * }}\r\n */\n\n\nfunction useRepeaterState(setItemsData) {\n  var isSafeDeleting = useRepeaterState_useContext(safe_delete);\n\n  var changeCurrentItem = function changeCurrentItem(valueToSet, index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index] = useRepeaterState_objectSpread(useRepeaterState_objectSpread({}, prev[index]), valueToSet);\n      return prevClone;\n    });\n  };\n\n  var removeOption = function removeOption(index) {\n    if (isSafeDeleting && !onSaveDeleting(index)) {\n      return;\n    }\n\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone.splice(index, 1);\n      return prevClone;\n    });\n  };\n\n  var addNewItem = function addNewItem(value) {\n    setItemsData(function (prev) {\n      return [].concat(useRepeaterState_toConsumableArray(prev), [useRepeaterState_objectSpread(useRepeaterState_objectSpread({}, value), {}, {\n        __visible: true\n      })]);\n    });\n  };\n\n  var cloneItem = function cloneItem(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref = [prevClone.slice(0, index + 1), prevClone.slice(index + 1)],\n          before = _ref[0],\n          after = _ref[1];\n      return [].concat(useRepeaterState_toConsumableArray(before), [prevClone[index]], useRepeaterState_toConsumableArray(after));\n    });\n  };\n\n  var moveRepeaterItem = function moveRepeaterItem(_ref2) {\n    var oldIndex = _ref2.oldIndex,\n        newIndex = _ref2.newIndex;\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref3 = [prevClone[oldIndex], prevClone[newIndex]];\n      prevClone[newIndex] = _ref3[0];\n      prevClone[oldIndex] = _ref3[1];\n      return prevClone;\n    });\n  };\n\n  var moveUp = function moveUp(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index - 1\n    });\n  };\n\n  var moveDown = function moveDown(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index + 1\n    });\n  };\n\n  var toggleVisible = function toggleVisible(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index].__visible = !prevClone[index].__visible;\n      return prevClone;\n    });\n  };\n\n  return {\n    changeCurrentItem: changeCurrentItem,\n    toggleVisible: toggleVisible,\n    moveDown: moveDown,\n    moveUp: moveUp,\n    cloneItem: cloneItem,\n    addNewItem: addNewItem,\n    removeOption: removeOption\n  };\n}\n\n/* harmony default export */ const hooks_useRepeaterState = (useRepeaterState);\n;// CONCATENATED MODULE: ./package/components/fields/repeater.add.new.js\n\nvar repeater_add_new_Button = wp.components.Button;\n\nfunction RepeaterAddNew(props) {\n  var item = props.item,\n      onSetState = props.onSetState,\n      functions = props.functions,\n      children = props.children;\n\n  var _ref = functions !== null && functions !== void 0 ? functions : hooks_useRepeaterState(onSetState),\n      addNewItem = _ref.addNewItem;\n\n  return wp.element.createElement(repeater_add_new_Button, {\n    isSecondary: true,\n    onClick: function onClick() {\n      return addNewItem(item);\n    }\n  }, children);\n}\n\n/* harmony default export */ const repeater_add_new = (RepeaterAddNew);\n;// CONCATENATED MODULE: ./package/components/fields/repeater.js\n\n\nvar repeater_wp$components = wp.components,\n    repeater_Card = repeater_wp$components.Card,\n    repeater_ButtonGroup = repeater_wp$components.ButtonGroup,\n    repeater_Button = repeater_wp$components.Button,\n    repeater_CardHeader = repeater_wp$components.CardHeader,\n    repeater_CardBody = repeater_wp$components.CardBody;\nvar repeater_ = wp.i18n.__;\n\nfunction Repeater(props) {\n  var items = props.items,\n      onSetState = props.onSetState,\n      functions = props.functions,\n      children = props.children;\n\n  var _ref = functions !== null && functions !== void 0 ? functions : hooks_useRepeaterState(onSetState),\n      cloneItem = _ref.cloneItem,\n      moveUp = _ref.moveUp,\n      moveDown = _ref.moveDown,\n      toggleVisible = _ref.toggleVisible,\n      _changeCurrentItem = _ref.changeCurrentItem,\n      removeOption = _ref.removeOption;\n\n  return wp.element.createElement("div", {\n    className: \'jet-form-builder__repeater-component\',\n    key: \'jet-form-builder-repeater\'\n  }, items.map(function (currentItem, index) {\n    return wp.element.createElement(repeater_Card, {\n      isElevated: true,\n      className: \'jet-form-builder__repeater-component-item\',\n      key: "jet-form-builder__repeater-component-item-".concat(index)\n    }, wp.element.createElement(repeater_CardHeader, {\n      className: \'repeater__item__header\'\n    }, wp.element.createElement("div", {\n      className: "repeater-item__left-heading"\n    }, wp.element.createElement(repeater_ButtonGroup, {\n      className: \'repeater-action-buttons\'\n    }, wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      icon: currentItem.__visible ? \'no-alt\' : \'edit\',\n      onClick: function onClick() {\n        return toggleVisible(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !Boolean(index),\n      icon: \'arrow-up-alt2\',\n      onClick: function onClick() {\n        return moveUp(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !(index < items.length - 1),\n      icon: \'arrow-down-alt2\',\n      onClick: function onClick() {\n        return moveDown(index);\n      },\n      className: \'repeater-action-button\'\n    })), wp.element.createElement("span", {\n      className: \'repeater-item-title\'\n    }, "#".concat(index + 1))), wp.element.createElement(repeater_ButtonGroup, null, wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      onClick: function onClick() {\n        return cloneItem(index);\n      }\n    }, repeater_(\'Clone\', \'jet-form-builder\')), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      isDestructive: true,\n      onClick: function onClick() {\n        return removeOption(index);\n      }\n    }, repeater_(\'Delete\', \'jet-form-builder\')))), currentItem.__visible && wp.element.createElement(repeater_CardBody, {\n      className: \'repeater-item__content\'\n    }, wp.element.createElement(repeater_item.Provider, {\n      value: {\n        currentItem: currentItem,\n        changeCurrentItem: function changeCurrentItem(data) {\n          return _changeCurrentItem(data, index);\n        },\n        currentIndex: index\n      }\n    }, children && children, !children && \'Set up your Repeater Template, please.\')));\n  }));\n}\n\n/* harmony default export */ const repeater = (Repeater);\n;// CONCATENATED MODULE: ./package/components/dynamic.property.select.js\nfunction dynamic_property_select_slicedToArray(arr, i) { return dynamic_property_select_arrayWithHoles(arr) || dynamic_property_select_iterableToArrayLimit(arr, i) || dynamic_property_select_unsupportedIterableToArray(arr, i) || dynamic_property_select_nonIterableRest(); }\n\nfunction dynamic_property_select_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction dynamic_property_select_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction dynamic_property_select_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction dynamic_property_select_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = dynamic_property_select_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction dynamic_property_select_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dynamic_property_select_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dynamic_property_select_arrayLikeToArray(o, minLen); }\n\nfunction dynamic_property_select_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar dynamic_property_select_wp$element = wp.element,\n    dynamic_property_select_useState = dynamic_property_select_wp$element.useState,\n    dynamic_property_select_useContext = dynamic_property_select_wp$element.useContext;\nvar dynamic_property_select_SelectControl = wp.components.SelectControl;\n\nfunction DynamicPropertySelect(_ref) {\n  var _properties;\n\n  var _ref$dynamic = _ref.dynamic,\n      dynamic = _ref$dynamic === void 0 ? [] : _ref$dynamic,\n      _ref$parseValue = _ref.parseValue,\n      parseValue = _ref$parseValue === void 0 ? null : _ref$parseValue,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$properties = _ref.properties,\n      properties = _ref$properties === void 0 ? null : _ref$properties;\n\n  // context with action props\n  var _useContext = dynamic_property_select_useContext(current_action_edit),\n      source = _useContext.source,\n      settings = _useContext.settings,\n      setMapField = _useContext.setMapField;\n\n  properties = (_properties = properties) !== null && _properties !== void 0 ? _properties : source.properties; // context with current field in fields map\n\n  var _useContext2 = dynamic_property_select_useContext(action_fields_map_context),\n      name = _useContext2.name,\n      index = _useContext2.index;\n\n  var _settings$fields_map = settings.fields_map,\n      fields_map = _settings$fields_map === void 0 ? {} : _settings$fields_map;\n\n  function getTypeFieldValue(value) {\n    var _dynamic$;\n\n    var _iterator = dynamic_property_select_createForOfIteratorHelper(properties),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var property = _step.value;\n\n        if (value === property.value) {\n          return value;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return parseValue ? parseValue(value) : (_dynamic$ = dynamic[0]) !== null && _dynamic$ !== void 0 ? _dynamic$ : \'\';\n  }\n\n  var _useState = dynamic_property_select_useState(function () {\n    var _fields_map$name;\n\n    return getTypeFieldValue((_fields_map$name = fields_map[name]) !== null && _fields_map$name !== void 0 ? _fields_map$name : \'\');\n  }),\n      _useState2 = dynamic_property_select_slicedToArray(_useState, 2),\n      currentProp = _useState2[0],\n      setCurrentProp = _useState2[1];\n\n  var getHelp = function getHelp() {\n    var _property$help;\n\n    var property = properties.find(function (_ref2) {\n      var value = _ref2.value;\n      return value === currentProp;\n    });\n    return (_property$help = property === null || property === void 0 ? void 0 : property.help) !== null && _property$help !== void 0 ? _property$help : \'\';\n  };\n\n  var FieldSelect = wp.element.createElement(dynamic_property_select_SelectControl, {\n    key: name + index,\n    value: currentProp,\n    options: properties,\n    help: getHelp(),\n    onChange: function onChange(value) {\n      var prop = getTypeFieldValue(value);\n      setCurrentProp(prop);\n      setMapField({\n        nameField: name,\n        value: dynamic.includes(value) ? \'\' : value\n      });\n    }\n  });\n  return wp.element.createElement(current_property_map.Provider, {\n    value: {\n      FieldSelect: FieldSelect,\n      property: currentProp\n    }\n  }, children && children, !children && FieldSelect);\n}\n\n/* harmony default export */ const dynamic_property_select = (DynamicPropertySelect);\n;// CONCATENATED MODULE: ./package/components/action.fetch.button.js\nvar action_fetch_button_excluded = ["currentAction"];\n\nfunction action_fetch_button_extends() { action_fetch_button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return action_fetch_button_extends.apply(this, arguments); }\n\nfunction action_fetch_button_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = action_fetch_button_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction action_fetch_button_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar action_fetch_button_compose = wp.compose.compose;\nvar action_fetch_button_withSelect = wp.data.withSelect;\n\nfunction ActionFetchButton(_ref) {\n  var currentAction = _ref.currentAction,\n      props = action_fetch_button_objectWithoutProperties(_ref, action_fetch_button_excluded);\n\n  return wp.element.createElement(fetch_api_button, action_fetch_button_extends({\n    id: currentAction.id\n  }, props));\n}\n\n/* harmony default export */ const action_fetch_button = (action_fetch_button_compose(action_fetch_button_withSelect(withCurrentAction), action_fetch_button_withSelect(withSelectActionLoading))(ActionFetchButton));\n;// CONCATENATED MODULE: ./package/manager.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // JFBComponents\n\nwindow.JetFBComponents = {\n  ActionFieldsMap: ActionFieldsMap,\n  ActionModal: components_action_modal,\n  ActionModalContext: action_modal,\n  SafeDeleteContext: safe_delete,\n  RepeaterItemContext: repeater_item,\n  ActionListItemContext: action_list_item,\n  CurrentActionEditContext: current_action_edit,\n  ActionFieldsMapContext: action_fields_map_context,\n  CurrentPropertyMapContext: current_property_map,\n  DynamicPropertySelect: dynamic_property_select,\n  SafeDeleteToggle: safe_delete_toggle,\n  RepeaterAddNew: repeater_add_new,\n  Repeater: repeater,\n  RequestButton: request_button,\n  ValidateButton: validate_button,\n  RequestLoadingButton: request_loading_button,\n  WrapperRequiredControl: WrapperRequiredControl,\n  DynamicPreset: dynamic_preset,\n  JetFieldsMapControl: fields_map,\n  FieldWithPreset: field_with_preset,\n  GlobalField: GlobalField,\n  AvailableMapField: AvailableMapField,\n  MapField: MapField,\n  FieldWrapper: field_wrapper,\n  MacrosInserter: macros_inserter,\n  RepeaterWithState: repeater_with_state,\n  AdvancedFields: AdvancedFields,\n  GeneralFields: GeneralFields,\n  ToolBarFields: ToolBarFields,\n  FieldControl: FieldControl,\n  PlaceholderMessage: placeholder_message,\n  HorizontalLine: horizontal_line,\n  FieldSettingsWrapper: FieldSettingsWrapper,\n  ActionMessages: action_messages,\n  GroupedSelectControl: grouped_select_control,\n  BaseHelp: base_help,\n  ValidateButtonWithStore: validate_button_with_store,\n  GatewayFetchButton: gateway_fetch_button,\n  ActionFetchButton: action_fetch_button\n}; // JFBFunctions\n\nwindow.JetFBActions = {\n  addAction: action_manager,\n  withPreset: preset_editor,\n  getFormFieldsByBlock: getFormFieldsByBlock,\n  getInnerBlocks: getInnerBlocks,\n  getAvailableFieldsString: getAvailableFieldsString,\n  getAvailableFields: getAvailableFields,\n  getFormFieldsBlocks: getFormFieldsBlocks,\n  getFieldsWithoutCurrent: getFieldsWithoutCurrent,\n  gatewayAttr: gatewayAttr,\n  gatewayLabel: gatewayLabel,\n  registerGateway: registerGateway,\n  Tools: tools,\n  event: tools_event,\n  listen: listen,\n  actionByTypeList: actionByTypeList,\n  getActionSettings: getActionSettings,\n  fromLocalizeHelper: fromLocalizeHelper,\n  renderGateway: renderGateway,\n  renderGatewayWithPlaceholder: renderGatewayWithPlaceholder,\n  gatewayActionAttributes: gateway_action_attrubites,\n  globalTab: globalTab,\n  versionCompare: versionCompare,\n  convertListToFieldsMap: convertListToFieldsMap,\n  maybeCyrToLatin: maybeCyrToLatin,\n  getConvertedName: getConvertedName,\n  getBlockControls: getBlockControls,\n  classnames: classnames,\n  getBlocksByName: getBlocksByName,\n  convertObjectToOptionsList: convertObjectToOptionsList,\n  prepareActionsListByType: prepareActionsListByType,\n  appendField: appendField\n}; // JFBHooks\n\nwindow.JetFBHooks = {\n  useActions: useActions,\n  useMetaState: useMetaState,\n  useSelectPostMeta: useSelectPostMeta,\n  useStateValidClasses: useStateValidClasses,\n  useStateLoadingClasses: useStateLoadingClasses,\n  useSuccessNotice: useSuccessNotice,\n  useRequestEvents: useRequestEvents,\n  useBlockConditions: useBlockConditions,\n  useUniqKey: useUniqKey,\n  useSanitizeFieldsMap: useSanitizeFieldsMap,\n  withRequestFields: withRequestFields,\n  useRequestFields: useRequestFields,\n  withSelectActionLoading: withSelectActionLoading,\n  withDispatchMeta: withDispatchMeta,\n  withSelectMeta: withSelectMeta,\n  withDispatchNotice: withDispatchNotice,\n  withSelectFormFields: withSelectFormFields,\n  withSelectGateways: withSelectGateways,\n  withDispatchGateways: withDispatchGateways,\n  withSelectActionsByType: withSelectActionsByType\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6044\n')},6089:()=>{eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getMeta = function getMeta() {\n  var select = wp.data.select;\n  return select('core/editor').getEditedPostAttribute('meta');\n};\n\nvar editMeta = function editMeta(name, objectValue) {\n  var dispatch = wp.data.dispatch;\n\n  var _dispatch = dispatch('core/editor'),\n      editPost = _dispatch.editPost;\n\n  var formBuilderMeta = getMeta();\n  editPost({\n    meta: _objectSpread(_objectSpread({}, formBuilderMeta), {}, _defineProperty({}, name, JSON.stringify(objectValue)))\n  });\n};\n\nvar getActiveActions = function getActiveActions(actions) {\n  var response = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(actions); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        action_id = _Object$entries$_i[0],\n        _Object$entries$_i$1$ = _Object$entries$_i[1].active,\n        active = _Object$entries$_i$1$ === void 0 ? false : _Object$entries$_i$1$;\n\n    if (!active) {\n      continue;\n    }\n\n    response.push(+action_id);\n  }\n\n  return response;\n};\n\nvar getGatewaysActions = function getGatewaysActions() {\n  var formBuilderMeta = getMeta();\n  var gateways = {},\n      actions = [];\n\n  try {\n    gateways = JSON.parse(formBuilderMeta['_jf_gateways']);\n  } catch (error) {\n    return [];\n  }\n\n  if (1 === gateways.last_migrate) {\n    throw 'migrated';\n  }\n\n  try {\n    actions = JSON.parse(formBuilderMeta['_jf_actions']);\n  } catch (error) {\n    return [gateways];\n  }\n\n  return [gateways, actions];\n};\n\nvar migrate = function migrate(gateways, actions) {\n  var _gateways$notificatio, _gateways$notificatio2, _gateways$notificatio3, _gateways$use_success;\n\n  var on_success = getActiveActions((_gateways$notificatio = gateways['notifications_success']) !== null && _gateways$notificatio !== void 0 ? _gateways$notificatio : {});\n  var on_failed = getActiveActions((_gateways$notificatio2 = gateways['notifications_failed']) !== null && _gateways$notificatio2 !== void 0 ? _gateways$notificatio2 : {});\n  var on_before = getActiveActions((_gateways$notificatio3 = gateways['notifications_before']) !== null && _gateways$notificatio3 !== void 0 ? _gateways$notificatio3 : {});\n  var use_redirect = (_gateways$use_success = gateways['use_success_redirect']) !== null && _gateways$use_success !== void 0 ? _gateways$use_success : false;\n  var has_redirect = false;\n\n  if (!on_success.length && !on_failed.length && !on_before.length && !use_redirect) {\n    throw 'nothing_to_migrate';\n  }\n\n  return actions.map(function (action) {\n    var _action$events;\n\n    action.events = (_action$events = action.events) !== null && _action$events !== void 0 ? _action$events : [];\n\n    if (on_success.includes(action.id)) {\n      action.events.push('GATEWAY.SUCCESS');\n    }\n\n    if (on_failed.includes(action.id)) {\n      action.events.push('GATEWAY.FAILED');\n    }\n\n    if (on_before.includes(action.id)) {\n      action.events.push('DEFAULT.PROCESS');\n    }\n\n    if (use_redirect && !has_redirect && 'redirect_to_page' === action.type) {\n      action.events.push('GATEWAY.SUCCESS');\n      has_redirect = true;\n    }\n\n    return action;\n  });\n};\n\nvar runEvent = function runEvent() {\n  var gateways = {},\n      actions = [];\n\n  try {\n    var _getGatewaysActions = getGatewaysActions();\n\n    var _getGatewaysActions2 = _slicedToArray(_getGatewaysActions, 2);\n\n    var _getGatewaysActions2$ = _getGatewaysActions2[0];\n    gateways = _getGatewaysActions2$ === void 0 ? {} : _getGatewaysActions2$;\n    var _getGatewaysActions2$2 = _getGatewaysActions2[1];\n    actions = _getGatewaysActions2$2 === void 0 ? [] : _getGatewaysActions2$2;\n  } catch (error) {\n    return;\n  }\n\n  gateways.last_migrate = 1;\n  editMeta('_jf_gateways', gateways);\n  var withConditions = [];\n\n  try {\n    withConditions.push.apply(withConditions, _toConsumableArray(migrate(gateways, actions)));\n  } catch (error) {\n    return;\n  }\n\n  editMeta('_jf_actions', withConditions);\n};\n\nwp.domReady(function () {\n  return setTimeout(runEvent, 0);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6089\n")},9510:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const debug = __webpack_require__(6830)\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(39)\nconst { re, t } = __webpack_require__(9022)\n\nconst parseOptions = __webpack_require__(8716)\nconst { compareIdentifiers } = __webpack_require__(8822)\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9510\n")},3992:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const SemVer = __webpack_require__(9510)\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk5Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsSUFBbUI7QUFDMUM7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jb21wYXJlLmpzP2M1OWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgY29tcGFyZSA9IChhLCBiLCBsb29zZSkgPT5cbiAgbmV3IFNlbVZlcihhLCBsb29zZSkuY29tcGFyZShuZXcgU2VtVmVyKGIsIGxvb3NlKSlcblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3992\n")},2260:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI2MC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3QuanM/OWZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IGd0ID0gKGEsIGIsIGxvb3NlKSA9PiBjb21wYXJlKGEsIGIsIGxvb3NlKSA+IDBcbm1vZHVsZS5leHBvcnRzID0gZ3RcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2260\n")},6579:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU3OS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3RlLmpzPzJlNzAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBndGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpID49IDBcbm1vZHVsZS5leHBvcnRzID0gZ3RlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6579\n")},290:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkwLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLElBQVc7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9sdC5qcz9hOTg4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgbHQgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDwgMFxubW9kdWxlLmV4cG9ydHMgPSBsdFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///290\n")},5891:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5MS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbHRlLmpzP2FhMjIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBsdGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDw9IDBcbm1vZHVsZS5leHBvcnRzID0gbHRlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5891\n")},39:module=>{eval("// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2NvbnN0YW50cy5qcz83NjVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IHRoaXMgaXMgdGhlIHNlbXZlci5vcmcgdmVyc2lvbiBvZiB0aGUgc3BlYyB0aGF0IGl0IGltcGxlbWVudHNcbi8vIE5vdCBuZWNlc3NhcmlseSB0aGUgcGFja2FnZSB2ZXJzaW9uIG9mIHRoaXMgY29kZS5cbmNvbnN0IFNFTVZFUl9TUEVDX1ZFUlNJT04gPSAnMi4wLjAnXG5cbmNvbnN0IE1BWF9MRU5HVEggPSAyNTZcbmNvbnN0IE1BWF9TQUZFX0lOVEVHRVIgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB8fFxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gOTAwNzE5OTI1NDc0MDk5MVxuXG4vLyBNYXggc2FmZSBzZWdtZW50IGxlbmd0aCBmb3IgY29lcmNpb24uXG5jb25zdCBNQVhfU0FGRV9DT01QT05FTlRfTEVOR1RIID0gMTZcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNFTVZFUl9TUEVDX1ZFUlNJT04sXG4gIE1BWF9MRU5HVEgsXG4gIE1BWF9TQUZFX0lOVEVHRVIsXG4gIE1BWF9TQUZFX0NPTVBPTkVOVF9MRU5HVEgsXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39\n")},6830:module=>{eval("const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjgzMC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2RlYnVnLmpzPzE4MzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVidWcgPSAoXG4gIHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJlxuICBwcm9jZXNzLmVudiAmJlxuICBwcm9jZXNzLmVudi5OT0RFX0RFQlVHICYmXG4gIC9cXGJzZW12ZXJcXGIvaS50ZXN0KHByb2Nlc3MuZW52Lk5PREVfREVCVUcpXG4pID8gKC4uLmFyZ3MpID0+IGNvbnNvbGUuZXJyb3IoJ1NFTVZFUicsIC4uLmFyZ3MpXG4gIDogKCkgPT4ge31cblxubW9kdWxlLmV4cG9ydHMgPSBkZWJ1Z1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6830\n")},8822:module=>{eval("const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODgyMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9pZGVudGlmaWVycy5qcz9hYjE1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG51bWVyaWMgPSAvXlswLTldKyQvXG5jb25zdCBjb21wYXJlSWRlbnRpZmllcnMgPSAoYSwgYikgPT4ge1xuICBjb25zdCBhbnVtID0gbnVtZXJpYy50ZXN0KGEpXG4gIGNvbnN0IGJudW0gPSBudW1lcmljLnRlc3QoYilcblxuICBpZiAoYW51bSAmJiBibnVtKSB7XG4gICAgYSA9ICthXG4gICAgYiA9ICtiXG4gIH1cblxuICByZXR1cm4gYSA9PT0gYiA/IDBcbiAgICA6IChhbnVtICYmICFibnVtKSA/IC0xXG4gICAgOiAoYm51bSAmJiAhYW51bSkgPyAxXG4gICAgOiBhIDwgYiA/IC0xXG4gICAgOiAxXG59XG5cbmNvbnN0IHJjb21wYXJlSWRlbnRpZmllcnMgPSAoYSwgYikgPT4gY29tcGFyZUlkZW50aWZpZXJzKGIsIGEpXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjb21wYXJlSWRlbnRpZmllcnMsXG4gIHJjb21wYXJlSWRlbnRpZmllcnMsXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8822\n")},8716:module=>{eval("// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcxNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvcGFyc2Utb3B0aW9ucy5qcz9lYTU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhcnNlIG91dCBqdXN0IHRoZSBvcHRpb25zIHdlIGNhcmUgYWJvdXQgc28gd2UgYWx3YXlzIGdldCBhIGNvbnNpc3RlbnRcbi8vIG9iaiB3aXRoIGtleXMgaW4gYSBjb25zaXN0ZW50IG9yZGVyLlxuY29uc3Qgb3B0cyA9IFsnaW5jbHVkZVByZXJlbGVhc2UnLCAnbG9vc2UnLCAncnRsJ11cbmNvbnN0IHBhcnNlT3B0aW9ucyA9IG9wdGlvbnMgPT5cbiAgIW9wdGlvbnMgPyB7fVxuICA6IHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0JyA/IHsgbG9vc2U6IHRydWUgfVxuICA6IG9wdHMuZmlsdGVyKGsgPT4gb3B0aW9uc1trXSkucmVkdWNlKChvLCBrKSA9PiB7XG4gICAgb1trXSA9IHRydWVcbiAgICByZXR1cm4gb1xuICB9LCB7fSlcbm1vZHVsZS5leHBvcnRzID0gcGFyc2VPcHRpb25zXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8716\n")},9022:(module,exports,__webpack_require__)=>{eval("const { MAX_SAFE_COMPONENT_LENGTH } = __webpack_require__(39)\nconst debug = __webpack_require__(6830)\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9022\n")}},__webpack_module_cache__={};function __webpack_require__(e){var c=__webpack_module_cache__[e];if(void 0!==c)return c.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}var __webpack_exports__=__webpack_require__(6044)})();