(()=>{var __webpack_modules__={8165:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n;// CONCATENATED MODULE: ./package/components/action-fields-map.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar BaseControl = wp.components.BaseControl;\nfunction ActionFieldsMap(_ref) {\n  var _ref$fields = _ref.fields,\n      fields = _ref$fields === void 0 ? [] : _ref$fields,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'[Empty label]\' : _ref$label,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? function () {} : _ref$children,\n      _ref$plainHelp = _ref.plainHelp,\n      plainHelp = _ref$plainHelp === void 0 ? \'\' : _ref$plainHelp,\n      _ref$customHelp = _ref.customHelp,\n      customHelp = _ref$customHelp === void 0 ? false : _ref$customHelp;\n  return wp.element.createElement(BaseControl, {\n    label: label,\n    key: "jet_fields_map"\n  }, wp.element.createElement("div", {\n    className: "jet-user-fields-map__list"\n  }, customHelp && \'function\' === typeof customHelp && customHelp(), Boolean(plainHelp.length) && wp.element.createElement("span", {\n    className: \'description-controls\'\n  }, plainHelp), fields.map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        fieldId = _ref3[0],\n        fieldData = _ref3[1];\n\n    return wp.element.createElement(React.Fragment, {\n      key: "field_in_map_".concat(fieldId + index)\n    }, children({\n      fieldId: fieldId,\n      fieldData: fieldData,\n      index: index\n    }));\n  })));\n}\n;\n;// CONCATENATED MODULE: ./package/context/action.modal.js\nvar createContext = wp.element.createContext;\n/* harmony default export */ const action_modal = (createContext({\n  actionClick: null,\n  onRequestClose: function onRequestClose() {}\n}));\n;// CONCATENATED MODULE: ./package/components/action-modal.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction action_modal_slicedToArray(arr, i) { return action_modal_arrayWithHoles(arr) || action_modal_iterableToArrayLimit(arr, i) || action_modal_unsupportedIterableToArray(arr, i) || action_modal_nonIterableRest(); }\n\nfunction action_modal_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_modal_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_modal_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || action_modal_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_modal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_modal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_modal_arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return action_modal_arrayLikeToArray(arr); }\n\nfunction action_modal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar _wp$components = wp.components,\n    Button = _wp$components.Button,\n    ButtonGroup = _wp$components.ButtonGroup,\n    Modal = _wp$components.Modal;\nvar _wp$element = wp.element,\n    useState = _wp$element.useState,\n    useEffect = _wp$element.useEffect;\n\nfunction ActionModal(_ref) {\n  var onRequestClose = _ref.onRequestClose,\n      children = _ref.children,\n      title = _ref.title,\n      _ref$classNames = _ref.classNames,\n      classNames = _ref$classNames === void 0 ? [] : _ref$classNames,\n      onUpdateClick = _ref.onUpdateClick,\n      onCancelClick = _ref.onCancelClick,\n      _ref$updateBtnLabel = _ref.updateBtnLabel,\n      updateBtnLabel = _ref$updateBtnLabel === void 0 ? \'Update\' : _ref$updateBtnLabel,\n      _ref$updateBtnProps = _ref.updateBtnProps,\n      updateBtnProps = _ref$updateBtnProps === void 0 ? {} : _ref$updateBtnProps,\n      _ref$cancelBtnProps = _ref.cancelBtnProps,\n      cancelBtnProps = _ref$cancelBtnProps === void 0 ? {} : _ref$cancelBtnProps,\n      _ref$cancelBtnLabel = _ref.cancelBtnLabel,\n      cancelBtnLabel = _ref$cancelBtnLabel === void 0 ? \'Cancel\' : _ref$cancelBtnLabel,\n      _ref$fixedHeight = _ref.fixedHeight,\n      fixedHeight = _ref$fixedHeight === void 0 ? \'\' : _ref$fixedHeight;\n  var modalClasses = [\'jet-form-edit-modal\'].concat(_toConsumableArray(classNames));\n\n  var _useState = useState(null),\n      _useState2 = action_modal_slicedToArray(_useState, 2),\n      actionClick = _useState2[0],\n      setActionClick = _useState2[1];\n\n  var updateClick = function updateClick() {\n    if (onUpdateClick) {\n      onUpdateClick();\n    }\n\n    setActionClick(true);\n  };\n\n  var cancelClick = function cancelClick() {\n    if (onCancelClick) {\n      onCancelClick();\n    }\n\n    setActionClick(false);\n  };\n\n  var style = {};\n\n  if (fixedHeight) {\n    style = {\n      height: fixedHeight\n    };\n    modalClasses.push(\'jet-modal-fixed-height\');\n  }\n\n  return wp.element.createElement(Modal, {\n    onRequestClose: onRequestClose,\n    className: modalClasses.join(\' \'),\n    title: title,\n    style: style\n  }, !children && wp.element.createElement("div", {\n    className: "jet-form-edit-modal__content"\n  }, \'Action callback is not found.\'), children && wp.element.createElement(React.Fragment, null, wp.element.createElement("div", {\n    className: "jet-form-edit-modal__wrapper"\n  }, wp.element.createElement(action_modal.Provider, {\n    value: {\n      actionClick: actionClick,\n      onRequestClose: onRequestClose\n    }\n  }, wp.element.createElement("div", {\n    className: "jet-form-edit-modal__content"\n  }, \'function\' === typeof children && children({\n    actionClick: actionClick,\n    onRequestClose: onRequestClose\n  }), \'function\' !== typeof children && children))), wp.element.createElement(ButtonGroup, {\n    className: "jet-form-edit-modal__actions"\n  }, wp.element.createElement(Button, _extends({\n    isPrimary: true,\n    onClick: updateClick\n  }, updateBtnProps), updateBtnLabel), wp.element.createElement(Button, _extends({\n    isSecondary: true,\n    style: {\n      margin: \'0 0 0 10px\'\n    },\n    onClick: cancelClick\n  }, cancelBtnProps), cancelBtnLabel))));\n}\n\n/* harmony default export */ const components_action_modal = (ActionModal);\n;// CONCATENATED MODULE: ./package/components/wrapper-required-control.js\nfunction wrapper_required_control_slicedToArray(arr, i) { return wrapper_required_control_arrayWithHoles(arr) || wrapper_required_control_iterableToArrayLimit(arr, i) || wrapper_required_control_unsupportedIterableToArray(arr, i) || wrapper_required_control_nonIterableRest(); }\n\nfunction wrapper_required_control_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction wrapper_required_control_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return wrapper_required_control_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return wrapper_required_control_arrayLikeToArray(o, minLen); }\n\nfunction wrapper_required_control_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction wrapper_required_control_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction wrapper_required_control_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar RawHTML = wp.element.RawHTML;\nfunction WrapperRequiredControl(_ref) {\n  var field = _ref.field,\n      children = _ref.children,\n      _ref$labelKey = _ref.labelKey,\n      labelKey = _ref$labelKey === void 0 ? \'label\' : _ref$labelKey,\n      _ref$requiredKey = _ref.requiredKey,\n      requiredKey = _ref$requiredKey === void 0 ? \'required\' : _ref$requiredKey,\n      _ref$helpKey = _ref.helpKey,\n      helpKey = _ref$helpKey === void 0 ? \'help\' : _ref$helpKey;\n\n  var _field = wrapper_required_control_slicedToArray(field, 2),\n      name = _field[0],\n      data = _field[1];\n  /*const IconComponent = data.icon ? props => {\r\n  \treturn <div\r\n  \t\tkey={ \'inner_icon_field_\' + name }\r\n  \t\t{ ...props }\r\n  \t>{ data.icon }</div>\r\n  } : null;*/\n\n\n  return wp.element.createElement("div", {\n    className: "jet-user-meta__row",\n    key: \'user_meta_\' + name\n  }, wp.element.createElement("div", {\n    className: "jet-field-map__row-label"\n  }, wp.element.createElement("span", {\n    className: \'fields-map__label\'\n  }, data.hasOwnProperty(labelKey) && data[labelKey] && data[labelKey], !data.hasOwnProperty(labelKey) && data), data.hasOwnProperty(requiredKey) && data[requiredKey] && wp.element.createElement("span", {\n    className: \'fields-map__required\'\n  }, " *"), data[helpKey] && wp.element.createElement("p", {\n    className: \'components-base-control__help\',\n    style: {\n      color: \'rgb(117, 117, 117)\',\n      margin: \'1em 0 0 0\'\n    }\n  }, wp.element.createElement(RawHTML, null, data[helpKey]))), children);\n}\n;// CONCATENATED MODULE: ./package/components/request-button.js\nvar __ = wp.i18n.__;\nvar request_button_Button = wp.components.Button;\nvar request_button_useEffect = wp.element.useEffect;\n\nfunction RequestButton(_ref) {\n  var label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onSuccessRequest = _ref.onSuccessRequest,\n      onSuccessRequest = _ref$onSuccessRequest === void 0 ? function () {} : _ref$onSuccessRequest,\n      _ref$onFailRequest = _ref.onFailRequest,\n      onFailRequest = _ref$onFailRequest === void 0 ? function () {} : _ref$onFailRequest,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \'\' : _ref$className,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? function () {} : _ref$children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$customRequest = _ref.customRequest,\n      customRequest = _ref$customRequest === void 0 ? false : _ref$customRequest,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden,\n      _ref$hasFetched = _ref.hasFetched,\n      hasFetched = _ref$hasFetched === void 0 ? -1 : _ref$hasFetched;\n\n  var defaultRequest = function defaultRequest() {\n    onLoading();\n    jQuery.ajax({\n      url: ajaxurl,\n      type: \'POST\',\n      data: ajaxArgs\n    }).done(function (response) {\n      return response.success ? onSuccessRequest(response) : onFailRequest();\n    }).fail(function () {\n      return onFailRequest();\n    });\n  };\n\n  var request = function request() {\n    if (false === customRequest) {\n      defaultRequest();\n    } else if (\'function\' === typeof customRequest) {\n      customRequest();\n    } else {\n      onFailRequest();\n    }\n  };\n\n  request_button_useEffect(function () {\n    if (isHidden && -1 === hasFetched) {\n      request();\n    }\n  }, []);\n\n  if (isHidden) {\n    return null;\n  }\n\n  return wp.element.createElement(request_button_Button, {\n    disabled: disabled,\n    key: \'validate_api_key\',\n    isPrimary: true,\n    onClick: request,\n    className: className\n  }, children && children, label);\n}\n\n/* harmony default export */ const request_button = (RequestButton);\n;// CONCATENATED MODULE: ./package/helpers/gateways/gateway-action-attrubites.js\n\n\nfunction gatewayActionAttributes(action) {\n  var _fromLocalizeHelper = fromLocalizeHelper(\'getLocalizedFullPack\')(action.type),\n      gatewayAttrs = _fromLocalizeHelper.gatewayAttrs,\n      label = _fromLocalizeHelper.label;\n\n  var actionSettings = getActionSettings(action.id);\n\n  var value = function value(attr) {\n    if (actionSettings[attr]) {\n      return actionSettings[attr];\n    }\n\n    if (actionSettings[action.type] && actionSettings[action.type][attr]) {\n      return actionSettings[action.type][attr];\n    }\n\n    return \'NULL\';\n  };\n\n  var labelWithAttrs = gatewayAttrs().map(function (attr) {\n    return "".concat(label(attr), " ").concat(value(attr));\n  });\n  return labelWithAttrs.join(\', \');\n}\n\n/* harmony default export */ const gateway_action_attrubites = (gatewayActionAttributes);\n;// CONCATENATED MODULE: ./package/helpers/actions/action-helper.js\nfunction action_helper_toConsumableArray(arr) { return action_helper_arrayWithoutHoles(arr) || action_helper_iterableToArray(arr) || action_helper_unsupportedIterableToArray(arr) || action_helper_nonIterableSpread(); }\n\nfunction action_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction action_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return action_helper_arrayLikeToArray(arr); }\n\nfunction action_helper_slicedToArray(arr, i) { return action_helper_arrayWithHoles(arr) || action_helper_iterableToArrayLimit(arr, i) || action_helper_unsupportedIterableToArray(arr, i) || action_helper_nonIterableRest(); }\n\nfunction action_helper_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_helper_arrayLikeToArray(o, minLen); }\n\nfunction action_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction action_helper_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_helper_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar getActionsByType = function getActionsByType(type) {\n  var _useActions = useActions(),\n      _useActions2 = action_helper_slicedToArray(_useActions, 1),\n      actions = _useActions2[0];\n\n  return actions.filter(function (action) {\n    return type === action.type;\n  });\n};\nvar fromLocalizeHelper = function fromLocalizeHelper(name) {\n  return name ? window.JetFBLocalizeHelper[name] : window.JetFBLocalizeHelper;\n};\nvar actionByTypeList = function actionByTypeList(actionType) {\n  var withDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return prepareActionsListByType(getActionsByType(actionType), actionType, withDesc);\n};\nvar prepareActionsListByType = function prepareActionsListByType(source, actionType) {\n  var withDesc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return source.filter(function (action) {\n    return actionType === action.type;\n  }).map(function (action) {\n    var newAction = {\n      value: action.id,\n      label: fromLocalizeHelper(\'getActionLabel\')(action.type)\n    };\n\n    if (withDesc) {\n      newAction.label += " (".concat(gateway_action_attrubites(action), ")");\n    }\n\n    return newAction;\n  });\n};\nvar getActionSettings = function getActionSettings(actionId) {\n  var _useActions3 = useActions(),\n      _useActions4 = action_helper_slicedToArray(_useActions3, 1),\n      actions = _useActions4[0];\n\n  var action = actions.find(function (action) {\n    return actionId === action.id;\n  });\n  return action && action.settings ? action.settings : false;\n};\nvar convertListToFieldsMap = function convertListToFieldsMap() {\n  var response = [];\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  for (var _i2 = 0, _sources = sources; _i2 < _sources.length; _i2++) {\n    var source = _sources[_i2];\n    response.push.apply(response, action_helper_toConsumableArray(source.map(function (item) {\n      var id = item.value;\n      return [id, item];\n    })));\n  }\n\n  return response;\n};\n;// CONCATENATED MODULE: ./package/helpers/settings/helper.js\nfunction globalTab(_ref) {\n  var slug = _ref.slug,\n      _ref$element = _ref.element,\n      element = _ref$element === void 0 ? \'\' : _ref$element,\n      _ref$empty = _ref.empty,\n      empty = _ref$empty === void 0 ? \'\' : _ref$empty;\n  var global = JetFormEditorData.global_settings;\n\n  if (!global) {\n    return empty;\n  }\n\n  if (element) {\n    return global[slug] && global[slug][element] ? global[slug][element] : empty;\n  }\n\n  return global[slug] || empty;\n}\n\n\n;// CONCATENATED MODULE: ./package/helpers/gateways/gateway-helper.js\nvar gatewayAttr = function gatewayAttr() {\n  var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var isEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  var data = window.JetFormEditorData.gateways;\n\n  if (!attr) {\n    return data;\n  }\n\n  if (!data[attr]) {\n    return false;\n  }\n\n  var source = data[attr];\n  return function (name) {\n    return source[name] ? source[name] : isEmpty;\n  };\n};\nvar gatewayLabel = function gatewayLabel(type) {\n  var isEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  var label = gatewayAttr(\'labels\');\n  return function (attr) {\n    return label(type) ? label(type)[attr] : isEmpty;\n  };\n};\nvar registerGateway = function registerGateway(id, callback) {\n  var forWhat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n  window.JetFBGatewaysList = window.JetFBGatewaysList || {};\n  window.JetFBGatewaysList[id] = window.JetFBGatewaysList[id] || {};\n  window.JetFBGatewaysList[id][forWhat] = callback;\n};\nvar issetRenderGateway = function issetRenderGateway(id) {\n  var what = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'cred\';\n  return window.JetFBGatewaysList && window.JetFBGatewaysList[id] && window.JetFBGatewaysList[id][what];\n};\nvar renderGateway = function renderGateway(id, props) {\n  var what = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n\n  if (!issetRenderGateway(id, what)) {\n    return null;\n  }\n\n  var GatewayComponent = window.JetFBGatewaysList[id][what];\n  return wp.element.createElement(GatewayComponent, props);\n};\nvar renderGatewayWithPlaceholder = function renderGatewayWithPlaceholder(id, props) {\n  var what = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'cred\';\n  var Placeholder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!issetRenderGateway(id, what)) {\n    return Placeholder;\n  }\n\n  props.Placeholder = Placeholder;\n  return renderGateway(id, props, what);\n};\n;// CONCATENATED MODULE: ./package/helpers/hooks/hooks-helper.js\nfunction hooks_helper_toConsumableArray(arr) { return hooks_helper_arrayWithoutHoles(arr) || hooks_helper_iterableToArray(arr) || hooks_helper_unsupportedIterableToArray(arr) || hooks_helper_nonIterableSpread(); }\n\nfunction hooks_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction hooks_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction hooks_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return hooks_helper_arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = hooks_helper_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction hooks_helper_slicedToArray(arr, i) { return hooks_helper_arrayWithHoles(arr) || hooks_helper_iterableToArrayLimit(arr, i) || hooks_helper_unsupportedIterableToArray(arr, i) || hooks_helper_nonIterableRest(); }\n\nfunction hooks_helper_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction hooks_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return hooks_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return hooks_helper_arrayLikeToArray(o, minLen); }\n\nfunction hooks_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction hooks_helper_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction hooks_helper_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar hooks_helper_wp$element = wp.element,\n    hooks_helper_useState = hooks_helper_wp$element.useState,\n    hooks_helper_useEffect = hooks_helper_wp$element.useEffect;\nvar _wp$data = wp.data,\n    useSelect = _wp$data.useSelect,\n    useDispatch = _wp$data.useDispatch;\nvar applyFilters = wp.hooks.applyFilters;\nvar useMetaState = function useMetaState(key) {\n  var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'{}\';\n  var meta = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  });\n\n  var _useDispatch = useDispatch(\'core/editor\', [meta]),\n      editPost = _useDispatch.editPost;\n\n  var metaStateValue = JSON.parse(meta[key] || ifEmpty);\n\n  var setMetaStateValue = function setMetaStateValue(callable) {\n    var value;\n\n    if (\'function\' === typeof callable) {\n      value = callable(metaStateValue);\n    } else {\n      value = callable;\n    }\n\n    editPost({\n      meta: _objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, key, JSON.stringify(value)))\n    });\n  };\n\n  return [metaStateValue, setMetaStateValue];\n};\nvar useActions = function useActions() {\n  return useMetaState(\'_jf_actions\');\n};\nvar initClasses = [\'jet-form-validate-button\'];\nvar useStateValidClasses = function useStateValidClasses(initialValid) {\n  var validClass = \'is-valid\';\n  var invalidClass = \'is-invalid\';\n\n  var initStateClasses = function initStateClasses() {\n    if (initialValid) {\n      return [].concat(initClasses, [validClass]);\n    } else if (!initialValid) {\n      return [].concat(initClasses, [invalidClass]);\n    }\n  };\n\n  var _useState = hooks_helper_useState(initStateClasses()),\n      _useState2 = hooks_helper_slicedToArray(_useState, 2),\n      classes = _useState2[0],\n      setClasses = _useState2[1];\n\n  var setValidClass = function setValidClass() {\n    setClasses([].concat(initClasses, [validClass]));\n  };\n\n  var setInvalidClass = function setInvalidClass() {\n    setClasses([].concat(initClasses, [invalidClass]));\n  };\n\n  var setLoadingClass = function setLoadingClass() {\n    setClasses([].concat(initClasses, [\'loading\']));\n  };\n\n  return [classes.join(\' \'), setValidClass, setInvalidClass, setLoadingClass];\n};\nvar useStateLoadingClasses = function useStateLoadingClasses() {\n  var _useState3 = hooks_helper_useState([].concat(initClasses)),\n      _useState4 = hooks_helper_slicedToArray(_useState3, 2),\n      classes = _useState4[0],\n      setClasses = _useState4[1];\n\n  var setLoadingClass = function setLoadingClass() {\n    setClasses([].concat(initClasses, [\'loading\']));\n  };\n\n  var clearLoadingClass = function clearLoadingClass() {\n    setClasses(initClasses);\n  };\n\n  return [classes.join(\' \'), setLoadingClass, clearLoadingClass];\n};\nvar useSuccessNotice = function useSuccessNotice(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useState5 = hooks_helper_useState(false),\n      _useState6 = hooks_helper_slicedToArray(_useState5, 2),\n      hasCopied = _useState6[0],\n      setHasCopied = _useState6[1];\n\n  var noticeStore = useDispatch(wp.notices.store);\n  hooks_helper_useEffect(function () {\n    if (hasCopied) {\n      noticeStore.createWarningNotice(text, _objectSpread({\n        type: \'snackbar\'\n      }, options));\n    }\n  }, [hasCopied]);\n  return setHasCopied;\n};\nvar withDispatchNotice = function withDispatchNotice(dispatch) {\n  return {\n    createNotice: function createNotice(status, text) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      dispatch(wp.notices.store).createNotice(status, text, _objectSpread({\n        type: \'default\',\n        status: \'info\'\n      }, options));\n    }\n  };\n};\nvar getRequestFields = function getRequestFields(actions) {\n  var requestFields = [];\n\n  var _iterator = _createForOfIteratorHelper(actions),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var action = _step.value;\n      var _action$settings$acti = action.settings[action.type],\n          current = _action$settings$acti === void 0 ? {} : _action$settings$acti;\n\n      if (!current.requestFields) {\n        continue;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(current.requestFields),\n          _step2;\n\n      try {\n        var _loop = function _loop() {\n          var requestField = _step2.value;\n          var index = requestFields.findIndex(function (field) {\n            return field.value === requestField.name;\n          });\n\n          if (-1 !== index) {\n            return "continue";\n          }\n\n          requestFields.push({\n            from: action.type,\n            id: action.id,\n            label: requestField.name,\n            value: requestField.name,\n            name: requestField.name,\n            help: requestField.help\n          });\n        };\n\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === "continue") continue;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return requestFields;\n};\nvar useRequestFields = function useRequestFields() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var meta = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  });\n  var actions = JSON.parse(meta._jf_actions || \'[]\');\n  return getRequestFields(actions);\n};\n\nvar selectPostMeta = function selectPostMeta(select) {\n  return select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n};\n\nvar selectParsedPostMeta = function selectParsedPostMeta(select, name) {\n  var allMeta = selectPostMeta(select);\n  return JSON.parse(allMeta[name] || \'{}\');\n};\nvar useSelectPostMeta = function useSelectPostMeta(name) {\n  var allMeta = useSelect(function (select) {\n    return selectPostMeta(select);\n  });\n  return JSON.parse(allMeta[name] || \'{}\');\n};\nvar withCurrentAction = function withCurrentAction(select) {\n  var currentAction = select(\'jet-forms/actions\').getCurrentAction();\n  return {\n    currentAction: currentAction\n  };\n};\nvar withRequestFields = function withRequestFields(select) {\n  var meta = select(\'core/editor\').getEditedPostAttribute(\'meta\') || {};\n  var actions = JSON.parse(meta._jf_actions || \'[]\');\n  var currentAction = select(\'jet-forms/actions\').getCurrentAction();\n  actions.splice(currentAction.index);\n  return {\n    requestFields: getRequestFields(actions)\n  };\n};\nvar withSelectActionLoading = function withSelectActionLoading(select) {\n  var loadingState = select(\'jet-forms/actions\').getCurrentLoading();\n  return {\n    loadingState: loadingState\n  };\n};\nvar withDispatchActionLoading = function withDispatchActionLoading(dispatch) {\n  return {\n    setLoading: function setLoading(actionId) {\n      dispatch(\'jet-forms/actions\').setLoading({\n        actionId: actionId\n      });\n    },\n    setResultSuccess: function setResultSuccess(actionId, response) {\n      dispatch(\'jet-forms/actions\').setLoadingResult({\n        actionId: actionId,\n        success: true,\n        response: response\n      });\n    },\n    setResultFail: function setResultFail(actionId) {\n      dispatch(\'jet-forms/actions\').setLoadingResult({\n        actionId: actionId,\n        success: false,\n        response: {}\n      });\n    }\n  };\n};\nvar withDispatchMeta = function withDispatchMeta(metaSlug, callbackName) {\n  return function (dispatch, ownProps, _ref) {\n    var select = _ref.select;\n    var allMeta = selectPostMeta(select);\n\n    var _dispatch = dispatch(\'core/editor\'),\n        editPost = _dispatch.editPost;\n\n    var change = function change(newState) {\n      return editPost({\n        meta: _objectSpread(_objectSpread({}, allMeta), {}, _defineProperty({}, metaSlug, JSON.stringify(newState)))\n      });\n    };\n\n    return _defineProperty({}, callbackName, change);\n  };\n};\nvar withSelectMeta = function withSelectMeta(metaSlug) {\n  var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (select) {\n    var current = selectParsedPostMeta(select, metaSlug);\n    return _defineProperty({}, metaSlug, current !== null && current !== void 0 ? current : ifEmpty);\n  };\n};\nvar withSelectGateways = function withSelectGateways(select) {\n  var store = select(\'jet-forms/gateways\');\n  var gatewayRequestId = store.getCurrentRequestId();\n  var gatewaySpecific = store.getGatewaySpecific();\n  var scenario = store.getScenario();\n  var CURRENT_GATEWAY = store.getGatewayId();\n  var _scenario$id = scenario.id,\n      CURRENT_SCENARIO = _scenario$id === void 0 ? \'PAY_NOW\' : _scenario$id;\n  var _gatewaySpecific$use_ = gatewaySpecific.use_global,\n      use_global = _gatewaySpecific$use_ === void 0 ? false : _gatewaySpecific$use_;\n  var currentTab = globalTab({\n    slug: CURRENT_GATEWAY\n  });\n\n  var getSpecificOrGlobal = function getSpecificOrGlobal(key) {\n    var ifEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return use_global ? currentTab[key] || ifEmpty : gatewaySpecific[key] || ifEmpty;\n  };\n\n  var callableGateway = gatewayAttr(\'additional\');\n  var additionalSourceGateway = callableGateway(CURRENT_GATEWAY);\n  var loadingGateway = select(\'jet-forms/actions\').getLoading(gatewayRequestId);\n  var globalGatewayLabel = gatewayAttr(\'labels\');\n  var specificGatewayLabel = gatewayLabel(CURRENT_GATEWAY);\n\n  var customGatewayLabel = function customGatewayLabel(key) {\n    return globalGatewayLabel("".concat(CURRENT_GATEWAY, ".").concat(key));\n  };\n\n  var scenarioLabel = function scenarioLabel(key) {\n    return customGatewayLabel("scenario.".concat(CURRENT_SCENARIO, ".").concat(key));\n  };\n\n  return {\n    gatewayGeneral: store.getGateway(),\n    gatewayRequest: store.getCurrentRequest(),\n    scenarioSource: additionalSourceGateway[CURRENT_SCENARIO] || {},\n    currentScenario: scenario[CURRENT_SCENARIO] || {},\n    CURRENT_SCENARIO: CURRENT_SCENARIO,\n    gatewayScenario: scenario,\n    additionalSourceGateway: additionalSourceGateway,\n    gatewaySpecific: gatewaySpecific,\n    gatewayRequestId: gatewayRequestId,\n    loadingGateway: loadingGateway,\n    getSpecificOrGlobal: getSpecificOrGlobal,\n    globalGatewayLabel: globalGatewayLabel,\n    specificGatewayLabel: specificGatewayLabel,\n    customGatewayLabel: customGatewayLabel,\n    scenarioLabel: scenarioLabel\n  };\n};\nvar withDispatchGateways = function withDispatchGateways(dispatch) {\n  var store = dispatch(\'jet-forms/gateways\');\n  return {\n    setGatewayRequest: store.setRequest,\n    setGatewayScenario: store.setScenario,\n    setScenario: store.setCurrentScenario,\n    setGateway: store.setGateway,\n    setGatewayInner: store.setGatewayInner,\n    setGatewaySpecific: store.setGatewaySpecific,\n    clearGateway: store.clearGateway,\n    clearScenario: store.clearScenario\n  };\n};\n\nvar getFormFields = function getFormFields(blockParserFunc, blocks) {\n  blocks.map(function (block) {\n    blockParserFunc(block);\n\n    if (block.innerBlocks.length) {\n      getFormFields(blockParserFunc, block.innerBlocks);\n    }\n  });\n};\n\nvar withSelectFormFields = function withSelectFormFields() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var suppressFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function (select) {\n    var formFields = [];\n    var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'].concat(hooks_helper_toConsumableArray(exclude));\n    getFormFields(function (block) {\n      if (block.name.includes(\'jet-forms/\') && block.attributes.name && !skipFields.find(function (field) {\n        return block.name.includes(field);\n      })) {\n        /*const blockType = select( blocksStore ).getBlockType( block.name );*/\n        formFields.push({\n          blockName: block.name,\n          name: block.attributes.name,\n          label: block.attributes.label || block.attributes.name,\n          value: block.attributes.name //icon: blockType.icon.src,\n\n        });\n      }\n    }, select(\'core/block-editor\').getBlocks());\n    formFields = placeholder ? [{\n      value: \'\',\n      label: placeholder\n    }].concat(hooks_helper_toConsumableArray(formFields)) : formFields;\n    return {\n      formFields: suppressFilter ? formFields : applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields)\n    };\n  };\n};\nvar withSelectActionsByType = function withSelectActionsByType(actionType) {\n  var withDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (select) {\n    var _withSelectMeta = withSelectMeta(\'_jf_actions\', [])(select),\n        _jf_actions = _withSelectMeta._jf_actions;\n\n    return _defineProperty({}, actionType, prepareActionsListByType(_jf_actions, actionType, withDesc));\n  };\n};\n;// CONCATENATED MODULE: ./package/components/validate-button.js\nfunction validate_button_slicedToArray(arr, i) { return validate_button_arrayWithHoles(arr) || validate_button_iterableToArrayLimit(arr, i) || validate_button_unsupportedIterableToArray(arr, i) || validate_button_nonIterableRest(); }\n\nfunction validate_button_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction validate_button_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return validate_button_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return validate_button_arrayLikeToArray(o, minLen); }\n\nfunction validate_button_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction validate_button_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction validate_button_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction ValidateButton(_ref) {\n  var initialValid = _ref.initialValid,\n      label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onValid = _ref.onValid,\n      onValid = _ref$onValid === void 0 ? function () {} : _ref$onValid,\n      _ref$onInvalid = _ref.onInvalid,\n      onInvalid = _ref$onInvalid === void 0 ? function () {} : _ref$onInvalid;\n\n  var _useStateValidClasses = useStateValidClasses(initialValid || false),\n      _useStateValidClasses2 = validate_button_slicedToArray(_useStateValidClasses, 4),\n      className = _useStateValidClasses2[0],\n      setValidClass = _useStateValidClasses2[1],\n      setInvalidClass = _useStateValidClasses2[2],\n      setLoadingClass = _useStateValidClasses2[3];\n\n  var setValid = function setValid(response) {\n    setValidClass();\n    onValid(response);\n  };\n\n  var setInvalid = function setInvalid() {\n    setInvalidClass();\n    onInvalid();\n  };\n\n  return wp.element.createElement(request_button, {\n    ajaxArgs: ajaxArgs,\n    label: label,\n    onLoading: setLoadingClass,\n    onSuccessRequest: setValid,\n    onFailRequest: setInvalid,\n    className: className\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const validate_button = (ValidateButton);\n;// CONCATENATED MODULE: ./package/helpers/actions/action-manager.js\nfunction addAction(actionType, actionInstance) {\n  wp.data.dispatch(\'jet-forms/actions\').addCallback(actionType, actionInstance);\n}\n\n/* harmony default export */ const action_manager = (addAction);\n;// CONCATENATED MODULE: ./package/helpers/tools.js\nfunction tools_slicedToArray(arr, i) { return tools_arrayWithHoles(arr) || tools_iterableToArrayLimit(arr, i) || tools_unsupportedIterableToArray(arr, i) || tools_nonIterableRest(); }\n\nfunction tools_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction tools_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction tools_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction tools_toConsumableArray(arr) { return tools_arrayWithoutHoles(arr) || tools_iterableToArray(arr) || tools_unsupportedIterableToArray(arr) || tools_nonIterableSpread(); }\n\nfunction tools_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction tools_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tools_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tools_arrayLikeToArray(o, minLen); }\n\nfunction tools_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction tools_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return tools_arrayLikeToArray(arr); }\n\nfunction tools_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar semverGt = __webpack_require__(2260);\n\nvar semverLt = __webpack_require__(290);\n\nvar semverGte = __webpack_require__(6579);\n\nvar semverLte = __webpack_require__(5891);\n\nvar tools_ = wp.i18n.__;\nvar tools_applyFilters = wp.hooks.applyFilters;\n\nvar Tools = /*#__PURE__*/function () {\n  function Tools() {\n    _classCallCheck(this, Tools);\n  }\n\n  _createClass(Tools, null, [{\n    key: "withPlaceholder",\n    value: function withPlaceholder(source) {\n      var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'--\';\n      var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'\';\n      return [{\n        label: label,\n        value: value\n      }].concat(tools_toConsumableArray(source));\n    }\n  }, {\n    key: "isEmptyObject",\n    value: function isEmptyObject(object) {\n      return \'object\' === _typeof(object) && Object.keys(object).length === 0;\n    }\n  }]);\n\n  return Tools;\n}();\n\nvar tools_event = function event(name) {\n  var initializeCallbacksEvent = new Event(name);\n  return function () {\n    return document.dispatchEvent(initializeCallbacksEvent);\n  };\n};\nvar listen = function listen(name, func) {\n  document.addEventListener(name, func);\n};\n\nfunction getSemVerFunc(operator) {\n  switch (operator) {\n    case \'>\':\n      return semverGt;\n\n    case \'>=\':\n      return semverGte;\n\n    case \'<\':\n      return semverLt;\n\n    case \'<=\':\n      return semverLte;\n  }\n\n  return function () {\n    return false;\n  };\n}\n\nfunction versionCompare(version1, version2, operator) {\n  try {\n    return getSemVerFunc(operator)(version1, version2);\n  } catch (te) {\n    return false;\n  }\n}\nvar convertSymbols = tools_applyFilters(\'jet.fb.tools.convertSymbols\', {\n  checkCyrRegex: /[а-яёїєґі]/i,\n  cyrRegex: /[а-яёїєґі]/gi,\n  charsMap: {\n    \'а\': \'a\',\n    \'б\': \'b\',\n    \'в\': \'v\',\n    \'г\': \'g\',\n    \'д\': \'d\',\n    \'е\': \'e\',\n    \'ё\': \'io\',\n    \'ж\': \'zh\',\n    \'з\': \'z\',\n    \'и\': \'i\',\n    \'й\': \'i\',\n    \'к\': \'k\',\n    \'л\': \'l\',\n    \'м\': \'m\',\n    \'н\': \'n\',\n    \'о\': \'o\',\n    \'п\': \'p\',\n    \'р\': \'r\',\n    \'с\': \'s\',\n    \'т\': \'t\',\n    \'у\': \'u\',\n    \'ф\': \'f\',\n    \'х\': \'kh\',\n    \'ц\': \'ts\',\n    \'ч\': \'ch\',\n    \'ш\': \'sh\',\n    \'щ\': \'shch\',\n    \'ы\': \'y\',\n    \'э\': \'e\',\n    \'ю\': \'iu\',\n    \'я\': \'ia\',\n    \'ї\': \'i\',\n    \'є\': \'ie\',\n    \'ґ\': \'g\',\n    \'і\': \'i\'\n  }\n});\nfunction maybeCyrToLatin(str) {\n  if (convertSymbols.checkCyrRegex.test(str)) {\n    str = str.replace(convertSymbols.cyrRegex, function (match) {\n      if (undefined === convertSymbols.charsMap[match]) {\n        return \'\';\n      }\n\n      return convertSymbols.charsMap[match];\n    });\n  }\n\n  return str;\n}\nfunction getConvertedName(valueToChange) {\n  var regex = /\\s+/g,\n      slug = valueToChange.toLowerCase().replace(regex, \'_\'); // Replace accents\n\n  slug = slug.normalize(\'NFD\').replace(/[\\u0300-\\u036f]/g, \'\'); // Replace cyrillic\n\n  slug = maybeCyrToLatin(slug);\n\n  if (20 < slug.length) {\n    // 34 - Lionel Messi\'s age when he left Barcelona\n    slug = slug.substr(0, 34);\n\n    if (\'-\' === slug.slice(-1)) {\n      slug = slug.slice(0, -1);\n    }\n  }\n\n  return slug;\n}\nfunction classnames() {\n  var result = [];\n\n  var parseValues = function parseValues(source) {\n    source.forEach(function (itemClass) {\n      if (!itemClass) {\n        return;\n      }\n\n      if (Array.isArray(itemClass)) {\n        parseValues(itemClass);\n      }\n\n      if (\'string\' === typeof itemClass) {\n        result.push(itemClass.trim());\n      }\n\n      if (\'object\' === _typeof(itemClass)) {\n        for (var itemClassKey in itemClass) {\n          if (itemClass[itemClassKey]) {\n            result.push((itemClassKey + \'\').trim());\n          }\n        }\n      }\n    });\n  };\n\n  for (var _len = arguments.length, additional = new Array(_len), _key = 0; _key < _len; _key++) {\n    additional[_key] = arguments[_key];\n  }\n\n  parseValues(additional);\n  return result.join(\' \');\n}\nfunction convertObjectToOptionsList() {\n  var entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$usePlaceholder = _ref.usePlaceholder,\n      usePlaceholder = _ref$usePlaceholder === void 0 ? true : _ref$usePlaceholder,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'--\' : _ref$label,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \'\' : _ref$value;\n\n  var placeholder = {\n    label: label,\n    value: value\n  };\n\n  if (!entries) {\n    return usePlaceholder ? [placeholder] : [];\n  }\n\n  var options = Object.entries(entries).map(function (_ref2) {\n    var _ref3 = tools_slicedToArray(_ref2, 2),\n        value = _ref3[0],\n        label = _ref3[1];\n\n    return {\n      value: value,\n      label: label\n    };\n  });\n  return usePlaceholder ? [placeholder].concat(tools_toConsumableArray(options)) : options;\n}\n/* harmony default export */ const tools = (Tools);\n;// CONCATENATED MODULE: ./package/components/presets/preset-editor.js\nfunction preset_editor_extends() { preset_editor_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return preset_editor_extends.apply(this, arguments); }\n\nfunction preset_editor_toConsumableArray(arr) { return preset_editor_arrayWithoutHoles(arr) || preset_editor_iterableToArray(arr) || preset_editor_unsupportedIterableToArray(arr) || preset_editor_nonIterableSpread(); }\n\nfunction preset_editor_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction preset_editor_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return preset_editor_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return preset_editor_arrayLikeToArray(o, minLen); }\n\nfunction preset_editor_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction preset_editor_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return preset_editor_arrayLikeToArray(arr); }\n\nfunction preset_editor_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction preset_editor_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction preset_editor_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { preset_editor_ownKeys(Object(source), true).forEach(function (key) { preset_editor_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { preset_editor_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction preset_editor_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction preset_editor_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { preset_editor_typeof = function _typeof(obj) { return typeof obj; }; } else { preset_editor_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return preset_editor_typeof(obj); }\n\nvar preset_editor_applyFilters = wp.hooks.applyFilters;\n\nfunction withPreset(WrappedComponent) {\n  return function JetFormPresetEditor(props) {\n    var parseValue = function parseValue() {\n      var val = {};\n\n      if (\'object\' === preset_editor_typeof(props.value)) {\n        val = preset_editor_objectSpread({}, props.value);\n      } else if (props.value && \'string\' === typeof props.value) {\n        try {\n          val = JSON.parse(props.value);\n\n          if (\'number\' === typeof val) {\n            throw new Error();\n          }\n        } catch (exception) {\n          val = {};\n        }\n      }\n\n      val.jet_preset = true;\n      return val;\n    };\n\n    var isVisible = function isVisible(currentState, data, position) {\n      return (data.position && position === data.position || !data.position || \'query_var\' !== currentState.from) && isGlobalVisible(currentState, data);\n    };\n\n    var isGlobalVisible = function isGlobalVisible(currentState, data) {\n      if (!data.condition && !data.custom_condition) {\n        return true;\n      }\n\n      if (data.custom_condition) {\n        switch (data.custom_condition) {\n          case \'query_var\':\n            return \'post\' === currentState.from && \'query_var\' === currentState.post_from || \'user\' === currentState.from && \'query_var\' === currentState.user_from || \'query_var\' === currentState.from;\n\n          default:\n            return preset_editor_applyFilters(\'jet.fb.preset.editor.custom.condition\', false, data.custom_condition, currentState);\n        }\n      }\n\n      if (data.condition) {\n        return currentState[data.condition.field] === data.condition.value;\n      }\n\n      return true;\n    };\n\n    var isCurrentFieldVisible = function isCurrentFieldVisible(currentState, data, position) {\n      if (!data.condition && !data.parent_condition) {\n        return true;\n      }\n\n      if (data.position && position !== data.position) {\n        return false;\n      }\n\n      if (data.parent_condition && !data.condition) {\n        return currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (data.parent_condition && data.condition) {\n        return currentState[\'current_field_\' + data.condition.field] === data.condition.value && currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (!data.parent_condition && data.condition) {\n        return currentState[\'current_field_\' + data.condition.field] === data.condition.value;\n      }\n\n      return true;\n    };\n\n    var isMapFieldVisible = function isMapFieldVisible(currentState, data, field) {\n      if (!data.condition && !data.parent_condition) {\n        return true;\n      }\n\n      if (data.parent_condition && !data.condition) {\n        return currentState[data.parent_condition.field] === data.parent_condition.value;\n      } else if (data.parent_condition && data.condition) {\n        if (!currentState.fields_map || !currentState.fields_map[field]) {\n          return false;\n        } else {\n          return currentState.fields_map[field][data.condition.field] === data.condition.value && currentState[data.parent_condition.field] === data.parent_condition.value;\n        }\n      } else if (!data.parent_condition && data.condition) {\n        if (!currentState.fields_map || !currentState.fields_map[field]) {\n          return false;\n        } else {\n          return currentState.fields_map[field][data.condition.field] === data.condition.value;\n        }\n      }\n\n      return true;\n    };\n\n    var excludeOptions = function excludeOptions(selectOptions) {\n      var options = preset_editor_toConsumableArray(selectOptions);\n\n      options.forEach(function (option, index) {\n        if (props.excludeSources && props.excludeSources.includes(option.value)) {\n          options.splice(index, 1);\n        }\n      });\n      return options;\n    };\n\n    return wp.element.createElement(WrappedComponent, preset_editor_extends({\n      key: "wrapped-preset-editor"\n    }, props, {\n      parseValue: parseValue,\n      isVisible: isVisible,\n      isMapFieldVisible: isMapFieldVisible,\n      isCurrentFieldVisible: isCurrentFieldVisible,\n      excludeOptions: excludeOptions\n    }));\n  };\n}\n\n/* harmony default export */ const preset_editor = (withPreset);\n;// CONCATENATED MODULE: ./package/components/grouped-select-control.js\nvar isEmpty = window.lodash.isEmpty;\n/**\r\n * WordPress dependencies\r\n */\n\nvar withInstanceId = window.wp.compose.withInstanceId;\n/**\r\n * Internal dependencies\r\n */\n\nvar grouped_select_control_BaseControl = window.wp.components.BaseControl;\n\nfunction GroupedSelectControl(_ref) {\n  var help = _ref.help,\n      instanceId = _ref.instanceId,\n      label = _ref.label,\n      _ref$multiple = _ref.multiple,\n      multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n      onChange = _ref.onChange,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options,\n      className = _ref.className,\n      value = _ref.value,\n      hideLabelFromVision = _ref.hideLabelFromVision;\n  var id = "inspector-select-control-".concat(instanceId);\n\n  var onChangeValue = function onChangeValue(event) {\n    onChange(event.target.value);\n  }; // Disable reason: A select with an onchange throws a warning\n\n  /* eslint-disable jsx-a11y/no-onchange */\n\n\n  return !isEmpty(options) && wp.element.createElement(grouped_select_control_BaseControl, {\n    label: label,\n    hideLabelFromVision: hideLabelFromVision,\n    id: id,\n    help: help,\n    className: className\n  }, wp.element.createElement("select", {\n    id: id,\n    className: "components-select-control__input",\n    onChange: onChangeValue,\n    value: value,\n    "aria-describedby": !!help ? "".concat(id, "__help") : undefined\n  }, wp.element.createElement("option", {\n    key: "".concat(label, "-placeholder"),\n    value: ""\n  }, "--"), options.map(function (optGroup, groupIndex) {\n    return !isEmpty(optGroup.values) && wp.element.createElement("optgroup", {\n      key: "".concat(optGroup.label, "-").concat(groupIndex),\n      label: optGroup.label\n    }, optGroup.values.map(function (option, index) {\n      return wp.element.createElement("option", {\n        key: "".concat(option.value, "-").concat(index, "-").concat(groupIndex),\n        value: option.value,\n        disabled: option.disabled\n      }, option.label);\n    }));\n  })));\n  /* eslint-enable jsx-a11y/no-onchange */\n}\n\n/* harmony default export */ const grouped_select_control = (withInstanceId(GroupedSelectControl));\n;// CONCATENATED MODULE: ./package/components/presets/preset-render.js\nfunction preset_render_extends() { preset_render_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return preset_render_extends.apply(this, arguments); }\n\nfunction preset_render_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction preset_render_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { preset_render_ownKeys(Object(source), true).forEach(function (key) { preset_render_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { preset_render_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction preset_render_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction preset_render_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { preset_render_typeof = function _typeof(obj) { return typeof obj; }; } else { preset_render_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return preset_render_typeof(obj); }\n\n\nvar preset_render_wp$components = wp.components,\n    TextControl = preset_render_wp$components.TextControl,\n    SelectControl = preset_render_wp$components.SelectControl,\n    CustomSelectControl = preset_render_wp$components.CustomSelectControl,\n    Card = preset_render_wp$components.Card,\n    CardBody = preset_render_wp$components.CardBody,\n    CardHeader = preset_render_wp$components.CardHeader;\n\nfunction GlobalField(_ref) {\n  var data = _ref.data,\n      value = _ref.value,\n      index = _ref.index,\n      onChangeValue = _ref.onChangeValue,\n      isVisible = _ref.isVisible,\n      _ref$excludeOptions = _ref.excludeOptions,\n      excludeOptions = _ref$excludeOptions === void 0 ? function (options) {\n    return options;\n  } : _ref$excludeOptions,\n      position = _ref.position;\n\n  switch (data.type) {\n    case \'text\':\n      return isVisible(value, data, position) && wp.element.createElement("div", {\n        key: \'field_\' + data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(TextControl, {\n        key: data.name + index,\n        label: data.label,\n        value: value[data.name],\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, data.name);\n        }\n      }));\n\n    case \'select\':\n      return isVisible(value, data, position) && wp.element.createElement("div", {\n        key: \'field_\' + data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(SelectControl, {\n        key: data.name + index,\n        labelPosition: "side",\n        options: excludeOptions(data.options),\n        label: data.label,\n        value: value[data.name],\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, data.name);\n        }\n      }));\n  }\n\n  return null;\n}\n\nfunction AvailableMapField(_ref2) {\n  var fieldsMap = _ref2.fieldsMap,\n      field = _ref2.field,\n      index = _ref2.index,\n      value = _ref2.value,\n      onChangeValue = _ref2.onChangeValue,\n      isMapFieldVisible = _ref2.isMapFieldVisible;\n  var currentVal = null;\n\n  if (!fieldsMap) {\n    fieldsMap = {};\n  }\n\n  currentVal = fieldsMap[field];\n\n  if (!currentVal || \'object\' !== preset_render_typeof(currentVal)) {\n    currentVal = {};\n  }\n\n  var AvailableFieldWrapper = function AvailableFieldWrapper(_ref3) {\n    var field = _ref3.field,\n        name = _ref3.name,\n        index = _ref3.index,\n        fIndex = _ref3.fIndex,\n        children = _ref3.children;\n    return wp.element.createElement(Card, {\n      key: field + name + index + fIndex,\n      size: \'extraSmall\',\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, wp.element.createElement(CardHeader, null, wp.element.createElement("span", {\n      className: "jet-label-overflow"\n    }, field)), wp.element.createElement(CardBody, {\n      key: field + name + index + fIndex,\n      className: \'jet-form-preset__fields-map-item\'\n    }, children));\n  };\n\n  function AvailableFieldWrapperFunc(_ref4, children) {\n    var field = _ref4.field,\n        name = _ref4.name,\n        index = _ref4.index,\n        fIndex = _ref4.fIndex;\n    return wp.element.createElement(Card, {\n      key: field + name + index + fIndex,\n      size: \'extraSmall\',\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, wp.element.createElement(CardHeader, null, wp.element.createElement("span", {\n      className: "jet-label-overflow"\n    }, field)), wp.element.createElement(CardBody, {\n      key: field + name + index + fIndex,\n      className: \'jet-form-preset__fields-map-item\'\n    }, children));\n  }\n\n  return wp.element.createElement(React.Fragment, {\n    key: "map_field_preset_".concat(field + index)\n  }, window.JetFormEditorData.presetConfig.map_fields.map(function (data, fIndex) {\n    var props = {\n      field: field,\n      name: data.name,\n      index: index,\n      fIndex: fIndex\n    };\n    var uniqKey = \'control_\' + field + data.name + index + fIndex;\n\n    switch (data.type) {\n      case \'text\':\n        return isMapFieldVisible(value, data, field) && AvailableFieldWrapperFunc(props, wp.element.createElement(TextControl, {\n          key: uniqKey + \'TextControl\',\n          placeholder: data.label,\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n\n      case \'select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(SelectControl, {\n          options: data.options //label={ data.label }\n          ,\n          labelPosition: "top",\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n\n      case \'custom_select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(CustomSelectControl, {\n          options: data.options,\n          onChange: function onChange(_ref5) {\n            var selectedItem = _ref5.selectedItem;\n            currentVal[data.name] = selectedItem.key;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          },\n          value: data.options.find(function (option) {\n            return option.key === currentVal[data.name];\n          })\n        }));\n\n      case \'grouped_select\':\n        return isMapFieldVisible(value, data, field) && wp.element.createElement(AvailableFieldWrapper, preset_render_extends({}, props, {\n          key: uniqKey\n        }), wp.element.createElement(grouped_select_control, {\n          options: data.options //label={ data.label }\n          ,\n          labelPosition: "top",\n          value: currentVal[data.name],\n          onChange: function onChange(newVal) {\n            currentVal[data.name] = newVal;\n            onChangeValue(preset_render_objectSpread(preset_render_objectSpread({}, fieldsMap), {}, preset_render_defineProperty({}, field, currentVal)), \'fields_map\');\n          }\n        }));\n    }\n  }));\n}\n\nfunction MapField(_ref6) {\n  var data = _ref6.data,\n      value = _ref6.value,\n      index = _ref6.index,\n      currentState = _ref6.currentState,\n      onChangeValue = _ref6.onChangeValue,\n      isCurrentFieldVisible = _ref6.isCurrentFieldVisible,\n      _ref6$position = _ref6.position,\n      position = _ref6$position === void 0 ? \'general\' : _ref6$position;\n\n  switch (data.type) {\n    case \'text\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(TextControl, {\n        key: \'control_\' + data.name + index,\n        placeholder: data.label,\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n\n    case \'select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(SelectControl, {\n        key: \'control_\' + data.name + index,\n        labelPosition: "side",\n        options: data.options,\n        label: data.label,\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n\n    case \'custom_select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(CustomSelectControl, {\n        className: "jet-custom-select-control",\n        label: data.label,\n        options: data.options,\n        onChange: function onChange(_ref7) {\n          var selectedItem = _ref7.selectedItem;\n          value = selectedItem.key;\n          onChangeValue(value, \'current_field_\' + data.name);\n        },\n        value: data.options.find(function (option) {\n          return option.key === value;\n        })\n      }));\n\n    case \'grouped_select\':\n      return isCurrentFieldVisible(currentState, data) && wp.element.createElement("div", {\n        key: data.name + index,\n        className: \'jet-form-preset__row\'\n      }, wp.element.createElement(grouped_select_control, {\n        options: data.options,\n        label: data.label,\n        labelPosition: "side",\n        value: value,\n        onChange: function onChange(newVal) {\n          onChangeValue(newVal, \'current_field_\' + data.name);\n        }\n      }));\n  }\n\n  return null;\n}\n\n\n;// CONCATENATED MODULE: ./package/components/presets/dynamic-preset.js\nfunction dynamic_preset_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction dynamic_preset_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { dynamic_preset_ownKeys(Object(source), true).forEach(function (key) { dynamic_preset_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { dynamic_preset_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction dynamic_preset_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction dynamic_preset_slicedToArray(arr, i) { return dynamic_preset_arrayWithHoles(arr) || dynamic_preset_iterableToArrayLimit(arr, i) || dynamic_preset_unsupportedIterableToArray(arr, i) || dynamic_preset_nonIterableRest(); }\n\nfunction dynamic_preset_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction dynamic_preset_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dynamic_preset_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dynamic_preset_arrayLikeToArray(o, minLen); }\n\nfunction dynamic_preset_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction dynamic_preset_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction dynamic_preset_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar dynamic_preset_wp$element = wp.element,\n    dynamic_preset_useState = dynamic_preset_wp$element.useState,\n    dynamic_preset_useEffect = dynamic_preset_wp$element.useEffect;\n\nfunction DynamicPreset(_ref) {\n  var value = _ref.value,\n      isSaveAction = _ref.isSaveAction,\n      onSavePreset = _ref.onSavePreset,\n      onUnMount = _ref.onUnMount,\n      parseValue = _ref.parseValue,\n      excludeOptions = _ref.excludeOptions,\n      isCurrentFieldVisible = _ref.isCurrentFieldVisible,\n      isVisible = _ref.isVisible;\n  var position = \'dynamic\';\n\n  var _useState = dynamic_preset_useState(function () {\n    return parseValue(value);\n  }),\n      _useState2 = dynamic_preset_slicedToArray(_useState, 2),\n      stateValue = _useState2[0],\n      setValue = _useState2[1];\n\n  var onChangeValue = function onChangeValue(newValue, name) {\n    setValue(function (prev) {\n      return dynamic_preset_objectSpread(dynamic_preset_objectSpread({}, prev), {}, dynamic_preset_defineProperty({}, name, newValue));\n    });\n  };\n\n  dynamic_preset_useEffect(function () {\n    if (true === isSaveAction) {\n      if (onSavePreset) {\n        onSavePreset(JSON.stringify(stateValue));\n      }\n\n      onUnMount();\n    } else if (false === isSaveAction) {\n      onUnMount();\n    }\n  }, [isSaveAction]);\n  return wp.element.createElement(React.Fragment, null, window.JetFormEditorData.presetConfig.global_fields.map(function (data, index) {\n    return wp.element.createElement(GlobalField, {\n      key: "current_field_".concat(data.name, "_").concat(index),\n      value: stateValue,\n      index: index,\n      data: data,\n      excludeOptions: excludeOptions,\n      onChangeValue: onChangeValue,\n      isVisible: isVisible,\n      position: position\n    });\n  }), window.JetFormEditorData.presetConfig.map_fields.map(function (data, index) {\n    return wp.element.createElement(MapField, {\n      key: "current_field_".concat(data.name, "_").concat(index),\n      currentState: stateValue,\n      value: stateValue[\'current_field_\' + data.name],\n      index: index,\n      data: data,\n      onChangeValue: onChangeValue,\n      isCurrentFieldVisible: isCurrentFieldVisible,\n      position: position\n    });\n  }));\n}\n\n/* harmony default export */ const dynamic_preset = (preset_editor(DynamicPreset));\n;// CONCATENATED MODULE: ./editor/blocks/controls/fields-map.js\nfunction fields_map_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { fields_map_typeof = function _typeof(obj) { return typeof obj; }; } else { fields_map_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return fields_map_typeof(obj); }\n\nfunction fields_map_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction fields_map_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { fields_map_ownKeys(Object(source), true).forEach(function (key) { fields_map_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { fields_map_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction fields_map_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction fields_map_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction fields_map_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction fields_map_createClass(Constructor, protoProps, staticProps) { if (protoProps) fields_map_defineProperties(Constructor.prototype, protoProps); if (staticProps) fields_map_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (fields_map_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Internal dependencies\r\n */\nvar fields_map_wp$components = wp.components,\n    fields_map_SelectControl = fields_map_wp$components.SelectControl,\n    fields_map_TextControl = fields_map_wp$components.TextControl;\n\nvar JetFieldsMapControl = /*#__PURE__*/function (_wp$element$Component) {\n  _inherits(JetFieldsMapControl, _wp$element$Component);\n\n  var _super = _createSuper(JetFieldsMapControl);\n\n  function JetFieldsMapControl(props) {\n    var _this;\n\n    fields_map_classCallCheck(this, JetFieldsMapControl);\n\n    _this = _super.call(this, props);\n    _this.fieldTypes = _this.props.fieldTypes;\n    _this.taxonomiesList = _this.props.taxonomiesList;\n    _this.className = _this.props.className;\n    _this.metaProp = _this.props.metaProp ? _this.props.metaProp : \'post_meta\';\n    _this.termsProp = _this.props.termsProp ? _this.props.termsProp : \'post_terms\';\n    _this.index = _this.props.index;\n\n    _this.init();\n\n    _this.bindFunctions();\n\n    _this.state = {\n      type: _this.getFieldType(_this.props.fieldValue)\n    };\n    return _this;\n  }\n\n  fields_map_createClass(JetFieldsMapControl, [{\n    key: "bindFunctions",\n    value: function bindFunctions() {\n      this.onChangeType = this.onChangeType.bind(this);\n      this.onChangeValue = this.onChangeValue.bind(this);\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      this.id = "inspector-select-control-".concat(this.index);\n      this.preparedTaxes = [];\n      this.taxPrefix = \'jet_tax__\';\n\n      if (!this.taxonomiesList) {\n        return;\n      }\n\n      for (var i = 0; i < this.taxonomiesList.length; i++) {\n        this.preparedTaxes.push({\n          value: this.taxPrefix + this.taxonomiesList[i].value,\n          label: this.taxonomiesList[i].label\n        });\n      }\n    }\n  }, {\n    key: "getFieldName",\n    value: function getFieldName(value) {\n      if (!value) {\n        return \'\';\n      }\n\n      var fieldType = this.getFieldType(value);\n\n      if (this.termsProp === fieldType || this.metaProp === fieldType) {\n        return value;\n      } else {\n        return \'\';\n      }\n    }\n  }, {\n    key: "isTermOrMeta",\n    value: function isTermOrMeta(value) {\n      return this.termsProp === value || this.metaProp === value;\n    }\n  }, {\n    key: "getFieldType",\n    value: function getFieldType(value) {\n      if (!value) {\n        return \'\';\n      }\n\n      for (var i = 0; i < this.fieldTypes.length; i++) {\n        if (value === this.fieldTypes[i].value) {\n          return value;\n        }\n      }\n\n      if (value.includes(this.taxPrefix)) {\n        return this.termsProp;\n      } else {\n        return this.metaProp;\n      }\n    }\n  }, {\n    key: "onChangeValue",\n    value: function onChangeValue(newValue) {\n      this.props.onChange(fields_map_objectSpread(fields_map_objectSpread({}, this.props.fieldsMap), {}, fields_map_defineProperty({}, this.props.fieldName, newValue)));\n    }\n  }, {\n    key: "onChangeType",\n    value: function onChangeType(newValue) {\n      var val = this.getFieldType(newValue);\n      this.setState({\n        type: val\n      });\n\n      if (this.isTermOrMeta(val)) {\n        val = \'\';\n      }\n\n      this.onChangeValue(val);\n    } // Disable reason: A select with an onchange throws a warning\n\n    /* eslint-disable jsx-a11y/no-onchange */\n\n  }, {\n    key: "render",\n    value: function render() {\n      return wp.element.createElement("div", {\n        className: "jet-fields-map__row"\n      }, wp.element.createElement("div", {\n        className: "jet-post-field-control"\n      }, wp.element.createElement(fields_map_SelectControl, {\n        key: \'field_type_\' + this.props.fieldName + this.index,\n        label: this.props.fieldName,\n        labelPosition: "side",\n        value: this.state.type,\n        onChange: this.onChangeType,\n        options: this.fieldTypes,\n        style: {\n          width: \'160px\'\n        }\n      }), this.metaProp === this.state.type && wp.element.createElement(fields_map_TextControl, {\n        key: \'field_name_\' + this.props.fieldName + this.index,\n        value: this.props.fieldValue,\n        onChange: this.onChangeValue,\n        style: {\n          width: \'200px\'\n        }\n      }), this.termsProp === this.state.type && wp.element.createElement(fields_map_SelectControl, {\n        className: "jet-control-without-label",\n        key: \'field_tax_\' + this.props.fieldName + this.index,\n        value: this.props.fieldValue,\n        onChange: this.onChangeValue,\n        options: this.preparedTaxes,\n        style: {\n          width: \'200px\'\n        }\n      })));\n    }\n    /* eslint-enable jsx-a11y/no-onchange */\n\n  }]);\n\n  return JetFieldsMapControl;\n}(wp.element.Component);\n\n/* harmony default export */ const fields_map = (JetFieldsMapControl);\n;// CONCATENATED MODULE: ./package/components/fields/field-with-preset.js\nfunction field_with_preset_extends() { field_with_preset_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_with_preset_extends.apply(this, arguments); }\n\nfunction field_with_preset_toConsumableArray(arr) { return field_with_preset_arrayWithoutHoles(arr) || field_with_preset_iterableToArray(arr) || field_with_preset_unsupportedIterableToArray(arr) || field_with_preset_nonIterableSpread(); }\n\nfunction field_with_preset_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction field_with_preset_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction field_with_preset_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return field_with_preset_arrayLikeToArray(arr); }\n\nfunction field_with_preset_slicedToArray(arr, i) { return field_with_preset_arrayWithHoles(arr) || field_with_preset_iterableToArrayLimit(arr, i) || field_with_preset_unsupportedIterableToArray(arr, i) || field_with_preset_nonIterableRest(); }\n\nfunction field_with_preset_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction field_with_preset_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return field_with_preset_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return field_with_preset_arrayLikeToArray(o, minLen); }\n\nfunction field_with_preset_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction field_with_preset_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction field_with_preset_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar field_with_preset_wp$components = wp.components,\n    Path = field_with_preset_wp$components.Path,\n    SVG = field_with_preset_wp$components.SVG,\n    field_with_preset_BaseControl = field_with_preset_wp$components.BaseControl;\nvar field_with_preset_useState = wp.element.useState;\n\nfunction FieldWithPreset(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      ModalEditor = _ref.ModalEditor,\n      _ref$triggerClasses = _ref.triggerClasses,\n      triggerClasses = _ref$triggerClasses === void 0 ? [] : _ref$triggerClasses,\n      _ref$baseControlProps = _ref.baseControlProps,\n      baseControlProps = _ref$baseControlProps === void 0 ? {} : _ref$baseControlProps;\n\n  var _useState = field_with_preset_useState(false),\n      _useState2 = field_with_preset_slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var changeModalState = function changeModalState() {\n    setModalState(function (prev) {\n      return !prev;\n    });\n  };\n\n  var classNames = [\'jet-form-dynamic-preset__trigger\'].concat(field_with_preset_toConsumableArray(triggerClasses)).join(\' \');\n  return wp.element.createElement(React.Fragment, null, wp.element.createElement(field_with_preset_BaseControl, field_with_preset_extends({\n    className: "jet-form-dynamic-preset"\n  }, baseControlProps), children, wp.element.createElement("div", {\n    className: classNames,\n    onClick: changeModalState\n  }, wp.element.createElement(SVG, {\n    viewBox: "0 0 54 64",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, wp.element.createElement(Path, {\n    d: "M42.6396 26.4347C37.8682 27.3436 32.5666 28.0252 27.1894 28.0252C21.8121 28.0252 16.4348 27.3436 11.7391 26.4347C6.96774 25.4502 3.18093 23.8597 0.37868 21.9663L0.37868 28.0252C0.37868 29.5399 1.59046 31.1304 3.78682 32.4179C5.98317 33.7054 9.46704 34.9172 13.6325 35.5988C17.798 36.2805 22.115 36.8106 27.1894 36.8106C32.2637 36.8106 36.6564 36.5077 40.7462 35.5988C44.8359 34.69 48.3198 33.7054 50.5162 32.4179C52.7125 31.1304 54 29.5399 54 28.0252L54 21.9663C51.122 23.8597 47.3352 25.4502 42.6396 26.4347ZM42.6396 53.5484C37.8682 54.5329 32.5666 55.1388 27.1894 55.1388C21.8121 55.1388 16.4348 54.5329 11.7391 53.5484C7.04348 52.5638 3.18093 51.0491 0.378682 49.1556L0.378682 55.1388C0.378683 56.7293 1.59046 58.3197 3.78682 59.5315C6.36186 60.819 9.46705 62.1066 13.6325 62.7125C17.7223 63.697 22.115 64 27.1894 64C32.2637 64 36.6564 63.697 40.7462 62.7125C44.8359 61.8036 48.3198 60.819 50.5162 59.5315C52.7125 57.9411 54 56.7293 54 54.8359L54 48.8527C51.122 51.0491 47.3352 52.2608 42.6396 53.5484ZM42.6396 39.9915C37.8682 40.9004 32.5666 41.582 27.1894 41.582C21.8121 41.582 16.4348 40.9004 11.7391 39.9915C6.96774 39.007 3.18093 37.4922 0.378681 35.5988L0.378681 41.582C0.378681 43.1725 1.59046 44.6872 3.78682 45.9747C6.36185 47.2622 9.46705 48.474 13.6325 49.1556C17.7223 50.0645 22.115 50.3674 27.1894 50.3674C32.2637 50.3674 36.6564 50.0645 40.7462 49.1556C44.8359 48.1711 48.3198 47.2622 50.5162 45.9747C52.7125 44.3843 54 43.1725 54 41.582L54 35.5988C51.122 37.4922 47.3352 39.007 42.6396 39.9915ZM40.4432 2.12337C36.3535 1.13879 31.885 0.835848 26.8864 0.835849C21.8878 0.835849 17.4194 1.13879 13.2539 2.12337C9.08836 3.10794 5.68022 4.01678 3.48387 5.3043C1.28751 6.59181 -3.4782e-06 8.10654 -3.33916e-06 9.697L-2.95513e-06 14.0897C-2.81609e-06 15.6802 1.28752 17.2706 3.48387 18.5582C6.05891 19.7699 9.1641 21.0575 13.2539 21.6633C17.3436 22.2692 21.8121 22.9509 26.8864 22.9509C31.9607 22.9509 36.3535 22.9509 40.4432 22.345C44.533 21.7391 48.0169 20.4516 50.2132 19.164C52.7125 17.5736 54 15.9831 54 14.3927L54 9.99995C54 8.40948 52.7125 6.81902 50.5162 5.60724C48.3198 4.39546 44.533 2.72926 40.4432 2.12337Z",\n    fill: "#7E8993"\n  })))), modalState && wp.element.createElement(components_action_modal, {\n    onRequestClose: changeModalState,\n    classNames: [\'width-60\'],\n    title: \'Edit Preset\'\n  }, function (modalProps) {\n    return wp.element.createElement(ModalEditor, modalProps);\n  }));\n}\n\n/* harmony default export */ const field_with_preset = (FieldWithPreset);\n;// CONCATENATED MODULE: ./package/helpers/blocks/blocks-helper.js\nfunction blocks_helper_toConsumableArray(arr) { return blocks_helper_arrayWithoutHoles(arr) || blocks_helper_iterableToArray(arr) || blocks_helper_unsupportedIterableToArray(arr) || blocks_helper_nonIterableSpread(); }\n\nfunction blocks_helper_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blocks_helper_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blocks_helper_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blocks_helper_arrayLikeToArray(o, minLen); }\n\nfunction blocks_helper_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction blocks_helper_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return blocks_helper_arrayLikeToArray(arr); }\n\nfunction blocks_helper_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction blocks_helper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction blocks_helper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { blocks_helper_ownKeys(Object(source), true).forEach(function (key) { blocks_helper_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { blocks_helper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction blocks_helper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar blocks_helper_ = wp.i18n.__;\nvar _wp$hooks = wp.hooks,\n    blocks_helper_applyFilters = _wp$hooks.applyFilters,\n    addFilter = _wp$hooks.addFilter;\nvar blocks_helper_select = wp.data.select;\nvar blocksStore = wp.blocks.store;\n\nvar loopBlocks = function loopBlocks(current) {\n  var _select = blocks_helper_select(\'core/block-editor\'),\n      getBlock = _select.getBlock;\n\n  var _current = current,\n      innerBlocks = _current.innerBlocks;\n  current = blocks_helper_objectSpread(blocks_helper_objectSpread({}, current), getBlock(current.clientId));\n\n  if (innerBlocks !== null && innerBlocks !== void 0 && innerBlocks.length) {\n    current.innerBlocks = innerBlocks.map(loopBlocks);\n  }\n\n  return current;\n};\n\nvar getBlocks = function getBlocks() {\n  var _select2 = blocks_helper_select(\'core/block-editor\'),\n      getBlocks = _select2.getBlocks,\n      getTree = _select2.__unstableGetClientIdsTree;\n\n  if (\'function\' !== typeof getTree) {\n    return getBlocks();\n  }\n\n  return getTree().map(loopBlocks);\n};\n\nvar blocksRecursiveIterator = function blocksRecursiveIterator(blockParserFunc) {\n  var blocksRecursiveIterator = function blocksRecursiveIterator(blocks) {\n    blocks = blocks || getBlocks();\n    blocks.map(function (block) {\n      blockParserFunc(block);\n\n      if (block.innerBlocks.length) {\n        blocksRecursiveIterator(block.innerBlocks);\n      }\n    });\n  };\n\n  blocksRecursiveIterator();\n};\n\nvar getFormFieldsBlocks = function getFormFieldsBlocks() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var suppressFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \'default\';\n  var formFields = [];\n  var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'].concat(blocks_helper_toConsumableArray(exclude));\n  blocksRecursiveIterator(function (block) {\n    if (block.name.includes(\'jet-forms/\') && block.attributes.name && !skipFields.find(function (field) {\n      return block.name.includes(field);\n    })) {\n      /*const blockType = select( blocksStore ).getBlockType( block.name );*/\n      formFields.push({\n        blockName: block.name,\n        name: block.attributes.name,\n        label: block.attributes.label || block.attributes.name,\n        value: block.attributes.name //icon: blockType.icon.src,\n\n      });\n    }\n  });\n  formFields = placeholder ? [{\n    value: \'\',\n    label: placeholder\n  }].concat(blocks_helper_toConsumableArray(formFields)) : formFields;\n  return suppressFilter ? formFields : blocks_helper_applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields, context);\n};\n\nvar getFieldsWithoutCurrent = function getFieldsWithoutCurrent() {\n  var placeholder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var suppressFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'default\';\n  var skipFields = [\'submit\', \'form-break\', \'heading\', \'group-break\', \'conditional\'];\n  var formFields = [];\n  var current = wp.data.select(\'core/block-editor\').getSelectedBlock();\n\n  if (null === current) {\n    return [];\n  }\n\n  blocksRecursiveIterator(function (block) {\n    if (block.name.includes(\'jet-forms/\') && current.clientId !== block.clientId && !skipFields.find(function (field) {\n      return block.name.includes(field);\n    })) {\n      formFields.push({\n        blockName: block.name,\n        label: block.attributes.label || block.attributes.name,\n        value: block.attributes.name\n      });\n    }\n  });\n  formFields = placeholder ? [{\n    value: \'\',\n    label: placeholder\n  }].concat(blocks_helper_toConsumableArray(formFields)) : formFields;\n  return suppressFilter ? formFields : blocks_helper_applyFilters(\'jet.fb.getFormFieldsBlocks\', formFields, context);\n};\n\nvar getAvailableFields = function getAvailableFields() {\n  var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'default\';\n  var fields = [];\n  var blocks = getFormFieldsBlocks(exclude, false, false, context);\n\n  if (blocks) {\n    blocks.forEach(function (item) {\n      return fields.push(item.name);\n    });\n  }\n\n  return fields;\n};\n\nvar getAvailableFieldsString = function getAvailableFieldsString(blockName) {\n  var fields = getAvailableFields([blockName]);\n  var fieldsString = [];\n  fields.forEach(function (item) {\n    fieldsString.push(\'%FIELD::\' + item + \'%\');\n  });\n  return blocks_helper_(\'Available fields: \', \'jet-form-builder\') + fieldsString.join(\', \');\n};\n\nvar getInnerBlocks = function getInnerBlocks(clientId) {\n  var block = wp.data.select(\'core/block-editor\').getBlock(clientId);\n  return block ? block.innerBlocks : [];\n};\n\nvar getFormFieldsByBlock = function getFormFieldsByBlock(blockExclude) {\n  return function () {\n    return getFormFieldsBlocks([blockExclude.name]);\n  };\n};\n\nvar getBlocksByName = function getBlocksByName(blockNames) {\n  var blocks = [];\n  blocksRecursiveIterator(function (block) {\n    if (!blockNames.includes(block.name)) {\n      return;\n    }\n\n    blocks.push(block);\n  });\n  return blocks;\n};\n\nvar appendField = function appendField(callback) {\n  var fieldNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  addFilter(\'jet.fb.register.fields\', \'jet-form-builder\', function (blocks) {\n    return blocks.map(function (block) {\n      if (fieldNames.length && !fieldNames.includes(block.name)) {\n        return block;\n      }\n\n      return callback(block);\n    });\n  });\n};\n\n\n;// CONCATENATED MODULE: ./package/helpers/hooks/event-types.js\nfunction event_types_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = event_types_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction event_types_toConsumableArray(arr) { return event_types_arrayWithoutHoles(arr) || event_types_iterableToArray(arr) || event_types_unsupportedIterableToArray(arr) || event_types_nonIterableSpread(); }\n\nfunction event_types_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction event_types_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return event_types_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return event_types_arrayLikeToArray(o, minLen); }\n\nfunction event_types_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction event_types_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return event_types_arrayLikeToArray(arr); }\n\nfunction event_types_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar event_types_useSelect = wp.data.useSelect;\nvar useRequestEvents = function useRequestEvents() {\n  var currentAction = event_types_useSelect(function (select) {\n    return select(\'jet-forms/actions\').getCurrentAction();\n  });\n  var list = [].concat(event_types_toConsumableArray(useDefaultEvents(currentAction)), event_types_toConsumableArray(useEventsFromGateways(currentAction)), event_types_toConsumableArray(useEventsFromActions(currentAction)));\n  return event_types_useSelect(function (select) {\n    return select(\'jet-forms/events\').filterList(currentAction.type, list);\n  }, [currentAction.id]);\n};\n\nvar useDefaultEvents = function useDefaultEvents() {\n  var eventsObjects = event_types_useSelect(function (select) {\n    return select(\'jet-forms/events\').getAlwaysTypes();\n  }, []);\n  var events = [];\n\n  var _iterator = event_types_createForOfIteratorHelper(eventsObjects),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value.value;\n      events.push(value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return event_types_toConsumableArray(new Set(events));\n};\n\nvar useEventsFromGateways = function useEventsFromGateways() {\n  var _gateways$gateways$ga;\n\n  var gateways = useSelectPostMeta(\'_jf_gateways\');\n\n  var _ref = (_gateways$gateways$ga = gateways[gateways === null || gateways === void 0 ? void 0 : gateways.gateway]) !== null && _gateways$gateways$ga !== void 0 ? _gateways$gateways$ga : {},\n      _ref$scenario = _ref.scenario,\n      scenario = _ref$scenario === void 0 ? \'PAY_NOW\' : _ref$scenario;\n\n  return event_types_useSelect(function (select) {\n    var eventsObjects = select(\'jet-forms/events\').getGatewayTypes();\n    var events = [];\n\n    var _iterator2 = event_types_createForOfIteratorHelper(eventsObjects),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var event = _step2.value;\n        var correctGateway = event.gateway ? event.gateway === gateways.gateway : true;\n        var correctScenario = event.scenario ? event.scenario === scenario : true;\n\n        if (correctGateway && correctScenario) {\n          events.push(event.value);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return event_types_toConsumableArray(new Set(events));\n  }, [gateways === null || gateways === void 0 ? void 0 : gateways.gateway]);\n};\n\nvar useEventsFromActions = function useEventsFromActions(_ref2) {\n  var index = _ref2.index;\n  var actions = useSelectPostMeta(\'_jf_actions\');\n  actions.splice(index, 1);\n  var events = [];\n\n  var _iterator3 = event_types_createForOfIteratorHelper(actions),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _current$provideEvent;\n\n      var action = _step3.value;\n      var _action$settings$acti = action.settings[action.type],\n          current = _action$settings$acti === void 0 ? {} : _action$settings$acti;\n\n      if (!((_current$provideEvent = current.provideEvents) !== null && _current$provideEvent !== void 0 && _current$provideEvent.length)) {\n        continue;\n      }\n\n      events.push.apply(events, event_types_toConsumableArray(current.provideEvents));\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return event_types_toConsumableArray(new Set(events));\n};\n;// CONCATENATED MODULE: ./package/helpers/hooks/block-conditions.js\nfunction block_conditions_slicedToArray(arr, i) { return block_conditions_arrayWithHoles(arr) || block_conditions_iterableToArrayLimit(arr, i) || block_conditions_unsupportedIterableToArray(arr, i) || block_conditions_nonIterableRest(); }\n\nfunction block_conditions_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction block_conditions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return block_conditions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return block_conditions_arrayLikeToArray(o, minLen); }\n\nfunction block_conditions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction block_conditions_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction block_conditions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useBlockProps = wp.blockEditor.useBlockProps;\nvar block_conditions_useSelect = wp.data.useSelect;\n/**\r\n * @returns {{functions, operators}}\r\n */\n\nfunction useBlockConditions() {\n  var blockProps = useBlockProps();\n\n  var _useSelect = block_conditions_useSelect(function (select) {\n    return [select(\'jet-forms/block-conditions\').getOperators(), select(\'jet-forms/block-conditions\').getFunctions()];\n  }, []),\n      _useSelect2 = block_conditions_slicedToArray(_useSelect, 2),\n      operators = _useSelect2[0],\n      functions = _useSelect2[1];\n\n  if (\'jet-forms/conditional-block\' !== blockProps[\'data-type\']) {\n    return {\n      operators: operators,\n      functions: functions\n    };\n  }\n\n  var filteredFunctions = block_conditions_useSelect(function (select) {\n    return select(\'jet-forms/block-conditions\').getFilteredFunctions(blockProps);\n  }, []);\n  return {\n    operators: operators,\n    functions: filteredFunctions\n  };\n}\n\n\n;// CONCATENATED MODULE: ./package/helpers/hooks/blocks.js\nfunction blocks_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { blocks_typeof = function _typeof(obj) { return typeof obj; }; } else { blocks_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return blocks_typeof(obj); }\n\nfunction blocks_slicedToArray(arr, i) { return blocks_arrayWithHoles(arr) || blocks_iterableToArrayLimit(arr, i) || blocks_unsupportedIterableToArray(arr, i) || blocks_nonIterableRest(); }\n\nfunction blocks_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blocks_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blocks_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blocks_arrayLikeToArray(o, minLen); }\n\nfunction blocks_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction blocks_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction blocks_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar blocks_useBlockProps = wp.blockEditor.useBlockProps;\nvar blocks_wp$data = wp.data,\n    blocks_useSelect = blocks_wp$data.useSelect,\n    blocks_useDispatch = blocks_wp$data.useDispatch;\n\nfunction useUniqKey() {\n  var blockProps = blocks_useBlockProps();\n  return function (slug) {\n    return slug + \'-\' + blockProps[\'data-block\'];\n  };\n}\n\nfunction useBlockAttributes() {\n  var _useSelect = blocks_useSelect(function (select) {\n    var clientId = select(\'core/block-editor\').getSelectedBlockClientId();\n    return [clientId, select(\'core/block-editor\').getBlockAttributes(clientId)];\n  }),\n      _useSelect2 = blocks_slicedToArray(_useSelect, 2),\n      clientId = _useSelect2[0],\n      attributes = _useSelect2[1];\n\n  var _useDispatch = blocks_useDispatch(\'core/block-editor\', []),\n      updateBlock = _useDispatch.updateBlock;\n\n  var updateAttributes = function updateAttributes(props) {\n    if (\'object\' === blocks_typeof(props)) {\n      updateBlock(clientId, {\n        attributes: props\n      });\n    }\n\n    updateBlock(clientId, {\n      attributes: props(attributes)\n    });\n  };\n\n  return [attributes, updateAttributes];\n}\n\n\n;// CONCATENATED MODULE: ./package/components/fields/field-wrapper.js\n\n\nvar field_wrapper_BaseControl = wp.components.BaseControl;\nvar withSelect = wp.data.withSelect;\nvar RichText = wp.blockEditor.RichText;\nvar field_wrapper_ = wp.i18n.__;\n\nfunction RichDescription(content) {\n  return wp.element.createElement("small", {\n    style: {\n      whiteSpace: \'nowrap\',\n      padding: \'0.2em 0.8em 0 0\',\n      color: \'#8e8a8a\'\n    }\n  }, content);\n}\n\nfunction FieldWrapper(props) {\n  var attributes = props.attributes,\n      _props$editProps = props.editProps,\n      uniqKey = _props$editProps.uniqKey,\n      _props$editProps$bloc = _props$editProps.blockName,\n      blockName = _props$editProps$bloc === void 0 ? \'\' : _props$editProps$bloc,\n      children = props.children,\n      _props$wrapClasses = props.wrapClasses,\n      wrapClasses = _props$wrapClasses === void 0 ? [] : _props$wrapClasses,\n      _props$valueIfEmptyLa = props.valueIfEmptyLabel,\n      valueIfEmptyLabel = _props$valueIfEmptyLa === void 0 ? \'\' : _props$valueIfEmptyLa,\n      setAttributes = props.setAttributes,\n      _props$childrenPositi = props.childrenPosition,\n      childrenPosition = _props$childrenPositi === void 0 ? \'between\' : _props$childrenPositi;\n\n  var _jf_args = useSelectPostMeta(\'_jf_args\');\n\n  var setDynamicName = function setDynamicName() {\n    if (1 < attributes.label.length && (!attributes.name || \'field_name\' === attributes.name)) {\n      setAttributes({\n        name: getConvertedName(attributes.label)\n      });\n    }\n  };\n\n  function renderLabel() {\n    return wp.element.createElement(field_wrapper_BaseControl.VisualLabel, null, RichDescription(field_wrapper_(\'input label:\', \'jet-form-builder\')), wp.element.createElement("div", {\n      onBlur: setDynamicName,\n      className: "jet-form-builder__label"\n    }, wp.element.createElement(RichText, {\n      key: uniqKey(\'rich-label\'),\n      placeholder: "Label...",\n      allowedFormats: [],\n      value: attributes.label ? attributes.label : valueIfEmptyLabel,\n      onChange: function onChange(newLabel) {\n        return setAttributes({\n          label: newLabel\n        });\n      }\n    }), attributes.required && wp.element.createElement("span", {\n      className: \'jet-form-builder__required\'\n    }, _jf_args.required_mark ? _jf_args.required_mark : \'*\')));\n  }\n\n  function renderDescription() {\n    return wp.element.createElement("div", {\n      className: "jet-form-builder__desc--wrapper"\n    }, RichDescription(field_wrapper_(\'input description:\', \'jet-form-builder\')), wp.element.createElement(field_wrapper_BaseControl, {\n      key: \'custom_help_description\',\n      className: \'jet-form-builder__desc\'\n    }, wp.element.createElement("div", {\n      className: "components-base-control__help"\n    }, wp.element.createElement(RichText, {\n      key: uniqKey(\'rich-description\'),\n      tagName: "small",\n      placeholder: "Description...",\n      allowedFormats: [],\n      value: attributes.desc,\n      onChange: function onChange(desc) {\n        return setAttributes({\n          desc: desc\n        });\n      },\n      style: {\n        marginTop: \'0px\'\n      }\n    }))));\n  }\n\n  if (\'row\' === _jf_args.fields_layout) {\n    wrapClasses.push(\'jet-form-builder-row__flex\');\n  }\n\n  return wp.element.createElement(field_wrapper_BaseControl, {\n    key: uniqKey(\'placeHolder_block\'),\n    className: classnames(\'jet-form-builder__field-wrap\', \'jet-form-builder-row\', wrapClasses)\n  }, \'row\' !== _jf_args.fields_layout && wp.element.createElement(React.Fragment, null, \'top\' === childrenPosition && children, renderLabel(), \'between\' === childrenPosition && children, renderDescription(), \'bottom\' === childrenPosition && children), \'row\' === _jf_args.fields_layout && wp.element.createElement(React.Fragment, null, wp.element.createElement("div", {\n    className: "jet-form-builder-row__flex--label"\n  }, renderLabel(), renderDescription()), wp.element.createElement("div", {\n    className: "jet-form-builder-row__flex--content"\n  }, children)));\n}\n\n/* harmony default export */ const field_wrapper = (FieldWrapper);\n;// CONCATENATED MODULE: ./package/components/fields/macros-inserter.js\nvar _excluded = ["children", "fields", "onFieldClick", "customMacros", "zIndex"];\n\nfunction macros_inserter_extends() { macros_inserter_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return macros_inserter_extends.apply(this, arguments); }\n\nfunction macros_inserter_slicedToArray(arr, i) { return macros_inserter_arrayWithHoles(arr) || macros_inserter_iterableToArrayLimit(arr, i) || macros_inserter_unsupportedIterableToArray(arr, i) || macros_inserter_nonIterableRest(); }\n\nfunction macros_inserter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction macros_inserter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return macros_inserter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return macros_inserter_arrayLikeToArray(o, minLen); }\n\nfunction macros_inserter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction macros_inserter_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction macros_inserter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar macros_inserter_wp$components = wp.components,\n    macros_inserter_Button = macros_inserter_wp$components.Button,\n    Popover = macros_inserter_wp$components.Popover,\n    PanelBody = macros_inserter_wp$components.PanelBody;\nvar macros_inserter_useState = wp.element.useState;\n\nfunction MacrosInserter(_ref) {\n  var children = _ref.children,\n      fields = _ref.fields,\n      onFieldClick = _ref.onFieldClick,\n      customMacros = _ref.customMacros,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 1000000 : _ref$zIndex,\n      popoverProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = macros_inserter_useState(function () {\n    return false;\n  }),\n      _useState2 = macros_inserter_slicedToArray(_useState, 2),\n      showPopover = _useState2[0],\n      setPopoverState = _useState2[1];\n\n  return wp.element.createElement("div", {\n    className: "jet-form-editor__macros-inserter"\n  }, wp.element.createElement(macros_inserter_Button, {\n    isTertiary: true,\n    isSmall: true,\n    icon: showPopover ? \'no-alt\' : \'admin-tools\',\n    label: \'Insert macros\',\n    className: "jet-form-editor__macros-trigger",\n    onClick: function onClick() {\n      setPopoverState(function (prev) {\n        return !prev;\n      });\n    }\n  }), showPopover && wp.element.createElement(Popover, macros_inserter_extends({\n    style: {\n      zIndex: zIndex\n    },\n    position: \'bottom left\'\n  }, popoverProps), fields.length && wp.element.createElement(PanelBody, {\n    title: \'Form Fields\'\n  }, fields.map(function (field) {\n    return wp.element.createElement("div", {\n      key: \'field_\' + field.name\n    }, wp.element.createElement(macros_inserter_Button, {\n      isLink: true,\n      onClick: function onClick() {\n        onFieldClick(field.name);\n      }\n    }, \'%\' + field.name + \'%\'));\n  })), customMacros && wp.element.createElement(PanelBody, {\n    title: \'Custom Macros\'\n  }, customMacros.map(function (macros) {\n    return wp.element.createElement("div", {\n      key: \'macros_\' + macros\n    }, wp.element.createElement(macros_inserter_Button, {\n      isLink: true,\n      onClick: function onClick() {\n        onFieldClick(macros);\n      }\n    }, \'%\' + macros + \'%\'));\n  }))));\n}\n\n/* harmony default export */ const macros_inserter = (MacrosInserter);\n;// CONCATENATED MODULE: ./package/components/fields/repeater-with-state.js\nfunction repeater_with_state_slicedToArray(arr, i) { return repeater_with_state_arrayWithHoles(arr) || repeater_with_state_iterableToArrayLimit(arr, i) || repeater_with_state_unsupportedIterableToArray(arr, i) || repeater_with_state_nonIterableRest(); }\n\nfunction repeater_with_state_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction repeater_with_state_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction repeater_with_state_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction repeater_with_state_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction repeater_with_state_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { repeater_with_state_ownKeys(Object(source), true).forEach(function (key) { repeater_with_state_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { repeater_with_state_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction repeater_with_state_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction repeater_with_state_toConsumableArray(arr) { return repeater_with_state_arrayWithoutHoles(arr) || repeater_with_state_iterableToArray(arr) || repeater_with_state_unsupportedIterableToArray(arr) || repeater_with_state_nonIterableSpread(); }\n\nfunction repeater_with_state_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction repeater_with_state_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return repeater_with_state_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return repeater_with_state_arrayLikeToArray(o, minLen); }\n\nfunction repeater_with_state_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction repeater_with_state_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return repeater_with_state_arrayLikeToArray(arr); }\n\nfunction repeater_with_state_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar repeater_with_state_ = wp.i18n.__;\nvar repeater_with_state_wp$components = wp.components,\n    repeater_with_state_Button = repeater_with_state_wp$components.Button,\n    repeater_with_state_ButtonGroup = repeater_with_state_wp$components.ButtonGroup,\n    repeater_with_state_Card = repeater_with_state_wp$components.Card,\n    repeater_with_state_CardBody = repeater_with_state_wp$components.CardBody,\n    repeater_with_state_CardHeader = repeater_with_state_wp$components.CardHeader,\n    ToggleControl = repeater_with_state_wp$components.ToggleControl,\n    Flex = repeater_with_state_wp$components.Flex,\n    FlexItem = repeater_with_state_wp$components.FlexItem;\nvar repeater_with_state_wp$element = wp.element,\n    repeater_with_state_useState = repeater_with_state_wp$element.useState,\n    repeater_with_state_useEffect = repeater_with_state_wp$element.useEffect;\n\nfunction RepeaterWithState(_ref) {\n  var children = _ref.children,\n      ItemHeading = _ref.ItemHeading,\n      _ref$repeaterClasses = _ref.repeaterClasses,\n      repeaterClasses = _ref$repeaterClasses === void 0 ? [] : _ref$repeaterClasses,\n      _ref$repeaterItemClas = _ref.repeaterItemClasses,\n      repeaterItemClasses = _ref$repeaterItemClas === void 0 ? [] : _ref$repeaterItemClas,\n      newItem = _ref.newItem,\n      _ref$addNewButtonLabe = _ref.addNewButtonLabel,\n      addNewButtonLabel = _ref$addNewButtonLabe === void 0 ? \'Add New\' : _ref$addNewButtonLabe,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      isSaveAction = _ref.isSaveAction,\n      onSaveItems = _ref.onSaveItems,\n      onUnMount = _ref.onUnMount,\n      onAddNewItem = _ref.onAddNewItem,\n      onRemoveItem = _ref.onRemoveItem,\n      _ref$help = _ref.help,\n      help = _ref$help === void 0 ? {\n    helpSource: {},\n    helpVisible: function helpVisible() {\n      return false;\n    },\n    helpKey: \'\'\n  } : _ref$help,\n      _ref$additionalContro = _ref.additionalControls,\n      additionalControls = _ref$additionalContro === void 0 ? null : _ref$additionalContro;\n  var classNames = [\'jet-form-builder__repeater-component\'].concat(repeater_with_state_toConsumableArray(repeaterClasses)).join(\' \');\n  var itemClassNames = [\'jet-form-builder__repeater-component-item\'].concat(repeater_with_state_toConsumableArray(repeaterItemClasses)).join(\' \');\n\n  var parsedItems = function parsedItems() {\n    if (items && items.length > 0) {\n      return items.map(function (item) {\n        item.__visible = false;\n        return item;\n      });\n    } else {\n      return [repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, newItem), {}, {\n        __visible: true\n      })];\n    }\n  };\n\n  var _useState = repeater_with_state_useState([]),\n      _useState2 = repeater_with_state_slicedToArray(_useState, 2),\n      itemsData = _useState2[0],\n      setItemsData = _useState2[1];\n\n  repeater_with_state_useEffect(function () {\n    setItemsData(parsedItems());\n  }, []);\n\n  var _useState3 = repeater_with_state_useState(true),\n      _useState4 = repeater_with_state_slicedToArray(_useState3, 2),\n      isSafeDeleting = _useState4[0],\n      setSafeDeleting = _useState4[1];\n\n  var _changeCurrentItem = function changeCurrentItem(valueToSet, index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index] = repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, prev[index]), valueToSet);\n      return prevClone;\n    });\n  };\n\n  var onSaveDeleting = function onSaveDeleting(index) {\n    return confirm(repeater_with_state_("Are you sure you want to remove item ".concat(index + 1, "?"), \'jet-form-builder\'));\n  };\n\n  var removeOption = function removeOption(index) {\n    if (isSafeDeleting && !onSaveDeleting(index) || onRemoveItem && !onRemoveItem(index, itemsData)) {\n      return;\n    }\n\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone.splice(index, 1);\n      return prevClone;\n    });\n  };\n\n  var addNewItem = function addNewItem(value) {\n    if (onAddNewItem) {\n      onAddNewItem(value, itemsData);\n    }\n\n    setItemsData(function (prev) {\n      return [].concat(repeater_with_state_toConsumableArray(prev), [repeater_with_state_objectSpread(repeater_with_state_objectSpread({}, value), {}, {\n        __visible: true\n      })]);\n    });\n  };\n\n  var cloneItem = function cloneItem(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref2 = [prevClone.slice(0, index + 1), prevClone.slice(index + 1)],\n          before = _ref2[0],\n          after = _ref2[1];\n      return [].concat(repeater_with_state_toConsumableArray(before), [prevClone[index]], repeater_with_state_toConsumableArray(after));\n    });\n  };\n\n  var moveRepeaterItem = function moveRepeaterItem(_ref3) {\n    var oldIndex = _ref3.oldIndex,\n        newIndex = _ref3.newIndex;\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref4 = [prevClone[oldIndex], prevClone[newIndex]];\n      prevClone[newIndex] = _ref4[0];\n      prevClone[oldIndex] = _ref4[1];\n      return prevClone;\n    });\n  };\n\n  var moveUp = function moveUp(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index - 1\n    });\n  };\n\n  var moveDown = function moveDown(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index + 1\n    });\n  };\n\n  var isDisabledEnd = function isDisabledEnd(index) {\n    return !(index < itemsData.length - 1);\n  };\n  /*\r\n    \r\n   */\n\n\n  var toggleVisible = function toggleVisible(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index].__visible = !prevClone[index].__visible;\n      return prevClone;\n    });\n  };\n\n  repeater_with_state_useEffect(function () {\n    if (true === isSaveAction) {\n      for (var itemsDataKey in itemsData) {\n        for (var itemKey in itemsData[itemsDataKey]) {\n          if (itemKey.startsWith(\'__\')) {\n            delete itemsData[itemsDataKey][itemKey];\n          }\n        }\n      }\n\n      onSaveItems(itemsData);\n      onUnMount();\n    } else if (false === isSaveAction) {\n      onUnMount();\n    }\n  }, [isSaveAction]);\n\n  var getRepeaterItemId = function getRepeaterItemId(index) {\n    return "jet-form-builder-repeater__item_".concat(index);\n  };\n\n  var helpSource = help.helpSource,\n      helpVisible = help.helpVisible,\n      helpKey = help.helpKey;\n  var isVisibleHelp = helpVisible(itemsData) && helpSource && helpSource[helpKey];\n  return wp.element.createElement("div", {\n    className: classNames,\n    key: \'jet-form-builder-repeater\'\n  }, isVisibleHelp && wp.element.createElement("p", null, helpSource[helpKey].label), 0 < itemsData.length && wp.element.createElement(React.Fragment, null, wp.element.createElement(Flex, null, wp.element.createElement(FlexItem, null, wp.element.createElement(ToggleControl, {\n    label: repeater_with_state_(\'Safe deleting\', \'jet-form-builder\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  })), wp.element.createElement(FlexItem, {\n    style: {\n      flex: \'unset\',\n      marginBottom: \'1em\'\n    }\n  }))), additionalControls, itemsData.map(function (currentItem, index) {\n    return wp.element.createElement(repeater_with_state_Card, {\n      isElevated: true,\n      className: itemClassNames,\n      key: getRepeaterItemId(index)\n    }, wp.element.createElement(repeater_with_state_CardHeader, {\n      className: \'repeater__item__header\'\n    }, wp.element.createElement("div", {\n      className: "repeater-item__left-heading"\n    }, wp.element.createElement(repeater_with_state_ButtonGroup, {\n      className: \'repeater-action-buttons\'\n    }, wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      icon: currentItem.__visible ? \'no-alt\' : \'edit\',\n      onClick: function onClick() {\n        return toggleVisible(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !Boolean(index),\n      icon: \'arrow-up-alt2\',\n      onClick: function onClick() {\n        return moveUp(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: isDisabledEnd(index),\n      icon: \'arrow-down-alt2\',\n      onClick: function onClick() {\n        return moveDown(index);\n      },\n      className: \'repeater-action-button\'\n    })), wp.element.createElement("span", {\n      className: \'repeater-item-title\'\n    }, ItemHeading && wp.element.createElement(ItemHeading, {\n      currentItem: currentItem,\n      index: index,\n      changeCurrentItem: function changeCurrentItem(data) {\n        return _changeCurrentItem(data, index);\n      }\n    }), !ItemHeading && "#".concat(index + 1))), wp.element.createElement(repeater_with_state_ButtonGroup, null, wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      onClick: function onClick() {\n        return cloneItem(index);\n      }\n    }, repeater_with_state_(\'Clone\', \'jet-form-builder\')), wp.element.createElement(repeater_with_state_Button, {\n      isSmall: true,\n      isSecondary: true,\n      isDestructive: true,\n      onClick: function onClick() {\n        return removeOption(index);\n      }\n    }, repeater_with_state_(\'Delete\', \'jet-form-builder\')))), currentItem.__visible && wp.element.createElement(repeater_with_state_CardBody, {\n      className: \'repeater-item__content\'\n    }, children && wp.element.createElement(React.Fragment, {\n      key: "repeater-component__item_".concat(index)\n    }, \'function\' === typeof children && children({\n      currentItem: currentItem,\n      changeCurrentItem: function changeCurrentItem(data) {\n        return _changeCurrentItem(data, index);\n      },\n      currentIndex: index\n    }), \'function\' !== typeof children && children), !children && \'Set up your Repeater Template, please.\'));\n  }), 1 < itemsData.length && wp.element.createElement(React.Fragment, null, additionalControls, wp.element.createElement(ToggleControl, {\n    className: "jet-control-clear",\n    label: repeater_with_state_(\'Safe deleting\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  })), wp.element.createElement(repeater_with_state_Button, {\n    isSecondary: true,\n    onClick: function onClick() {\n      return addNewItem(newItem);\n    }\n  }, addNewButtonLabel));\n}\n\n/* harmony default export */ const repeater_with_state = (RepeaterWithState);\n;// CONCATENATED MODULE: ./package/components/fields/controls.js\nvar controls_ = wp.i18n.__;\nvar controls_applyFilters = wp.hooks.applyFilters;\nvar ControlsSettings = function ControlsSettings() {\n  return controls_applyFilters(\'jet.fb.register.fields.controls\', {\n    "general": {\n      label: controls_(\'General\', \'jet-form-builder\'),\n      attrs: [{\n        "attrName": "label",\n        "type": "text",\n        "label": controls_("Field Label", \'jet-form-builder\')\n      }, {\n        "attrName": "name",\n        "type": "text",\n        "label": controls_("Form field name", \'jet-form-builder\'),\n        "help": controls_("Should contain only Latin letters, numbers, `-` or `_` chars, no spaces only lower case", \'jet-form-builder\')\n      }, {\n        "attrName": "desc",\n        "type": "text",\n        "label": controls_("Field Description", \'jet-form-builder\')\n      }, {\n        "attrName": "default",\n        "type": "dynamic_text",\n        "label": controls_("Default Value", \'jet-form-builder\')\n      }]\n    },\n    "toolbar": {\n      attrs: [{\n        "attrName": "required",\n        "type": "toggle",\n        "label": controls_("Is Required", \'jet-form-builder\')\n      }]\n    },\n    "advanced": {\n      label: controls_(\'Advanced\', \'jet-form-builder\'),\n      attrs: [{\n        "attrName": "placeholder",\n        "type": "text",\n        "label": controls_("Placeholder", \'jet-form-builder\')\n      }, {\n        "attrName": "add_prev",\n        "type": "toggle",\n        "label": controls_("Add Prev Page Button", \'jet-form-builder\'),\n        help: controls_("It is recommended to use \\n\\t\\t\\t\\tthe \\"Action Button\\" block with the \\"Go to Prev Page\\" type", \'jet-from-builder\')\n      }, {\n        "attrName": "prev_label",\n        "type": "text",\n        "label": controls_("Prev Page Button Label", \'jet-form-builder\'),\n        "condition": "add_prev"\n      }, {\n        "attrName": "visibility",\n        "label": controls_("Field Visibility", \'jet-form-builder\'),\n        "type": "select",\n        "options": [{\n          "value": "all",\n          "label": controls_("For all", \'jet-form-builder\')\n        }, {\n          "value": "logged_id",\n          "label": controls_("Only for logged in users", \'jet-form-builder\')\n        }, {\n          "value": "not_logged_in",\n          "label": controls_("Only for NOT-logged in users", \'jet-form-builder\')\n        }]\n      }, {\n        "attrName": "class_name",\n        "type": "text",\n        "label": controls_("CSS Class Name", \'jet-form-builder\')\n      }]\n    }\n  });\n};\nfunction getBlockControls() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'all\';\n\n  if (!type) {\n    return false;\n  }\n\n  var controls = ControlsSettings();\n\n  if (\'all\' === type) {\n    return controls;\n  }\n\n  if (controls[type] && controls[type].attrs && Array.isArray(controls[type].attrs) && 0 < controls[type].attrs.length) {\n    return controls[type].attrs;\n  }\n\n  return false;\n}\n;// CONCATENATED MODULE: ./package/components/fields/field-control.js\nvar field_control_excluded = ["help", "attrName", "label"],\n    _excluded2 = ["help", "attrName", "label"];\n\nfunction field_control_extends() { field_control_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_control_extends.apply(this, arguments); }\n\nfunction field_control_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction field_control_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = field_control_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction field_control_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction field_control_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { field_control_typeof = function _typeof(obj) { return typeof obj; }; } else { field_control_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return field_control_typeof(obj); }\n\n\n\n\n\n\n\nvar _ref = wp.blockEditor ? wp.blockEditor : wp.editor,\n    BlockControls = _ref.BlockControls,\n    field_control_RichText = _ref.RichText;\n\nvar field_control_wp$element = wp.element,\n    field_control_useState = field_control_wp$element.useState,\n    field_control_useEffect = field_control_wp$element.useEffect;\nvar field_control_useDispatch = wp.data.useDispatch;\nvar field_control_wp$components = wp.components,\n    field_control_TextControl = field_control_wp$components.TextControl,\n    field_control_SelectControl = field_control_wp$components.SelectControl,\n    field_control_PanelBody = field_control_wp$components.PanelBody,\n    field_control_ToggleControl = field_control_wp$components.ToggleControl,\n    ToolbarGroup = field_control_wp$components.ToolbarGroup,\n    field_control_Flex = field_control_wp$components.Flex,\n    field_control_BaseControl = field_control_wp$components.BaseControl,\n    __experimentalNumberControl = field_control_wp$components.__experimentalNumberControl,\n    ClipboardButton = field_control_wp$components.ClipboardButton,\n    Snackbar = field_control_wp$components.Snackbar;\nvar NumberControl = wp.components.NumberControl;\n\nif (typeof NumberControl === \'undefined\') {\n  NumberControl = __experimentalNumberControl;\n}\n\nfunction filterFieldControls(_ref2) {\n  var type = _ref2.type,\n      attributes = _ref2.attributes,\n      _ref2$attrsSettings = _ref2.attrsSettings,\n      attrsSettings = _ref2$attrsSettings === void 0 ? {} : _ref2$attrsSettings,\n      _ref2$editProps = _ref2.editProps,\n      _ref2$editProps$attrH = _ref2$editProps.attrHelp,\n      attrHelp = _ref2$editProps$attrH === void 0 ? function () {\n    return \'\';\n  } : _ref2$editProps$attrH,\n      _ref2$editProps$block = _ref2$editProps.blockName,\n      blockName = _ref2$editProps$block === void 0 ? \'\' : _ref2$editProps$block;\n  var controls = ControlsSettings();\n\n  if (!controls[type]) {\n    return [];\n  }\n\n  var currentControl = controls[type];\n\n  var isValidCondition = function isValidCondition(attr) {\n    if (!attr.condition) {\n      return true;\n    }\n\n    if (blockName && attr.condition.blockName) {\n      if (\'string\' === typeof attr.condition.blockName && blockName !== attr.condition.blockName) {\n        return false;\n      }\n\n      if (\'object\' === field_control_typeof(attr.condition.blockName) && attr.condition.blockName.length && !attr.condition.blockName.includes(blockName)) {\n        return false;\n      }\n    }\n\n    var objectNotMatch = function () {\n      if (\'object\' !== field_control_typeof(attr.condition.attr)) {\n        return true;\n      }\n\n      var _attr$condition$attr = attr.condition.attr,\n          _attr$condition$attr$ = _attr$condition$attr.operator,\n          operator = _attr$condition$attr$ === void 0 ? \'and\' : _attr$condition$attr$,\n          _attr$condition$attr$2 = _attr$condition$attr.items,\n          items = _attr$condition$attr$2 === void 0 ? {} : _attr$condition$attr$2;\n\n      if (\'or\' === operator.toLowerCase()) {\n        for (var attrToCompare in items) {\n          var valueCompare = items[attrToCompare];\n\n          if (valueCompare === attributes[attrToCompare]) {\n            return true;\n          }\n        }\n      }\n\n      if (\'and\' === operator.toLowerCase()) {\n        return function () {\n          for (var _attrToCompare in items) {\n            if (items[_attrToCompare] !== attributes[_attrToCompare]) {\n              return false;\n            }\n          }\n\n          return true;\n        }();\n      }\n\n      return true;\n    }();\n\n    if (!objectNotMatch || \'string\' === typeof attr.condition.attr && attr.condition.attr && !attributes[attr.condition.attr] || \'string\' === typeof attr.condition && !attributes[attr.condition]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return currentControl.attrs.filter(function (_ref3) {\n    var _ref3$help = _ref3.help,\n        help = _ref3$help === void 0 ? \'\' : _ref3$help,\n        attrName = _ref3.attrName,\n        label = _ref3.label,\n        attr = field_control_objectWithoutProperties(_ref3, field_control_excluded);\n\n    var isRegisterAttribute = (attrName in attributes);\n    var validCondition = isValidCondition(attr);\n    var isHidden = attrName in attrsSettings && \'show\' in attrsSettings[attrName] && false === attrsSettings[attrName].show;\n    return isRegisterAttribute && validCondition && !isHidden;\n  });\n}\n\nfunction FieldControl(props) {\n  var setAttributes = props.setAttributes,\n      attributes = props.attributes,\n      _props$editProps = props.editProps,\n      _props$editProps$attr = _props$editProps.attrHelp,\n      attrHelp = _props$editProps$attr === void 0 ? function () {\n    return \'\';\n  } : _props$editProps$attr,\n      _props$editProps$bloc = _props$editProps.blockName,\n      blockName = _props$editProps$bloc === void 0 ? \'\' : _props$editProps$bloc,\n      _props$fieldControls = props.fieldControls,\n      fieldControls = _props$fieldControls === void 0 ? [] : _props$fieldControls,\n      _props$autoCompleteLa = props.autoCompleteLabel,\n      autoCompleteLabel = _props$autoCompleteLa === void 0 ? true : _props$autoCompleteLa;\n\n  if (!fieldControls.length) {\n    fieldControls = filterFieldControls(props);\n  }\n\n  var onChangeValue = function onChangeValue(value, key) {\n    setAttributes(field_control_defineProperty({}, key, value));\n  };\n\n  return fieldControls.map(function (_ref4) {\n    var _ref4$help = _ref4.help,\n        help = _ref4$help === void 0 ? \'\' : _ref4$help,\n        attrName = _ref4.attrName,\n        label = _ref4.label,\n        attr = field_control_objectWithoutProperties(_ref4, _excluded2);\n\n    switch (attr.type) {\n      case \'text\':\n        return wp.element.createElement(field_control_TextControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-TextControl"),\n          label: label,\n          help: help,\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            return onChangeValue(newVal, attrName);\n          },\n          onBlur: function onBlur() {\n            if (\'label\' === attrName && 1 < attributes.label.length && (!attributes.name || \'field_name\' === attributes.name) && autoCompleteLabel) {\n              onChangeValue(getConvertedName(attributes.label), \'name\');\n            }\n          }\n        });\n\n      case \'dynamic_text\':\n        return wp.element.createElement(field_with_preset, {\n          key: "".concat(attr.type, "-").concat(attrName, "-FieldWithPreset"),\n          ModalEditor: function ModalEditor(_ref5) {\n            var actionClick = _ref5.actionClick,\n                onRequestClose = _ref5.onRequestClose;\n            return wp.element.createElement(dynamic_preset, {\n              value: attributes[attrName],\n              isSaveAction: actionClick,\n              onSavePreset: function onSavePreset(newVal) {\n                onChangeValue(newVal, attrName);\n              },\n              onUnMount: onRequestClose\n            });\n          }\n        }, wp.element.createElement(field_control_TextControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-TextControlDynamic"),\n          label: label,\n          help: help || attrHelp(attrName),\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        }));\n\n      case \'select\':\n        return wp.element.createElement(field_control_SelectControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-SelectControl"),\n          label: label,\n          help: help || attrHelp(attrName),\n          value: attributes[attrName],\n          options: attr.options,\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        });\n\n      case \'toggle\':\n        return wp.element.createElement(field_control_ToggleControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-ToggleControl"),\n          label: label,\n          help: help || attrHelp(attrName),\n          checked: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(newVal, attrName);\n          }\n        });\n\n      case \'number\':\n        return wp.element.createElement(field_control_BaseControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-BaseControl"),\n          label: label\n        }, wp.element.createElement(NumberControl, {\n          key: "".concat(attr.type, "-").concat(attrName, "-NumberControl"),\n          value: attributes[attrName],\n          onChange: function onChange(newVal) {\n            onChangeValue(Number(newVal), attrName);\n          }\n        }), wp.element.createElement("p", {\n          className: \'components-base-control__help\',\n          style: {\n            color: \'rgb(117, 117, 117)\'\n          }\n        }, help || attrHelp(attrName)));\n    }\n  });\n}\n\nfunction GeneralFields(props) {\n  var currentControl = ControlsSettings().general;\n  return wp.element.createElement(field_control_PanelBody, {\n    title: currentControl.label,\n    key: \'jet-form-general-fields\'\n  }, wp.element.createElement(FieldControl, field_control_extends({\n    type: "general",\n    key: \'jet-form-general-fields-component\'\n  }, props)), wp.element.createElement(FieldControl, field_control_extends({\n    type: "custom_general",\n    key: \'jet-form-general-custom-fields-component\'\n  }, props)));\n}\n\nfunction AdvancedFields(props) {\n  var currentControl = ControlsSettings().advanced;\n  return wp.element.createElement(field_control_PanelBody, {\n    title: currentControl.label,\n    key: \'jet-form-advanced-fields\',\n    initialOpen: false\n  }, wp.element.createElement(FieldControl, field_control_extends({\n    type: "advanced",\n    key: \'jet-form-advanced-fields-component\'\n  }, props)), wp.element.createElement(FieldControl, field_control_extends({\n    type: "custom_advanced",\n    key: \'jet-form-advanced-custom-fields-component\'\n  }, props)));\n}\n\nfunction ToolBarFields(props) {\n  var uniqKey = props.editProps.uniqKey,\n      _props$children = props.children,\n      children = _props$children === void 0 ? [] : _props$children,\n      _props$displayName = props.displayName,\n      displayName = _props$displayName === void 0 ? true : _props$displayName,\n      attributes = props.attributes,\n      setAttributes = props.setAttributes;\n  var displayNotice = useSuccessNotice("Copied \\"".concat(attributes.name, "\\" to clipboard."));\n  return wp.element.createElement(BlockControls, {\n    key: uniqKey(\'ToolBarFields-BlockControls\')\n  }, wp.element.createElement(ToolbarGroup, {\n    key: uniqKey(\'ToolBarFields-ToolbarGroup\')\n  }, wp.element.createElement(field_control_Flex, {\n    align: \'center\',\n    justify: \'center\',\n    className: \'jet-form-toggle-box\'\n  }, displayName && wp.element.createElement("div", {\n    className: \'jet-input-with-button\'\n  }, wp.element.createElement(ClipboardButton, {\n    isSmall: true,\n    icon: "admin-page",\n    showTooltip: true,\n    shortcut: "Copy name",\n    text: attributes.name,\n    onCopy: function onCopy() {\n      return displayNotice(true);\n    },\n    onFinishCopy: function onFinishCopy() {\n      return displayNotice(false);\n    }\n  }), wp.element.createElement(field_control_TextControl, {\n    value: attributes.name,\n    onChange: function onChange(name) {\n      return setAttributes({\n        name: name\n      });\n    }\n  })), wp.element.createElement(FieldControl, field_control_extends({\n    type: "toolbar",\n    key: uniqKey(\'jet-form-toolbar-fields-component\')\n  }, props)), children)));\n}\n\n\n;// CONCATENATED MODULE: ./package/components/actions/placeholder-message.js\nfunction placeholder_message_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction placeholder_message_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { placeholder_message_ownKeys(Object(source), true).forEach(function (key) { placeholder_message_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { placeholder_message_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction placeholder_message_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PlaceholderMessage(_ref) {\n  var style = _ref.style,\n      children = _ref.children;\n\n  var propStyle = placeholder_message_objectSpread({\n    fontSize: \'1.5em\',\n    padding: \'2em\',\n    textAlign: \'center\',\n    backgroundColor: \'aliceblue\'\n  }, style);\n\n  return wp.element.createElement("p", {\n    style: propStyle\n  }, children);\n}\n\n/* harmony default export */ const placeholder_message = (PlaceholderMessage);\n;// CONCATENATED MODULE: ./package/components/actions/action-messages.js\nfunction action_messages_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction action_messages_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { action_messages_ownKeys(Object(source), true).forEach(function (key) { action_messages_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { action_messages_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction action_messages_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction action_messages_slicedToArray(arr, i) { return action_messages_arrayWithHoles(arr) || action_messages_iterableToArrayLimit(arr, i) || action_messages_unsupportedIterableToArray(arr, i) || action_messages_nonIterableRest(); }\n\nfunction action_messages_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction action_messages_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return action_messages_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return action_messages_arrayLikeToArray(o, minLen); }\n\nfunction action_messages_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction action_messages_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction action_messages_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar action_messages_wp$components = wp.components,\n    action_messages_TextControl = action_messages_wp$components.TextControl,\n    action_messages_BaseControl = action_messages_wp$components.BaseControl;\nvar action_messages_wp$element = wp.element,\n    action_messages_useState = action_messages_wp$element.useState,\n    action_messages_useEffect = action_messages_wp$element.useEffect;\nvar action_messages_ = wp.i18n.__;\n\nfunction ActionMessages(props) {\n  var settings = props.settings,\n      source = props.source,\n      getMapField = props.getMapField,\n      setMapField = props.setMapField,\n      messages = props.messages,\n      onChangeSetting = props.onChangeSetting;\n  action_messages_useEffect(function () {\n    var oldMessages = settings.messages || {};\n    var messages = {};\n    Object.entries(source.__messages).forEach(function (_ref) {\n      var _ref2 = action_messages_slicedToArray(_ref, 2),\n          type = _ref2[0],\n          data = _ref2[1];\n\n      if (!oldMessages[type]) {\n        messages[type] = data.value;\n      }\n    });\n\n    if (messages) {\n      onChangeSetting(action_messages_objectSpread(action_messages_objectSpread({}, oldMessages), messages), \'messages\');\n    }\n  }, []);\n\n  var setMessage = function setMessage(value, nameField) {\n    var source = \'messages\';\n    setMapField({\n      value: value,\n      nameField: nameField,\n      source: source\n    });\n  };\n\n  var getMessage = function getMessage(name) {\n    var source = \'messages\';\n    return getMapField({\n      name: name,\n      source: source\n    });\n  };\n\n  return wp.element.createElement(action_messages_BaseControl, {\n    label: action_messages_(\'Messages Settings:\'),\n    key: "messages_settings_fields"\n  }, wp.element.createElement("div", {\n    className: "jet-user-fields-map__list"\n  }, settings.messages && Object.entries(settings.messages).map(function (_ref3, id) {\n    var _ref4 = action_messages_slicedToArray(_ref3, 2),\n        type = _ref4[0],\n        data = _ref4[1];\n\n    return wp.element.createElement("div", {\n      className: "jet-user-meta__row",\n      key: \'message_\' + type + id\n    }, wp.element.createElement(action_messages_TextControl, {\n      key: type + id,\n      label: messages(type).label,\n      value: getMessage(type),\n      onChange: function onChange(newValue) {\n        return setMessage(newValue, type);\n      }\n    }));\n  })));\n}\n\n/* harmony default export */ const action_messages = (ActionMessages);\n;// CONCATENATED MODULE: ./package/components/horizontal-line.js\nfunction horizontal_line_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction horizontal_line_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { horizontal_line_ownKeys(Object(source), true).forEach(function (key) { horizontal_line_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { horizontal_line_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction horizontal_line_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction HorizontalLine(props) {\n  return wp.element.createElement("hr", {\n    style: horizontal_line_objectSpread({}, props)\n  });\n}\n\n/* harmony default export */ const horizontal_line = (HorizontalLine);\n;// CONCATENATED MODULE: ./package/components/request-loading-button.js\nfunction request_loading_button_slicedToArray(arr, i) { return request_loading_button_arrayWithHoles(arr) || request_loading_button_iterableToArrayLimit(arr, i) || request_loading_button_unsupportedIterableToArray(arr, i) || request_loading_button_nonIterableRest(); }\n\nfunction request_loading_button_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction request_loading_button_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return request_loading_button_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return request_loading_button_arrayLikeToArray(o, minLen); }\n\nfunction request_loading_button_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction request_loading_button_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction request_loading_button_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction RequestLoadingButton(_ref) {\n  var label = _ref.label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      _ref$onSuccessRequest = _ref.onSuccessRequest,\n      _onSuccessRequest = _ref$onSuccessRequest === void 0 ? function () {} : _ref$onSuccessRequest,\n      _ref$onFailRequest = _ref.onFailRequest,\n      _onFailRequest = _ref$onFailRequest === void 0 ? function () {} : _ref$onFailRequest;\n\n  var _useStateLoadingClass = useStateLoadingClasses(),\n      _useStateLoadingClass2 = request_loading_button_slicedToArray(_useStateLoadingClass, 3),\n      className = _useStateLoadingClass2[0],\n      setLoadingClass = _useStateLoadingClass2[1],\n      clearLoadingClass = _useStateLoadingClass2[2];\n\n  return wp.element.createElement(request_button, {\n    ajaxArgs: ajaxArgs,\n    label: label,\n    onLoading: setLoadingClass,\n    onSuccessRequest: function onSuccessRequest(response) {\n      clearLoadingClass();\n\n      _onSuccessRequest(response);\n    },\n    onFailRequest: function onFailRequest() {\n      clearLoadingClass();\n\n      _onFailRequest();\n    },\n    className: className\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const request_loading_button = (RequestLoadingButton);\n;// CONCATENATED MODULE: ./package/components/fields/field-settings-wrapper.js\nfunction field_settings_wrapper_extends() { field_settings_wrapper_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return field_settings_wrapper_extends.apply(this, arguments); }\n\nfunction field_settings_wrapper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction field_settings_wrapper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { field_settings_wrapper_ownKeys(Object(source), true).forEach(function (key) { field_settings_wrapper_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { field_settings_wrapper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction field_settings_wrapper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar field_settings_wrapper_ = wp.i18n.__;\nvar field_settings_wrapper_PanelBody = wp.components.PanelBody;\nfunction FieldSettingsWrapper(props) {\n  var title = props.title,\n      children = props.children,\n      _props$editProps$uniq = props.editProps.uniqKey,\n      uniqKey = _props$editProps$uniq === void 0 ? function (val) {\n    return val;\n  } : _props$editProps$uniq;\n  var fieldControls = filterFieldControls(field_settings_wrapper_objectSpread(field_settings_wrapper_objectSpread({}, props), {}, {\n    type: \'custom_settings\'\n  }));\n  return Boolean(fieldControls.length || children) && wp.element.createElement(field_settings_wrapper_PanelBody, {\n    title: title || field_settings_wrapper_(\'Field Settings\')\n  }, children, wp.element.createElement(FieldControl, field_settings_wrapper_extends({\n    type: "custom_settings",\n    fieldControls: fieldControls,\n    key: uniqKey(\'customSettingsFields\')\n  }, props)));\n}\n;// CONCATENATED MODULE: ./package/components/controls/base-help.js\nfunction base_help_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction base_help_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { base_help_ownKeys(Object(source), true).forEach(function (key) { base_help_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { base_help_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction base_help_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction BaseHelp(_ref) {\n  var children = _ref.children,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style;\n  return wp.element.createElement("p", {\n    className: \'jet-fb-base-control__help\',\n    style: base_help_objectSpread({\n      fontSize: \'12px\',\n      fontStyle: \'normal\',\n      color: \'rgb(117, 117, 117)\',\n      marginTop: \'0px\'\n    }, style)\n  }, children);\n}\n\n/* harmony default export */ const base_help = (BaseHelp);\n;// CONCATENATED MODULE: ./package/components/fetch-ajax-button.js\n\n\nvar compose = wp.compose.compose;\nvar fetch_ajax_button_wp$data = wp.data,\n    fetch_ajax_button_withSelect = fetch_ajax_button_wp$data.withSelect,\n    withDispatch = fetch_ajax_button_wp$data.withDispatch;\n\nfunction FetchAjaxButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$ajaxArgs = _ref.ajaxArgs,\n      ajaxArgs = _ref$ajaxArgs === void 0 ? {} : _ref$ajaxArgs,\n      loadingState = _ref.loadingState,\n      setLoading = _ref.setLoading,\n      id = _ref.id,\n      setResultSuccess = _ref.setResultSuccess,\n      setResultFail = _ref.setResultFail;\n\n  var getLabel = function getLabel() {\n    if (-1 === loadingState.id && initialLabel) {\n      return initialLabel;\n    }\n\n    return label;\n  };\n\n  return wp.element.createElement(request_button, {\n    disabled: loadingState.loading,\n    ajaxArgs: ajaxArgs,\n    label: getLabel(),\n    onLoading: function onLoading() {\n      setLoading(id);\n    },\n    onSuccessRequest: function onSuccessRequest(response) {\n      setResultSuccess(id, response);\n    },\n    onFailRequest: function onFailRequest() {\n      return setResultFail(id);\n    },\n    className: loadingState.buttonClassName\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const fetch_ajax_button = (compose(fetch_ajax_button_withSelect(withSelectActionLoading), withDispatch(withDispatchActionLoading))(FetchAjaxButton));\n;// CONCATENATED MODULE: ./package/components/validate-button-with-store.js\nvar validate_button_with_store_excluded = ["currentAction"];\n\nfunction validate_button_with_store_extends() { validate_button_with_store_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return validate_button_with_store_extends.apply(this, arguments); }\n\nfunction validate_button_with_store_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = validate_button_with_store_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction validate_button_with_store_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar validate_button_with_store_compose = wp.compose.compose;\nvar validate_button_with_store_wp$data = wp.data,\n    validate_button_with_store_withSelect = validate_button_with_store_wp$data.withSelect,\n    validate_button_with_store_withDispatch = validate_button_with_store_wp$data.withDispatch;\n\nfunction ValidateButtonWithStore(_ref) {\n  var currentAction = _ref.currentAction,\n      props = validate_button_with_store_objectWithoutProperties(_ref, validate_button_with_store_excluded);\n\n  return wp.element.createElement(fetch_ajax_button, validate_button_with_store_extends({\n    id: currentAction.id\n  }, props));\n}\n\n/* harmony default export */ const validate_button_with_store = (validate_button_with_store_compose(validate_button_with_store_withSelect(withCurrentAction))(ValidateButtonWithStore));\n;// CONCATENATED MODULE: ./package/components/fetch-api-button.js\n\n\nvar fetch_api_button_compose = wp.compose.compose;\nvar fetch_api_button_wp$data = wp.data,\n    fetch_api_button_withSelect = fetch_api_button_wp$data.withSelect,\n    fetch_api_button_withDispatch = fetch_api_button_wp$data.withDispatch;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\nfunction FetchApiButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$apiArgs = _ref.apiArgs,\n      apiArgs = _ref$apiArgs === void 0 ? {} : _ref$apiArgs,\n      loadingState = _ref.loadingState,\n      setLoading = _ref.setLoading,\n      id = _ref.id,\n      setResultSuccess = _ref.setResultSuccess,\n      setResultFail = _ref.setResultFail,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n      _ref$onFail = _ref.onFail,\n      onFail = _ref$onFail === void 0 ? function () {} : _ref$onFail,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden;\n\n  var getLabel = function getLabel() {\n    if ((-1 === loadingState.id || loadingState.loading) && initialLabel) {\n      return initialLabel;\n    }\n\n    return label;\n  };\n\n  return wp.element.createElement(request_button, {\n    disabled: loadingState.loading,\n    hasFetched: loadingState.id,\n    label: getLabel(),\n    className: loadingState.buttonClassName,\n    isHidden: isHidden,\n    customRequest: function customRequest() {\n      setLoading(id);\n      onLoading();\n      apiFetch(apiArgs).then(function (response) {\n        setResultSuccess(id, response);\n        onSuccess(response);\n      }).catch(function (error) {\n        setResultFail(id);\n        onFail(error);\n      });\n    }\n  }, wp.element.createElement("i", {\n    className: "dashicons"\n  }));\n}\n\n/* harmony default export */ const fetch_api_button = (fetch_api_button_compose(fetch_api_button_withDispatch(withDispatchActionLoading))(FetchApiButton));\n;// CONCATENATED MODULE: ./package/components/gateway-fetch-button.js\n\n\nvar gateway_fetch_button_compose = wp.compose.compose;\nvar gateway_fetch_button_withSelect = wp.data.withSelect;\n\nfunction GatewayFetchButton(_ref) {\n  var _ref$initialLabel = _ref.initialLabel,\n      initialLabel = _ref$initialLabel === void 0 ? \'Valid\' : _ref$initialLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \'InValid\' : _ref$label,\n      _ref$apiArgs = _ref.apiArgs,\n      apiArgs = _ref$apiArgs === void 0 ? {} : _ref$apiArgs,\n      gatewayRequestId = _ref.gatewayRequestId,\n      loadingGateway = _ref.loadingGateway,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n      _ref$onFail = _ref.onFail,\n      onFail = _ref$onFail === void 0 ? function () {} : _ref$onFail,\n      _ref$isHidden = _ref.isHidden,\n      isHidden = _ref$isHidden === void 0 ? false : _ref$isHidden;\n  return wp.element.createElement(fetch_api_button, {\n    id: gatewayRequestId,\n    loadingState: loadingGateway,\n    initialLabel: initialLabel,\n    label: label,\n    apiArgs: apiArgs,\n    onFail: onFail,\n    onLoading: onLoading,\n    onSuccess: onSuccess,\n    isHidden: isHidden\n  });\n}\n\n/* harmony default export */ const gateway_fetch_button = (gateway_fetch_button_compose(gateway_fetch_button_withSelect(withSelectGateways))(GatewayFetchButton));\n;// CONCATENATED MODULE: ./package/stores/actions/constants.js\n/* harmony default export */ const constants = ({\n  setCurrentAction: \'SET_CURRENT_ACTION\',\n  setLoading: \'SET_LOADING\',\n  setLoadingResult: \'SET_LOADING\',\n  updateCurrentSettings: \'UPDATE_ACTION_SETTINGS\',\n  updateCurrentConditions: \'UPDATE_ACTION_CONDITIONS\',\n  addCallback: \'ADD_CALLBACK\',\n  setMeta: \'SET_CURRENT_META\',\n  clearCurrent: \'CLEAR_CURRENT\'\n});\n;// CONCATENATED MODULE: ./package/stores/actions/loading.state.js\nfunction loading_state_toConsumableArray(arr) { return loading_state_arrayWithoutHoles(arr) || loading_state_iterableToArray(arr) || loading_state_unsupportedIterableToArray(arr) || loading_state_nonIterableSpread(); }\n\nfunction loading_state_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction loading_state_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return loading_state_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return loading_state_arrayLikeToArray(o, minLen); }\n\nfunction loading_state_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction loading_state_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return loading_state_arrayLikeToArray(arr); }\n\nfunction loading_state_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/* harmony default export */ const loading_state = ({\n  id: -1,\n  state: \'\',\n  success: false,\n  response: {},\n  loading: false,\n  buttonClassName: loading_state_toConsumableArray(initClasses)\n});\n;// CONCATENATED MODULE: ./package/stores/actions/selectors.js\nfunction selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { selectors_ownKeys(Object(source), true).forEach(function (key) { selectors_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar selectors_self = {\n  getLoadingIndex: function getLoadingIndex(state, actionId) {\n    return state.loadingState.findIndex(function (action) {\n      return action.id === actionId;\n    });\n  },\n  getLoading: function getLoading(state, actionId) {\n    var actionIndex = selectors_self.getLoadingIndex(state, actionId);\n    return -1 !== actionIndex ? state.loadingState[actionIndex] : selectors_objectSpread({}, loading_state);\n  },\n  getCallback: function getCallback(state, actionType) {\n    return state.callbacks[actionType];\n  }\n};\n/* harmony default export */ const selectors = (selectors_objectSpread(selectors_objectSpread({}, selectors_self), {}, {\n  isSettingsModal: function isSettingsModal(state) {\n    var _state$meta;\n\n    return \'settings\' === ((_state$meta = state.meta) === null || _state$meta === void 0 ? void 0 : _state$meta.modalType);\n  },\n  isConditionalModal: function isConditionalModal(state) {\n    var _state$meta2;\n\n    return \'conditions\' === ((_state$meta2 = state.meta) === null || _state$meta2 === void 0 ? void 0 : _state$meta2.modalType);\n  },\n  getMetaIndex: function getMetaIndex(state) {\n    var _state$meta3;\n\n    return (_state$meta3 = state.meta) === null || _state$meta3 === void 0 ? void 0 : _state$meta3.index;\n  },\n  getCurrentAction: function getCurrentAction(state) {\n    return state.currentAction;\n  },\n  getCurrentCallback: function getCurrentCallback(state) {\n    var _state$currentAction$, _state$currentAction;\n\n    var type = (_state$currentAction$ = (_state$currentAction = state.currentAction) === null || _state$currentAction === void 0 ? void 0 : _state$currentAction.type) !== null && _state$currentAction$ !== void 0 ? _state$currentAction$ : false;\n    return selectors_self.getCallback(state, type);\n  },\n  getCurrentSettings: function getCurrentSettings(state) {\n    var _state$currentAction$2, _state$currentAction2, _state$currentAction$3, _state$currentAction3, _settings$type;\n\n    var settings = (_state$currentAction$2 = (_state$currentAction2 = state.currentAction) === null || _state$currentAction2 === void 0 ? void 0 : _state$currentAction2.settings) !== null && _state$currentAction$2 !== void 0 ? _state$currentAction$2 : {};\n    var type = (_state$currentAction$3 = (_state$currentAction3 = state.currentAction) === null || _state$currentAction3 === void 0 ? void 0 : _state$currentAction3.type) !== null && _state$currentAction$3 !== void 0 ? _state$currentAction$3 : false;\n    return (_settings$type = settings[type]) !== null && _settings$type !== void 0 ? _settings$type : {};\n  },\n  getCurrentLoading: function getCurrentLoading(state) {\n    var _state$currentAction4;\n\n    var actionId = (_state$currentAction4 = state.currentAction) === null || _state$currentAction4 === void 0 ? void 0 : _state$currentAction4.id;\n    return selectors_self.getLoading(state, actionId);\n  },\n  dangerGetAllLoading: function dangerGetAllLoading(state) {\n    return state.loadingState;\n  }\n}));\n;// CONCATENATED MODULE: ./package/stores/actions/functions.js\nfunction functions_toConsumableArray(arr) { return functions_arrayWithoutHoles(arr) || functions_iterableToArray(arr) || functions_unsupportedIterableToArray(arr) || functions_nonIterableSpread(); }\n\nfunction functions_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction functions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return functions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return functions_arrayLikeToArray(o, minLen); }\n\nfunction functions_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction functions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return functions_arrayLikeToArray(arr); }\n\nfunction functions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction functions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction functions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { functions_ownKeys(Object(source), true).forEach(function (key) { functions_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { functions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction functions_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar getLoadingItem = function getLoadingItem() {\n  var additional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var item = functions_objectSpread({}, loading_state);\n\n  if (additional.state) {\n    item.buttonClassName = [].concat(functions_toConsumableArray(initClasses), [additional.state]);\n  }\n\n  return functions_objectSpread(functions_objectSpread({}, item), additional);\n};\n\n/* harmony default export */ const functions = ({\n  getLoadingItem: getLoadingItem\n});\n;// CONCATENATED MODULE: ./package/helpers/actions/action-wrapper.js\nfunction action_wrapper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction action_wrapper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { action_wrapper_ownKeys(Object(source), true).forEach(function (key) { action_wrapper_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { action_wrapper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction action_wrapper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar action_wrapper_applyFilters = wp.hooks.applyFilters;\nfunction withActionLocalizeScript(actionType, ActionInstance) {\n  var localizedData = fromLocalizeHelper(\'getLocalizedFullPack\')(actionType);\n  return function (props) {\n    var onChangeSetting = function onChangeSetting(value, key) {\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), {}, action_wrapper_defineProperty({}, key, value)));\n    };\n\n    var onChangeSettingObj = function onChangeSettingObj(value) {\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), value));\n    };\n\n    var getMapField = function getMapField(_ref) {\n      var _ref$source = _ref.source,\n          source = _ref$source === void 0 ? \'fields_map\' : _ref$source,\n          name = _ref.name;\n      var settings = props.settings;\n\n      if (typeof settings[source] !== \'undefined\' && typeof settings[source][name] !== \'undefined\') {\n        return settings[source][name];\n      }\n\n      return \'\';\n    };\n\n    var setMapField = function setMapField(_ref2) {\n      var _ref2$source = _ref2.source,\n          source = _ref2$source === void 0 ? \'fields_map\' : _ref2$source,\n          nameField = _ref2.nameField,\n          value = _ref2.value;\n\n      var fieldsMap = action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings[source]), {}, action_wrapper_defineProperty({}, nameField, value));\n\n      props.onChange(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props.settings), {}, action_wrapper_defineProperty({}, source, fieldsMap)));\n    };\n\n    var additionalProps = {\n      onChangeSetting: onChangeSetting,\n      getMapField: getMapField,\n      setMapField: setMapField,\n      onChangeSettingObj: onChangeSettingObj\n    };\n\n    var resultProps = action_wrapper_objectSpread(action_wrapper_objectSpread(action_wrapper_objectSpread({}, props), localizedData), additionalProps);\n\n    return wp.element.createElement(React.Fragment, null, wp.element.createElement(ActionInstance, resultProps), action_wrapper_applyFilters("jet.fb.render.action.".concat(actionType), wp.element.createElement(React.Fragment, null), resultProps));\n  };\n}\n;// CONCATENATED MODULE: ./package/stores/actions/dispatchers.js\nvar _constants$setCurrent;\n\nfunction dispatchers_toConsumableArray(arr) { return dispatchers_arrayWithoutHoles(arr) || dispatchers_iterableToArray(arr) || dispatchers_unsupportedIterableToArray(arr) || dispatchers_nonIterableSpread(); }\n\nfunction dispatchers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction dispatchers_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction dispatchers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return dispatchers_arrayLikeToArray(arr); }\n\nfunction dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { dispatchers_ownKeys(Object(source), true).forEach(function (key) { dispatchers_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/* harmony default export */ const dispatchers = (_constants$setCurrent = {}, dispatchers_defineProperty(_constants$setCurrent, constants.setCurrentAction, function (state, action) {\n  var update = {};\n\n  if (\'function\' === typeof action.item) {\n    update.currentAction = action.item(state.currentAction);\n  } else {\n    update.currentAction = action.item;\n  }\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), update);\n}), dispatchers_defineProperty(_constants$setCurrent, constants.setMeta, function (state, action) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    meta: dispatchers_objectSpread({}, action.item)\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.clearCurrent, function (state) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: {},\n    meta: {}\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.setLoading, function (state, action) {\n  var actionIndex = selectors.getLoadingIndex(state, action.state.id);\n\n  var loading = dispatchers_toConsumableArray(state.loadingState);\n\n  if (-1 !== actionIndex) {\n    loading[actionIndex] = functions.getLoadingItem(action.state);\n  } else {\n    loading.push(functions.getLoadingItem(action.state));\n  }\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    loadingState: loading\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.updateCurrentSettings, function (state, action) {\n  var _state$currentAction = state.currentAction,\n      settings = _state$currentAction.settings,\n      type = _state$currentAction.type;\n\n  var updateSettings = dispatchers_objectSpread(dispatchers_objectSpread({}, selectors.getCurrentSettings(state)), action.item);\n\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: dispatchers_objectSpread(dispatchers_objectSpread({}, state.currentAction), {}, {\n      settings: dispatchers_objectSpread(dispatchers_objectSpread({}, settings), {}, dispatchers_defineProperty({}, type, updateSettings))\n    })\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.updateCurrentConditions, function (state, action) {\n  var _state$currentAction$ = state.currentAction.conditions,\n      conditions = _state$currentAction$ === void 0 ? [] : _state$currentAction$;\n  var update = \'function\' === typeof action.item ? action.item(conditions) : action.item;\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    currentAction: dispatchers_objectSpread(dispatchers_objectSpread({}, state.currentAction), {}, {\n      conditions: update\n    })\n  });\n}), dispatchers_defineProperty(_constants$setCurrent, constants.addCallback, function (state, action) {\n  return dispatchers_objectSpread(dispatchers_objectSpread({}, state), {}, {\n    callbacks: dispatchers_objectSpread(dispatchers_objectSpread({}, state.callbacks), {}, dispatchers_defineProperty({}, action.actionType, withActionLocalizeScript(action.actionType, action.callback)))\n  });\n}), _constants$setCurrent);\n;// CONCATENATED MODULE: ./package/stores/actions/default.state.js\n\n/* harmony default export */ const default_state = ({\n  currentAction: {},\n  callbacks: {},\n  meta: {},\n  loadingState: [functions.getLoadingItem()]\n});\n;// CONCATENATED MODULE: ./package/stores/actions/reducer.js\n\n\n/* harmony default export */ function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : default_state;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/actions/actions.js\n\n/* harmony default export */ const actions = ({\n  setCurrentAction: function setCurrentAction() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      type: constants.setCurrentAction,\n      item: item\n    };\n  },\n  setMeta: function setMeta(item) {\n    return {\n      type: constants.setMeta,\n      item: item\n    };\n  },\n  clearCurrent: function clearCurrent() {\n    return {\n      type: constants.clearCurrent\n    };\n  },\n  setLoading: function setLoading(item) {\n    return {\n      type: constants.setLoading,\n      state: {\n        id: item.actionId,\n        state: \'loading\',\n        loading: true\n      }\n    };\n  },\n  setLoadingResult: function setLoadingResult(item) {\n    return {\n      type: constants.setLoadingResult,\n      state: {\n        id: item.actionId,\n        state: item.success ? \'is-valid\' : \'is-invalid\',\n        success: item.success,\n        response: item.response,\n        loading: false\n      }\n    };\n  },\n  updateCurrentSettings: function updateCurrentSettings(item) {\n    return {\n      type: constants.updateCurrentSettings,\n      item: item\n    };\n  },\n  updateCurrentConditions: function updateCurrentConditions(item) {\n    return {\n      type: constants.updateCurrentConditions,\n      item: item\n    };\n  },\n  addCallback: function addCallback(actionType, callback) {\n    return {\n      type: constants.addCallback,\n      actionType: actionType,\n      callback: callback\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/actions/index.js\n\n\n\nvar createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const stores_actions = (createReduxStore(\'jet-forms/actions\', {\n  reducer: reducer,\n  actions: actions,\n  selectors: selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/gateways/constants.js\n/* harmony default export */ const gateways_constants = ({\n  clearGateway: \'CLEAR_GATEWAY\',\n  clearScenario: \'CLEAR_SCENARIO\',\n  setScenario: \'SET_CURRENT_GATEWAY_SCENARIO\',\n  setGateway: \'SET_CURRENT_GATEWAY\',\n  setGatewaySpecific: \'SET_CURRENT_GATEWAY_SPECIFIC\',\n  setGatewayInner: \'SET_CURRENT_GATEWAY_INNER\',\n  setRequest: \'SET_CURRENT_REQUEST\',\n  setCurrentScenario: \'SET_CURRENT_SCENARIO\',\n  registerEventType: \'REGISTER_EVENT_TYPE\',\n  hardSetGateway: \'HARD_SET_CURRENT_GATEWAY\',\n  hardSetGatewaySpecific: \'HARD_SET_CURRENT_GATEWAY_SPECIFIC\'\n});\n;// CONCATENATED MODULE: ./package/stores/gateways/selectors.js\nfunction gateways_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction gateways_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { gateways_selectors_ownKeys(Object(source), true).forEach(function (key) { gateways_selectors_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { gateways_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction gateways_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar selectors_selectors = {\n  getCurrentRequestId: function getCurrentRequestId(state) {\n    return state.currentRequest.id;\n  },\n  getCurrentRequest: function getCurrentRequest(state) {\n    return state.currentRequest;\n  },\n  getScenario: function getScenario(state) {\n    return state.currentScenario;\n  },\n  getScenarioId: function getScenarioId(state) {\n    var _state$currentScenari;\n\n    return (_state$currentScenari = state.currentScenario) === null || _state$currentScenari === void 0 ? void 0 : _state$currentScenari.id;\n  },\n  getGatewayId: function getGatewayId(state) {\n    var _state$currentGateway;\n\n    return (_state$currentGateway = state.currentGateway) === null || _state$currentGateway === void 0 ? void 0 : _state$currentGateway.gateway;\n  },\n  getGateway: function getGateway(state) {\n    return state.currentGateway;\n  },\n  getEventTypes: function getEventTypes(state) {\n    return state.eventTypes;\n  }\n};\n/* harmony default export */ const gateways_selectors = (gateways_selectors_objectSpread(gateways_selectors_objectSpread({}, selectors_selectors), {}, {\n  getGatewaySpecific: function getGatewaySpecific(state) {\n    return state.currentGateway[selectors_selectors.getGatewayId(state)] || {};\n  }\n}));\n;// CONCATENATED MODULE: ./package/stores/gateways/dispatchers.js\nvar _constants$clearGatew;\n\nfunction gateways_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction gateways_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { gateways_dispatchers_ownKeys(Object(source), true).forEach(function (key) { gateways_dispatchers_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { gateways_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction gateways_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/* harmony default export */ const gateways_dispatchers = (_constants$clearGatew = {}, gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.clearGateway, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: {}\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.clearScenario, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: {}\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setScenario, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario), action.item || {})\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGateway, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), action.item)\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGatewaySpecific, function (state, action) {\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), {}, gateways_dispatchers_defineProperty({}, state.currentGateway.gateway, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, gateways_selectors.getGatewaySpecific(state)), action.item)))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setGatewayInner, function (state, action) {\n  var _action$item = action.item,\n      key = _action$item.key,\n      value = _action$item.value;\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentGateway: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway), {}, gateways_dispatchers_defineProperty({}, key, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentGateway[key] || {}), value)))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setRequest, function (state, action) {\n  var _action$item2;\n\n  var items = [gateways_selectors.getGatewayId(state), (_action$item2 = action.item) === null || _action$item2 === void 0 ? void 0 : _action$item2.id].filter(function (value) {\n    return value;\n  });\n  action.item.id = items.join(\'/\');\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentRequest: action.item\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.setCurrentScenario, function (state, action) {\n  var _state$currentScenari, _state$currentScenari2;\n\n  return gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state), {}, {\n    currentScenario: gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario), {}, gateways_dispatchers_defineProperty({}, (_state$currentScenari = state.currentScenario) === null || _state$currentScenari === void 0 ? void 0 : _state$currentScenari.id, gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, state.currentScenario[(_state$currentScenari2 = state.currentScenario) === null || _state$currentScenari2 === void 0 ? void 0 : _state$currentScenari2.id] || {}), action.item || {})))\n  });\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.hardSetGateway, function (state, action) {\n  if (action.item) {\n    state.currentGateway[action.item] = action.value;\n  }\n\n  return gateways_dispatchers_objectSpread({}, state);\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.hardSetGatewaySpecific, function (state, action) {\n  var _state$currentGateway;\n\n  if (action.item && (_state$currentGateway = state.currentGateway) !== null && _state$currentGateway !== void 0 && _state$currentGateway.gateway) {\n    var _state$currentGateway2, _state$currentGateway3;\n\n    state.currentGateway[(_state$currentGateway2 = state.currentGateway) === null || _state$currentGateway2 === void 0 ? void 0 : _state$currentGateway2.gateway] = {};\n    state.currentGateway[(_state$currentGateway3 = state.currentGateway) === null || _state$currentGateway3 === void 0 ? void 0 : _state$currentGateway3.gateway][action.item] = action.value;\n  }\n\n  return gateways_dispatchers_objectSpread({}, state);\n}), gateways_dispatchers_defineProperty(_constants$clearGatew, gateways_constants.registerEventType, function (state, action) {\n  var _action$item$gateway, _action$item3, _state$currentGateway4, _action$item$scenario, _action$item4, _state$currentScenari3;\n\n  var event = gateways_dispatchers_objectSpread(gateways_dispatchers_objectSpread({}, action.item), {}, {\n    gateway: (_action$item$gateway = (_action$item3 = action.item) === null || _action$item3 === void 0 ? void 0 : _action$item3.gateway) !== null && _action$item$gateway !== void 0 ? _action$item$gateway : (_state$currentGateway4 = state.currentGateway) === null || _state$currentGateway4 === void 0 ? void 0 : _state$currentGateway4.gateway,\n    scenario: (_action$item$scenario = (_action$item4 = action.item) === null || _action$item4 === void 0 ? void 0 : _action$item4.scenario) !== null && _action$item$scenario !== void 0 ? _action$item$scenario : (_state$currentScenari3 = state.currentScenario) === null || _state$currentScenari3 === void 0 ? void 0 : _state$currentScenari3.id\n  });\n\n  state.eventTypes.push(event);\n  return state;\n}), _constants$clearGatew);\n;// CONCATENATED MODULE: ./package/stores/gateways/reducer.js\n\nvar DEFAULT_STATE = {\n  currentRequest: {\n    id: -1\n  },\n  currentGateway: {},\n  currentScenario: {},\n  eventTypes: []\n};\n/* harmony default export */ function gateways_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = gateways_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/gateways/actions.js\n\n/* harmony default export */ const gateways_actions = ({\n  clearGateway: function clearGateway() {\n    return {\n      type: gateways_constants.clearGateway\n    };\n  },\n  clearScenario: function clearScenario() {\n    return {\n      type: gateways_constants.clearScenario\n    };\n  },\n  setRequest: function setRequest(item) {\n    return {\n      type: gateways_constants.setRequest,\n      item: item\n    };\n  },\n  setGateway: function setGateway(item) {\n    return {\n      type: gateways_constants.setGateway,\n      item: item\n    };\n  },\n  setGatewayInner: function setGatewayInner(item) {\n    return {\n      type: gateways_constants.setGatewayInner,\n      item: item\n    };\n  },\n  setGatewaySpecific: function setGatewaySpecific(item) {\n    return {\n      type: gateways_constants.setGatewaySpecific,\n      item: item\n    };\n  },\n  setScenario: function setScenario(item) {\n    return {\n      type: gateways_constants.setScenario,\n      item: item\n    };\n  },\n  setCurrentScenario: function setCurrentScenario(item) {\n    return {\n      type: gateways_constants.setCurrentScenario,\n      item: item\n    };\n  },\n  registerEventType: function registerEventType(item) {\n    return {\n      type: gateways_constants.registerEventType,\n      item: item\n    };\n  },\n  hardSetGateway: function hardSetGateway(item) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return {\n      type: gateways_constants.hardSetGateway,\n      item: item,\n      value: value\n    };\n  },\n  hardSetGatewaySpecific: function hardSetGatewaySpecific(item) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n    return {\n      type: gateways_constants.hardSetGatewaySpecific,\n      item: item,\n      value: value\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/gateways/index.js\n\n\n\nvar gateways_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const gateways = (gateways_createReduxStore(\'jet-forms/gateways\', {\n  reducer: gateways_reducer,\n  actions: gateways_actions,\n  selectors: gateways_selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/events/constants.js\n/* harmony default export */ const events_constants = ({\n  register: \'REGISTER\',\n  lockActions: \'LOCK_ACTIONS\'\n});\n;// CONCATENATED MODULE: ./package/stores/events/selectors.js\nfunction events_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction events_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { events_selectors_ownKeys(Object(source), true).forEach(function (key) { events_selectors_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { events_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction events_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction selectors_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = selectors_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction selectors_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return selectors_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return selectors_arrayLikeToArray(o, minLen); }\n\nfunction selectors_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar events_selectors_selectors = {\n  getTypeIndex: function getTypeIndex(state, slug) {\n    return state.types.findIndex(function (event) {\n      return event.value === slug;\n    });\n  },\n  getTypes: function getTypes(state) {\n    return state.types;\n  },\n  getGatewayTypes: function getGatewayTypes(state) {\n    return state.types.filter(function (event) {\n      return \'gateway\' in event;\n    });\n  },\n  getAlwaysTypes: function getAlwaysTypes(state) {\n    return state.types.filter(function (event) {\n      return \'always\' in event;\n    });\n  },\n  getType: function getType(state, slug) {\n    var index = events_selectors_selectors.getTypeIndex(state, slug);\n    return state.types[index];\n  },\n  getUnsupported: function getUnsupported(state, actionId) {\n    var _state$lockedActions$;\n\n    var action = (_state$lockedActions$ = state.lockedActions[actionId]) !== null && _state$lockedActions$ !== void 0 ? _state$lockedActions$ : false;\n\n    if (false === action) {\n      return [];\n    }\n\n    return action.unsupported;\n  },\n  getSupported: function getSupported(state, actionId) {\n    var _state$lockedActions$2;\n\n    var action = (_state$lockedActions$2 = state.lockedActions[actionId]) !== null && _state$lockedActions$2 !== void 0 ? _state$lockedActions$2 : false;\n\n    if (false === action) {\n      return [];\n    }\n\n    return action.supported;\n  },\n  isValid: function isValid(state, actionId, eventSlug) {\n    var unsupported = events_selectors_selectors.getUnsupported(state, actionId);\n\n    if (unsupported.length && unsupported.includes(eventSlug)) {\n      return false;\n    }\n\n    var supported = events_selectors_selectors.getSupported(state, actionId);\n    return !supported.length || supported.includes(eventSlug);\n  },\n  filterList: function filterList(state, actionId, eventList) {\n    return eventList.filter(function (current) {\n      return events_selectors_selectors.isValid(state, actionId, current);\n    });\n  },\n  getHelpMap: function getHelpMap(state) {\n    var map = {};\n\n    var _iterator = selectors_createForOfIteratorHelper(state.types),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n            value = _step$value.value,\n            help = _step$value.help;\n        map[value] = help;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return map;\n  }\n};\n/* harmony default export */ const events_selectors = (events_selectors_objectSpread({}, events_selectors_selectors));\n;// CONCATENATED MODULE: ./package/stores/events/dispatchers.js\nvar _constants$register$c;\n\nfunction events_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction events_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { events_dispatchers_ownKeys(Object(source), true).forEach(function (key) { events_dispatchers_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { events_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction events_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction dispatchers_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = events_dispatchers_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction events_dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return events_dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return events_dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction events_dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n/* harmony default export */ const events_dispatchers = (_constants$register$c = {}, events_dispatchers_defineProperty(_constants$register$c, events_constants.register, function (state, action) {\n  var _iterator = dispatchers_createForOfIteratorHelper(action.items),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      item.title = item.label;\n      var issetIndex = events_selectors.getTypeIndex(state, item.value); // is new event type\n\n      if (-1 === issetIndex) {\n        state.types.push(events_dispatchers_objectSpread({}, item));\n      } else {\n        state.types[issetIndex] = events_dispatchers_objectSpread({}, item);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return state;\n}), events_dispatchers_defineProperty(_constants$register$c, events_constants.lockActions, function (state, action) {\n  var _iterator2 = dispatchers_createForOfIteratorHelper(window.jetFormActionTypes),\n      _step2;\n\n  try {\n    var _loop = function _loop() {\n      var _window$actionSelf;\n\n      var _step2$value = _step2.value,\n          id = _step2$value.id,\n          actionSelf = _step2$value.self;\n      var current = (_window$actionSelf = window[actionSelf]) !== null && _window$actionSelf !== void 0 ? _window$actionSelf : false;\n\n      if (false === current) {\n        return "continue";\n      }\n\n      var unSup = current.__unsupported_events,\n          sup = current.__supported_events;\n      var action = {\n        unsupported: state.types.filter(function (_ref) {\n          var self = _ref.self;\n          return unSup.includes(self);\n        }).map(function (_ref2) {\n          var value = _ref2.value;\n          return value;\n        }),\n        supported: state.types.filter(function (_ref3) {\n          var self = _ref3.self;\n          return sup.includes(self);\n        }).map(function (_ref4) {\n          var value = _ref4.value;\n          return value;\n        })\n      };\n\n      if (!action.supported.length && !action.unsupported.length) {\n        return "continue";\n      }\n\n      state.lockedActions[id] = action;\n    };\n\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _ret = _loop();\n\n      if (_ret === "continue") continue;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return state;\n}), _constants$register$c);\n;// CONCATENATED MODULE: ./package/stores/events/reducer.js\n\nvar reducer_DEFAULT_STATE = {\n  types: [],\n  labels: {},\n  lockedActions: {}\n};\n/* harmony default export */ function events_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : reducer_DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = events_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/events/actions.js\n\n/* harmony default export */ const events_actions = ({\n  register: function register(items) {\n    return {\n      type: events_constants.register,\n      items: items\n    };\n  },\n  lockActions: function lockActions() {\n    return {\n      type: events_constants.lockActions\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/events/index.js\n\n\n\nvar events_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const events = (events_createReduxStore(\'jet-forms/events\', {\n  reducer: events_reducer,\n  actions: events_actions,\n  selectors: events_selectors\n}));\n;// CONCATENATED MODULE: ./package/stores/block-conditions/constants.js\n/* harmony default export */ const block_conditions_constants = ({\n  register: \'REGISTER\',\n  registerFunctionsFilters: \'REGISTER_FUNCTION_FILTERS\'\n});\n;// CONCATENATED MODULE: ./package/stores/block-conditions/dispatchers.js\nvar dispatchers_constants$register$c;\n\nfunction block_conditions_dispatchers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction block_conditions_dispatchers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { block_conditions_dispatchers_ownKeys(Object(source), true).forEach(function (key) { block_conditions_dispatchers_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { block_conditions_dispatchers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction block_conditions_dispatchers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction block_conditions_dispatchers_toConsumableArray(arr) { return block_conditions_dispatchers_arrayWithoutHoles(arr) || block_conditions_dispatchers_iterableToArray(arr) || block_conditions_dispatchers_unsupportedIterableToArray(arr) || block_conditions_dispatchers_nonIterableSpread(); }\n\nfunction block_conditions_dispatchers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction block_conditions_dispatchers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return block_conditions_dispatchers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return block_conditions_dispatchers_arrayLikeToArray(o, minLen); }\n\nfunction block_conditions_dispatchers_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction block_conditions_dispatchers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return block_conditions_dispatchers_arrayLikeToArray(arr); }\n\nfunction block_conditions_dispatchers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/* harmony default export */ const block_conditions_dispatchers = (dispatchers_constants$register$c = {}, block_conditions_dispatchers_defineProperty(dispatchers_constants$register$c, block_conditions_constants.register, function (state, action) {\n  var _action$items = action.items,\n      operators = _action$items.operators,\n      functions = _action$items.functions,\n      render_states = _action$items.render_states;\n  state.operators = block_conditions_dispatchers_toConsumableArray(operators);\n  state.functions = block_conditions_dispatchers_toConsumableArray(functions);\n  state.renderStates = block_conditions_dispatchers_toConsumableArray(render_states);\n  return state;\n}), block_conditions_dispatchers_defineProperty(dispatchers_constants$register$c, block_conditions_constants.registerFunctionsFilters, function (state, action) {\n  state.functionFilters = block_conditions_dispatchers_objectSpread(block_conditions_dispatchers_objectSpread({}, state.functionFilters), action.item);\n  return state;\n}), dispatchers_constants$register$c);\n;// CONCATENATED MODULE: ./package/stores/block-conditions/reducer.js\n\n\nvar block_conditions_reducer_DEFAULT_STATE = {\n  functions: [],\n  operators: [],\n  renderStates: [],\n  functionFilters: {\n    set_value: function set_value(item, blockProps) {\n      var clientId = blockProps[\'data-block\'];\n      return 1 === getInnerBlocks(clientId).length;\n    }\n  }\n};\n/* harmony default export */ function block_conditions_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : block_conditions_reducer_DEFAULT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = block_conditions_dispatchers[action === null || action === void 0 ? void 0 : action.type];\n\n  if (callback) {\n    return callback(state, action);\n  }\n\n  return state;\n}\n;// CONCATENATED MODULE: ./package/stores/block-conditions/actions.js\n\n/* harmony default export */ const block_conditions_actions = ({\n  register: function register(items) {\n    return {\n      type: block_conditions_constants.register,\n      items: items\n    };\n  },\n  registerFunctionsFilters: function registerFunctionsFilters(item) {\n    return {\n      type: block_conditions_constants.registerFunctionsFilters,\n      item: item\n    };\n  }\n});\n;// CONCATENATED MODULE: ./package/stores/block-conditions/selectors.js\nfunction block_conditions_selectors_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction block_conditions_selectors_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { block_conditions_selectors_ownKeys(Object(source), true).forEach(function (key) { block_conditions_selectors_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { block_conditions_selectors_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction block_conditions_selectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar block_conditions_selectors_selectors = {\n  getFunctions: function getFunctions(state) {\n    return state.functions;\n  },\n  getOperators: function getOperators(state) {\n    return state.operators;\n  },\n  getFunctionFilters: function getFunctionFilters(state) {\n    return state.functionFilters;\n  },\n  getRenderStates: function getRenderStates(state) {\n    return state.renderStates;\n  },\n  getRenderStatesList: function getRenderStatesList(state) {\n    return state.renderStates.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n  },\n  getFilteredFunctions: function getFilteredFunctions(state, blockProps) {\n    return state.functions.filter(function (item) {\n      var _state$functionFilter;\n\n      var callback = (_state$functionFilter = state.functionFilters[item.value]) !== null && _state$functionFilter !== void 0 ? _state$functionFilter : false;\n\n      if (false === callback) {\n        return true;\n      }\n\n      return callback(item, blockProps);\n    });\n  }\n};\n/* harmony default export */ const block_conditions_selectors = (block_conditions_selectors_objectSpread({}, block_conditions_selectors_selectors));\n;// CONCATENATED MODULE: ./package/stores/block-conditions/index.js\n\n\n\nvar block_conditions_createReduxStore = wp.data.createReduxStore;\n/* harmony default export */ const block_conditions = (block_conditions_createReduxStore(\'jet-forms/block-conditions\', {\n  reducer: block_conditions_reducer,\n  actions: block_conditions_actions,\n  selectors: block_conditions_selectors\n}));\n// EXTERNAL MODULE: ./package/stores/subscribers/migrate-gateways-settings.js\nvar migrate_gateways_settings = __webpack_require__(6089);\n;// CONCATENATED MODULE: ./package/stores/manager.js\n\n\n\n\n\nvar manager_wp$data = wp.data,\n    register = manager_wp$data.register,\n    dispatch = manager_wp$data.dispatch;\nregister(gateways);\nregister(events);\nregister(stores_actions);\nregister(block_conditions);\ndispatch(\'jet-forms/block-conditions\').register(window.jetFormBlockConditions);\ndispatch(\'jet-forms/events\').register(window.jetFormEvents.types);\ndispatch(\'jet-forms/events\').lockActions();\n;// CONCATENATED MODULE: ./package/context/safe.delete.js\nvar safe_delete_createContext = wp.element.createContext;\n/* harmony default export */ const safe_delete = (safe_delete_createContext(false));\n;// CONCATENATED MODULE: ./package/context/repeater.item.js\nvar repeater_item_createContext = wp.element.createContext;\n/* harmony default export */ const repeater_item = (repeater_item_createContext({\n  currentItem: {},\n  changeCurrentItem: function changeCurrentItem() {},\n  currentIndex: -1\n}));\n;// CONCATENATED MODULE: ./package/context/action.list.item.js\nvar action_list_item_createContext = wp.element.createContext;\n/* harmony default export */ const action_list_item = (action_list_item_createContext({\n  index: -1,\n  action: {}\n}));\n;// CONCATENATED MODULE: ./package/components/fields/safe.delete.toggle.js\nfunction safe_delete_toggle_slicedToArray(arr, i) { return safe_delete_toggle_arrayWithHoles(arr) || safe_delete_toggle_iterableToArrayLimit(arr, i) || safe_delete_toggle_unsupportedIterableToArray(arr, i) || safe_delete_toggle_nonIterableRest(); }\n\nfunction safe_delete_toggle_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction safe_delete_toggle_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return safe_delete_toggle_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return safe_delete_toggle_arrayLikeToArray(o, minLen); }\n\nfunction safe_delete_toggle_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction safe_delete_toggle_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction safe_delete_toggle_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar safe_delete_toggle_ToggleControl = wp.components.ToggleControl;\nvar safe_delete_toggle_ = wp.i18n.__;\nvar safe_delete_toggle_useState = wp.element.useState;\n\nfunction SafeDeleteToggle(props) {\n  var _useState = safe_delete_toggle_useState(true),\n      _useState2 = safe_delete_toggle_slicedToArray(_useState, 2),\n      isSafeDeleting = _useState2[0],\n      setSafeDeleting = _useState2[1];\n\n  return wp.element.createElement(React.Fragment, null, wp.element.createElement(safe_delete_toggle_ToggleControl, {\n    label: safe_delete_toggle_(\'Safe deleting\', \'jet-form-builder\'),\n    checked: isSafeDeleting,\n    onChange: setSafeDeleting\n  }), wp.element.createElement(safe_delete.Provider, {\n    value: isSafeDeleting\n  }, props.children));\n}\n\n/* harmony default export */ const safe_delete_toggle = (SafeDeleteToggle);\n;// CONCATENATED MODULE: ./package/helpers/hooks/useRepeaterState.js\nfunction useRepeaterState_toConsumableArray(arr) { return useRepeaterState_arrayWithoutHoles(arr) || useRepeaterState_iterableToArray(arr) || useRepeaterState_unsupportedIterableToArray(arr) || useRepeaterState_nonIterableSpread(); }\n\nfunction useRepeaterState_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction useRepeaterState_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return useRepeaterState_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useRepeaterState_arrayLikeToArray(o, minLen); }\n\nfunction useRepeaterState_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction useRepeaterState_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useRepeaterState_arrayLikeToArray(arr); }\n\nfunction useRepeaterState_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction useRepeaterState_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction useRepeaterState_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { useRepeaterState_ownKeys(Object(source), true).forEach(function (key) { useRepeaterState_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { useRepeaterState_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction useRepeaterState_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar useContext = wp.element.useContext;\nvar useRepeaterState_ = wp.i18n.__;\n\nvar onSaveDeleting = function onSaveDeleting(index) {\n  return confirm(useRepeaterState_("Are you sure you want to remove item ".concat(index + 1, "?"), \'jet-form-builder\'));\n};\n/**\r\n *\r\n * @param setItemsData\r\n * @returns {{\r\n * cloneItem: function,\r\n * addNewItem: function,\r\n * changeCurrentItem: function,\r\n * toggleVisible: function,\r\n * moveDown: function,\r\n * moveUp: function,\r\n * removeOption: function\r\n * }}\r\n */\n\n\nfunction useRepeaterState(setItemsData) {\n  var isSafeDeleting = useContext(safe_delete);\n\n  var changeCurrentItem = function changeCurrentItem(valueToSet, index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index] = useRepeaterState_objectSpread(useRepeaterState_objectSpread({}, prev[index]), valueToSet);\n      return prevClone;\n    });\n  };\n\n  var removeOption = function removeOption(index) {\n    if (isSafeDeleting && !onSaveDeleting(index)) {\n      return;\n    }\n\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone.splice(index, 1);\n      return prevClone;\n    });\n  };\n\n  var addNewItem = function addNewItem(value) {\n    setItemsData(function (prev) {\n      return [].concat(useRepeaterState_toConsumableArray(prev), [useRepeaterState_objectSpread(useRepeaterState_objectSpread({}, value), {}, {\n        __visible: true\n      })]);\n    });\n  };\n\n  var cloneItem = function cloneItem(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref = [prevClone.slice(0, index + 1), prevClone.slice(index + 1)],\n          before = _ref[0],\n          after = _ref[1];\n      return [].concat(useRepeaterState_toConsumableArray(before), [prevClone[index]], useRepeaterState_toConsumableArray(after));\n    });\n  };\n\n  var moveRepeaterItem = function moveRepeaterItem(_ref2) {\n    var oldIndex = _ref2.oldIndex,\n        newIndex = _ref2.newIndex;\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      var _ref3 = [prevClone[oldIndex], prevClone[newIndex]];\n      prevClone[newIndex] = _ref3[0];\n      prevClone[oldIndex] = _ref3[1];\n      return prevClone;\n    });\n  };\n\n  var moveUp = function moveUp(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index - 1\n    });\n  };\n\n  var moveDown = function moveDown(index) {\n    moveRepeaterItem({\n      oldIndex: index,\n      newIndex: index + 1\n    });\n  };\n\n  var toggleVisible = function toggleVisible(index) {\n    setItemsData(function (prev) {\n      var prevClone = JSON.parse(JSON.stringify(prev));\n      prevClone[index].__visible = !prevClone[index].__visible;\n      return prevClone;\n    });\n  };\n\n  return {\n    changeCurrentItem: changeCurrentItem,\n    toggleVisible: toggleVisible,\n    moveDown: moveDown,\n    moveUp: moveUp,\n    cloneItem: cloneItem,\n    addNewItem: addNewItem,\n    removeOption: removeOption\n  };\n}\n\n/* harmony default export */ const hooks_useRepeaterState = (useRepeaterState);\n;// CONCATENATED MODULE: ./package/components/fields/repeater.add.new.js\n\nvar repeater_add_new_Button = wp.components.Button;\n\nfunction RepeaterAddNew(props) {\n  var item = props.item,\n      onSetState = props.onSetState,\n      functions = props.functions,\n      children = props.children;\n\n  var _ref = functions !== null && functions !== void 0 ? functions : hooks_useRepeaterState(onSetState),\n      addNewItem = _ref.addNewItem;\n\n  return wp.element.createElement(repeater_add_new_Button, {\n    isSecondary: true,\n    onClick: function onClick() {\n      return addNewItem(item);\n    }\n  }, children);\n}\n\n/* harmony default export */ const repeater_add_new = (RepeaterAddNew);\n;// CONCATENATED MODULE: ./package/components/fields/repeater.js\n\n\nvar repeater_wp$components = wp.components,\n    repeater_Card = repeater_wp$components.Card,\n    repeater_ButtonGroup = repeater_wp$components.ButtonGroup,\n    repeater_Button = repeater_wp$components.Button,\n    repeater_CardHeader = repeater_wp$components.CardHeader,\n    repeater_CardBody = repeater_wp$components.CardBody;\nvar repeater_ = wp.i18n.__;\n\nfunction Repeater(props) {\n  var items = props.items,\n      onSetState = props.onSetState,\n      functions = props.functions,\n      children = props.children;\n\n  var _ref = functions !== null && functions !== void 0 ? functions : hooks_useRepeaterState(onSetState),\n      cloneItem = _ref.cloneItem,\n      moveUp = _ref.moveUp,\n      moveDown = _ref.moveDown,\n      toggleVisible = _ref.toggleVisible,\n      _changeCurrentItem = _ref.changeCurrentItem,\n      removeOption = _ref.removeOption;\n\n  return wp.element.createElement("div", {\n    className: \'jet-form-builder__repeater-component\',\n    key: \'jet-form-builder-repeater\'\n  }, items.map(function (currentItem, index) {\n    return wp.element.createElement(repeater_Card, {\n      isElevated: true,\n      className: \'jet-form-builder__repeater-component-item\',\n      key: "jet-form-builder__repeater-component-item-".concat(index)\n    }, wp.element.createElement(repeater_CardHeader, {\n      className: \'repeater__item__header\'\n    }, wp.element.createElement("div", {\n      className: "repeater-item__left-heading"\n    }, wp.element.createElement(repeater_ButtonGroup, {\n      className: \'repeater-action-buttons\'\n    }, wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      icon: currentItem.__visible ? \'no-alt\' : \'edit\',\n      onClick: function onClick() {\n        return toggleVisible(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !Boolean(index),\n      icon: \'arrow-up-alt2\',\n      onClick: function onClick() {\n        return moveUp(index);\n      },\n      className: \'repeater-action-button\'\n    }), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      disabled: !(index < items.length - 1),\n      icon: \'arrow-down-alt2\',\n      onClick: function onClick() {\n        return moveDown(index);\n      },\n      className: \'repeater-action-button\'\n    })), wp.element.createElement("span", {\n      className: \'repeater-item-title\'\n    }, "#".concat(index + 1))), wp.element.createElement(repeater_ButtonGroup, null, wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      onClick: function onClick() {\n        return cloneItem(index);\n      }\n    }, repeater_(\'Clone\', \'jet-form-builder\')), wp.element.createElement(repeater_Button, {\n      isSmall: true,\n      isSecondary: true,\n      isDestructive: true,\n      onClick: function onClick() {\n        return removeOption(index);\n      }\n    }, repeater_(\'Delete\', \'jet-form-builder\')))), currentItem.__visible && wp.element.createElement(repeater_CardBody, {\n      className: \'repeater-item__content\'\n    }, wp.element.createElement(repeater_item.Provider, {\n      value: {\n        currentItem: currentItem,\n        changeCurrentItem: function changeCurrentItem(data) {\n          return _changeCurrentItem(data, index);\n        },\n        currentIndex: index\n      }\n    }, children && children, !children && \'Set up your Repeater Template, please.\')));\n  }));\n}\n\n/* harmony default export */ const repeater = (Repeater);\n;// CONCATENATED MODULE: ./package/manager.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // JFBComponents\n\nwindow.JetFBComponents = {\n  ActionFieldsMap: ActionFieldsMap,\n  ActionModal: components_action_modal,\n  ActionModalContext: action_modal,\n  SafeDeleteContext: safe_delete,\n  RepeaterItemContext: repeater_item,\n  ActionListItemContext: action_list_item,\n  SafeDeleteToggle: safe_delete_toggle,\n  RepeaterAddNew: repeater_add_new,\n  Repeater: repeater,\n  RequestButton: request_button,\n  ValidateButton: validate_button,\n  RequestLoadingButton: request_loading_button,\n  WrapperRequiredControl: WrapperRequiredControl,\n  DynamicPreset: dynamic_preset,\n  JetFieldsMapControl: fields_map,\n  FieldWithPreset: field_with_preset,\n  GlobalField: GlobalField,\n  AvailableMapField: AvailableMapField,\n  MapField: MapField,\n  FieldWrapper: field_wrapper,\n  MacrosInserter: macros_inserter,\n  RepeaterWithState: repeater_with_state,\n  AdvancedFields: AdvancedFields,\n  GeneralFields: GeneralFields,\n  ToolBarFields: ToolBarFields,\n  FieldControl: FieldControl,\n  PlaceholderMessage: placeholder_message,\n  HorizontalLine: horizontal_line,\n  FieldSettingsWrapper: FieldSettingsWrapper,\n  ActionMessages: action_messages,\n  GroupedSelectControl: grouped_select_control,\n  BaseHelp: base_help,\n  ValidateButtonWithStore: validate_button_with_store,\n  GatewayFetchButton: gateway_fetch_button\n}; // JFBFunctions\n\nwindow.JetFBActions = {\n  addAction: action_manager,\n  withPreset: preset_editor,\n  getFormFieldsByBlock: getFormFieldsByBlock,\n  getInnerBlocks: getInnerBlocks,\n  getAvailableFieldsString: getAvailableFieldsString,\n  getAvailableFields: getAvailableFields,\n  getFormFieldsBlocks: getFormFieldsBlocks,\n  getFieldsWithoutCurrent: getFieldsWithoutCurrent,\n  gatewayAttr: gatewayAttr,\n  gatewayLabel: gatewayLabel,\n  registerGateway: registerGateway,\n  Tools: tools,\n  event: tools_event,\n  listen: listen,\n  actionByTypeList: actionByTypeList,\n  getActionSettings: getActionSettings,\n  fromLocalizeHelper: fromLocalizeHelper,\n  renderGateway: renderGateway,\n  renderGatewayWithPlaceholder: renderGatewayWithPlaceholder,\n  gatewayActionAttributes: gateway_action_attrubites,\n  globalTab: globalTab,\n  versionCompare: versionCompare,\n  convertListToFieldsMap: convertListToFieldsMap,\n  maybeCyrToLatin: maybeCyrToLatin,\n  getConvertedName: getConvertedName,\n  getBlockControls: getBlockControls,\n  classnames: classnames,\n  getBlocksByName: getBlocksByName,\n  convertObjectToOptionsList: convertObjectToOptionsList,\n  prepareActionsListByType: prepareActionsListByType,\n  appendField: appendField\n}; // JFBHooks\n\nwindow.JetFBHooks = {\n  useActions: useActions,\n  useMetaState: useMetaState,\n  useSelectPostMeta: useSelectPostMeta,\n  useStateValidClasses: useStateValidClasses,\n  useStateLoadingClasses: useStateLoadingClasses,\n  useSuccessNotice: useSuccessNotice,\n  useRequestEvents: useRequestEvents,\n  useBlockConditions: useBlockConditions,\n  useUniqKey: useUniqKey,\n  withRequestFields: withRequestFields,\n  useRequestFields: useRequestFields,\n  withSelectActionLoading: withSelectActionLoading,\n  withDispatchMeta: withDispatchMeta,\n  withSelectMeta: withSelectMeta,\n  withDispatchNotice: withDispatchNotice,\n  withSelectFormFields: withSelectFormFields,\n  withSelectGateways: withSelectGateways,\n  withDispatchGateways: withDispatchGateways,\n  withSelectActionsByType: withSelectActionsByType\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VkEsVUFUbUI7QUFVbkJyUixFQUFBQSxpQkFBaUIsRUFBakJBLGlCQVZtQjtBQVduQlQsRUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFYbUI7QUFZbkJXLEVBQUFBLHVCQUF1QixFQUF2QkEsdUJBWm1CO0FBYW5CUSxFQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQWJtQjtBQWNuQk0sRUFBQUEsY0FBYyxFQUFkQSxjQWRtQjtBQWVuQnBDLEVBQUFBLGtCQUFrQixFQUFsQkEsa0JBZm1CO0FBZ0JuQmlGLEVBQUFBLG9CQUFvQixFQUFwQkEsb0JBaEJtQjtBQWlCbkI1QyxFQUFBQSxrQkFBa0IsRUFBbEJBLGtCQWpCbUI7QUFrQm5CNEIsRUFBQUEsb0JBQW9CLEVBQXBCQSxvQkFsQm1CO0FBbUJuQjBCLEVBQUFBLHVCQUF1QixFQUF2QkEsdUJBQXVCQTtBQW5CSixDQUFwQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9hY3Rpb24tZmllbGRzLW1hcC5qcz83MzM1Iiwid2VicGFjazovLy8uL3BhY2thZ2UvY29udGV4dC9hY3Rpb24ubW9kYWwuanM/ZDRlNiIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvYWN0aW9uLW1vZGFsLmpzPzhmMzIiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3dyYXBwZXItcmVxdWlyZWQtY29udHJvbC5qcz9hNTNlIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9yZXF1ZXN0LWJ1dHRvbi5qcz8wZDFiIiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9nYXRld2F5cy9nYXRld2F5LWFjdGlvbi1hdHRydWJpdGVzLmpzPzRhMmMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9oZWxwZXJzL2FjdGlvbnMvYWN0aW9uLWhlbHBlci5qcz8xNTA1Iiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9zZXR0aW5ncy9oZWxwZXIuanM/ZTdjNCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2hlbHBlcnMvZ2F0ZXdheXMvZ2F0ZXdheS1oZWxwZXIuanM/MDlhNyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2hlbHBlcnMvaG9va3MvaG9va3MtaGVscGVyLmpzPzk4NTYiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3ZhbGlkYXRlLWJ1dHRvbi5qcz8yZjE2Iiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9hY3Rpb25zL2FjdGlvbi1tYW5hZ2VyLmpzP2MxOTYiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9oZWxwZXJzL3Rvb2xzLmpzPzlhMDUiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3ByZXNldHMvcHJlc2V0LWVkaXRvci5qcz8xZDkxIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9ncm91cGVkLXNlbGVjdC1jb250cm9sLmpzPzE5M2QiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3ByZXNldHMvcHJlc2V0LXJlbmRlci5qcz8zYjBjIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9wcmVzZXRzL2R5bmFtaWMtcHJlc2V0LmpzP2NkMTMiLCJ3ZWJwYWNrOi8vLy4vZWRpdG9yL2Jsb2Nrcy9jb250cm9scy9maWVsZHMtbWFwLmpzP2MzMWQiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZpZWxkcy9maWVsZC13aXRoLXByZXNldC5qcz8zNTI0Iiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9ibG9ja3MvYmxvY2tzLWhlbHBlci5qcz9mMGRjIiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9ob29rcy9ldmVudC10eXBlcy5qcz81NjU5Iiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9ob29rcy9ibG9jay1jb25kaXRpb25zLmpzP2JmMDIiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9oZWxwZXJzL2hvb2tzL2Jsb2Nrcy5qcz85MGYwIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9maWVsZHMvZmllbGQtd3JhcHBlci5qcz81ZDcyIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9maWVsZHMvbWFjcm9zLWluc2VydGVyLmpzP2Y3YmQiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZpZWxkcy9yZXBlYXRlci13aXRoLXN0YXRlLmpzP2U5NDMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZpZWxkcy9jb250cm9scy5qcz9hM2VmIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9maWVsZHMvZmllbGQtY29udHJvbC5qcz9iMzkzIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29tcG9uZW50cy9hY3Rpb25zL3BsYWNlaG9sZGVyLW1lc3NhZ2UuanM/YWIxNSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvYWN0aW9ucy9hY3Rpb24tbWVzc2FnZXMuanM/ZTE4MyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvaG9yaXpvbnRhbC1saW5lLmpzP2UwODciLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3JlcXVlc3QtbG9hZGluZy1idXR0b24uanM/NTI4OCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvZmllbGRzL2ZpZWxkLXNldHRpbmdzLXdyYXBwZXIuanM/ZmYwZiIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvY29udHJvbHMvYmFzZS1oZWxwLmpzP2MyOGMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZldGNoLWFqYXgtYnV0dG9uLmpzPzQwMDciLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL3ZhbGlkYXRlLWJ1dHRvbi13aXRoLXN0b3JlLmpzPzIwODUiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZldGNoLWFwaS1idXR0b24uanM/YWNkMiIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvZ2F0ZXdheS1mZXRjaC1idXR0b24uanM/OTM0MSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9hY3Rpb25zL2NvbnN0YW50cy5qcz85ZGMwIiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2FjdGlvbnMvbG9hZGluZy5zdGF0ZS5qcz9lNTU0Iiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2FjdGlvbnMvc2VsZWN0b3JzLmpzPzEyNWMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvYWN0aW9ucy9mdW5jdGlvbnMuanM/MGU1OCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2hlbHBlcnMvYWN0aW9ucy9hY3Rpb24td3JhcHBlci5qcz80ZTRjIiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2FjdGlvbnMvZGlzcGF0Y2hlcnMuanM/OWNkMSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9hY3Rpb25zL2RlZmF1bHQuc3RhdGUuanM/NTk5MyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9hY3Rpb25zL3JlZHVjZXIuanM/OGYzYiIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9hY3Rpb25zL2FjdGlvbnMuanM/ODI3NCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9hY3Rpb25zL2luZGV4LmpzP2Y4ODciLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZ2F0ZXdheXMvY29uc3RhbnRzLmpzPzQ3ZGEiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZ2F0ZXdheXMvc2VsZWN0b3JzLmpzPzlmNjMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZ2F0ZXdheXMvZGlzcGF0Y2hlcnMuanM/NzU5OSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9nYXRld2F5cy9yZWR1Y2VyLmpzP2Q3MTciLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZ2F0ZXdheXMvYWN0aW9ucy5qcz9hYTQyIiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2dhdGV3YXlzL2luZGV4LmpzP2YxZWEiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZXZlbnRzL2NvbnN0YW50cy5qcz80ZTI4Iiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2V2ZW50cy9zZWxlY3RvcnMuanM/NjVjMCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9ldmVudHMvZGlzcGF0Y2hlcnMuanM/OTFjZSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9ldmVudHMvcmVkdWNlci5qcz8xYzE4Iiwid2VicGFjazovLy8uL3BhY2thZ2Uvc3RvcmVzL2V2ZW50cy9hY3Rpb25zLmpzPzc4YjAiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvZXZlbnRzL2luZGV4LmpzP2Q0ZGMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvYmxvY2stY29uZGl0aW9ucy9jb25zdGFudHMuanM/ZDg3YSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9ibG9jay1jb25kaXRpb25zL2Rpc3BhdGNoZXJzLmpzPzBkYzUiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvYmxvY2stY29uZGl0aW9ucy9yZWR1Y2VyLmpzPzYxZWMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvYmxvY2stY29uZGl0aW9ucy9hY3Rpb25zLmpzPzg0MWEiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvYmxvY2stY29uZGl0aW9ucy9zZWxlY3RvcnMuanM/YWUxNSIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL3N0b3Jlcy9ibG9jay1jb25kaXRpb25zL2luZGV4LmpzPzZjN2YiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9zdG9yZXMvbWFuYWdlci5qcz84NWEwIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29udGV4dC9zYWZlLmRlbGV0ZS5qcz8xN2ZlIiwid2VicGFjazovLy8uL3BhY2thZ2UvY29udGV4dC9yZXBlYXRlci5pdGVtLmpzPzM2MWYiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb250ZXh0L2FjdGlvbi5saXN0Lml0ZW0uanM/ZmY5NyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlL2NvbXBvbmVudHMvZmllbGRzL3NhZmUuZGVsZXRlLnRvZ2dsZS5qcz8yZjNhIiwid2VicGFjazovLy8uL3BhY2thZ2UvaGVscGVycy9ob29rcy91c2VSZXBlYXRlclN0YXRlLmpzPzA4YjAiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZpZWxkcy9yZXBlYXRlci5hZGQubmV3LmpzP2FjMWQiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZS9jb21wb25lbnRzL2ZpZWxkcy9yZXBlYXRlci5qcz8xNDEwIiwid2VicGFjazovLy8uL3BhY2thZ2UvbWFuYWdlci5qcz9iMTQzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtcclxuXHRcdCAgQmFzZUNvbnRyb2wsXHJcblx0ICB9ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFjdGlvbkZpZWxkc01hcCgge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0IGZpZWxkcyA9IFtdLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0IGxhYmVsID0gJ1tFbXB0eSBsYWJlbF0nLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0IGNoaWxkcmVuID0gKCkgPT4ge30sXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgcGxhaW5IZWxwID0gJycsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgY3VzdG9tSGVscCA9IGZhbHNlLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCB9ICkge1xyXG5cclxuXHRyZXR1cm4gPEJhc2VDb250cm9sXHJcblx0XHRsYWJlbD17IGxhYmVsIH1cclxuXHRcdGtleT0namV0X2ZpZWxkc19tYXAnXHJcblx0PlxyXG5cdFx0PGRpdiBjbGFzc05hbWU9J2pldC11c2VyLWZpZWxkcy1tYXBfX2xpc3QnPlxyXG5cdFx0XHR7ICggY3VzdG9tSGVscCAmJiAnZnVuY3Rpb24nID09PSB0eXBlb2YgY3VzdG9tSGVscCApICYmIGN1c3RvbUhlbHAoKSB9XHJcblxyXG5cdFx0XHR7IEJvb2xlYW4oIHBsYWluSGVscC5sZW5ndGggKSAmJiA8c3BhblxyXG5cdFx0XHRcdGNsYXNzTmFtZT17ICdkZXNjcmlwdGlvbi1jb250cm9scycgfVxyXG5cdFx0XHQ+eyBwbGFpbkhlbHAgfTwvc3Bhbj4gfVxyXG5cclxuXHRcdFx0eyBmaWVsZHMubWFwKCAoIFsgZmllbGRJZCwgZmllbGREYXRhIF0sIGluZGV4ICkgPT4gPFJlYWN0LkZyYWdtZW50XHJcblx0XHRcdFx0a2V5PXsgYGZpZWxkX2luX21hcF8keyBmaWVsZElkICsgaW5kZXggfWAgfVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0eyBjaGlsZHJlbiggeyBmaWVsZElkLCBmaWVsZERhdGEsIGluZGV4IH0gKSB9XHJcblx0XHRcdDwvUmVhY3QuRnJhZ21lbnQ+ICkgfVxyXG5cdFx0PC9kaXY+XHJcblx0PC9CYXNlQ29udHJvbD5cclxufTtcclxuXHJcbiIsImNvbnN0IHsgY3JlYXRlQ29udGV4dCB9ID0gd3AuZWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNvbnRleHQoIHtcclxuXHRhY3Rpb25DbGljazogbnVsbCxcclxuXHRvblJlcXVlc3RDbG9zZTogKCkgPT4ge1xyXG5cdH0sXHJcbn0gKTsiLCJpbXBvcnQgQWN0aW9uTW9kYWxDb250ZXh0IGZyb20gJy4uL2NvbnRleHQvYWN0aW9uLm1vZGFsJztcclxuXHJcbmNvbnN0IHtcclxuXHRCdXR0b24sXHJcblx0QnV0dG9uR3JvdXAsXHJcblx0TW9kYWwsXHJcbn0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuY29uc3Qge1xyXG5cdHVzZVN0YXRlLFxyXG5cdHVzZUVmZmVjdCxcclxufSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5mdW5jdGlvbiBBY3Rpb25Nb2RhbCgge1xyXG5cdG9uUmVxdWVzdENsb3NlLFxyXG5cdGNoaWxkcmVuLFxyXG5cdHRpdGxlLFxyXG5cdGNsYXNzTmFtZXMgPSBbXSxcclxuXHRvblVwZGF0ZUNsaWNrLFxyXG5cdG9uQ2FuY2VsQ2xpY2ssXHJcblx0dXBkYXRlQnRuTGFiZWwgPSAnVXBkYXRlJyxcclxuXHR1cGRhdGVCdG5Qcm9wcyA9IHt9LFxyXG5cdGNhbmNlbEJ0blByb3BzID0ge30sXHJcblx0Y2FuY2VsQnRuTGFiZWwgPSAnQ2FuY2VsJyxcclxuXHRmaXhlZEhlaWdodCA9ICcnLFxyXG59ICkge1xyXG5cclxuXHRjb25zdCBtb2RhbENsYXNzZXMgPSBbICdqZXQtZm9ybS1lZGl0LW1vZGFsJywgLi4uY2xhc3NOYW1lcyBdO1xyXG5cclxuXHRjb25zdCBbIGFjdGlvbkNsaWNrLCBzZXRBY3Rpb25DbGljayBdID0gdXNlU3RhdGUoIG51bGwgKTtcclxuXHJcblx0Y29uc3QgdXBkYXRlQ2xpY2sgPSAoKSA9PiB7XHJcblx0XHRpZiAoIG9uVXBkYXRlQ2xpY2sgKSB7XHJcblx0XHRcdG9uVXBkYXRlQ2xpY2soKTtcclxuXHRcdH1cclxuXHRcdHNldEFjdGlvbkNsaWNrKCB0cnVlICk7XHJcblx0fTtcclxuXHRjb25zdCBjYW5jZWxDbGljayA9ICgpID0+IHtcclxuXHRcdGlmICggb25DYW5jZWxDbGljayApIHtcclxuXHRcdFx0b25DYW5jZWxDbGljaygpO1xyXG5cdFx0fVxyXG5cdFx0c2V0QWN0aW9uQ2xpY2soIGZhbHNlICk7XHJcblx0fTtcclxuXHJcblx0bGV0IHN0eWxlID0ge307XHJcblx0aWYgKCBmaXhlZEhlaWdodCApIHtcclxuXHRcdHN0eWxlID0geyBoZWlnaHQ6IGZpeGVkSGVpZ2h0IH07XHJcblx0XHRtb2RhbENsYXNzZXMucHVzaCggJ2pldC1tb2RhbC1maXhlZC1oZWlnaHQnICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gPE1vZGFsXHJcblx0XHRvblJlcXVlc3RDbG9zZT17IG9uUmVxdWVzdENsb3NlIH1cclxuXHRcdGNsYXNzTmFtZT17IG1vZGFsQ2xhc3Nlcy5qb2luKCAnICcgKSB9XHJcblx0XHR0aXRsZT17IHRpdGxlIH1cclxuXHRcdHN0eWxlPXsgc3R5bGUgfVxyXG5cdD5cclxuXHRcdHsgISBjaGlsZHJlbiAmJiA8ZGl2XHJcblx0XHRcdGNsYXNzTmFtZT1cImpldC1mb3JtLWVkaXQtbW9kYWxfX2NvbnRlbnRcIlxyXG5cdFx0PlxyXG5cdFx0XHR7ICdBY3Rpb24gY2FsbGJhY2sgaXMgbm90IGZvdW5kLicgfVxyXG5cdFx0PC9kaXY+IH1cclxuXHRcdHsgY2hpbGRyZW4gJiYgPD5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2pldC1mb3JtLWVkaXQtbW9kYWxfX3dyYXBwZXInPlxyXG5cdFx0XHRcdDxBY3Rpb25Nb2RhbENvbnRleHQuUHJvdmlkZXIgdmFsdWU9eyB7IGFjdGlvbkNsaWNrLCBvblJlcXVlc3RDbG9zZSB9IH0+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImpldC1mb3JtLWVkaXQtbW9kYWxfX2NvbnRlbnRcIj5cclxuXHRcdFx0XHRcdFx0eyAnZnVuY3Rpb24nID09PSB0eXBlb2YgY2hpbGRyZW4gJiYgY2hpbGRyZW4oIHsgYWN0aW9uQ2xpY2ssIG9uUmVxdWVzdENsb3NlIH0gKSB9XHJcblx0XHRcdFx0XHRcdHsgJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGNoaWxkcmVuICYmIGNoaWxkcmVuIH1cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvQWN0aW9uTW9kYWxDb250ZXh0LlByb3ZpZGVyPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PEJ1dHRvbkdyb3VwXHJcblx0XHRcdFx0Y2xhc3NOYW1lPVwiamV0LWZvcm0tZWRpdC1tb2RhbF9fYWN0aW9uc1wiXHJcblx0XHRcdD5cclxuXHRcdFx0XHQ8QnV0dG9uXHJcblx0XHRcdFx0XHRpc1ByaW1hcnlcclxuXHRcdFx0XHRcdG9uQ2xpY2s9eyB1cGRhdGVDbGljayB9XHJcblx0XHRcdFx0XHR7IC4uLnVwZGF0ZUJ0blByb3BzIH1cclxuXHRcdFx0XHQ+eyB1cGRhdGVCdG5MYWJlbCB9PC9CdXR0b24+XHJcblx0XHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdFx0aXNTZWNvbmRhcnlcclxuXHRcdFx0XHRcdHN0eWxlPXsge1xyXG5cdFx0XHRcdFx0XHRtYXJnaW46ICcwIDAgMCAxMHB4JyxcclxuXHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0b25DbGljaz17IGNhbmNlbENsaWNrIH1cclxuXHRcdFx0XHRcdHsgLi4uY2FuY2VsQnRuUHJvcHMgfVxyXG5cdFx0XHRcdD57IGNhbmNlbEJ0bkxhYmVsIH08L0J1dHRvbj5cclxuXHRcdFx0PC9CdXR0b25Hcm91cD5cclxuXHRcdDwvPiB9XHJcblx0PC9Nb2RhbD47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFjdGlvbk1vZGFsOyIsImNvbnN0IHsgUmF3SFRNTCB9ID0gd3AuZWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFdyYXBwZXJSZXF1aXJlZENvbnRyb2woIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRmaWVsZCxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjaGlsZHJlbixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRsYWJlbEtleSA9ICdsYWJlbCcsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVxdWlyZWRLZXkgPSAncmVxdWlyZWQnLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGhlbHBLZXkgPSAnaGVscCcsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH0gKSB7XHJcblx0Y29uc3QgWyBuYW1lLCBkYXRhIF0gPSBmaWVsZDtcclxuXHJcblx0Lypjb25zdCBJY29uQ29tcG9uZW50ID0gZGF0YS5pY29uID8gcHJvcHMgPT4ge1xyXG5cdFx0cmV0dXJuIDxkaXZcclxuXHRcdFx0a2V5PXsgJ2lubmVyX2ljb25fZmllbGRfJyArIG5hbWUgfVxyXG5cdFx0XHR7IC4uLnByb3BzIH1cclxuXHRcdD57IGRhdGEuaWNvbiB9PC9kaXY+XHJcblx0fSA6IG51bGw7Ki9cclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXZcclxuXHRcdFx0Y2xhc3NOYW1lPVwiamV0LXVzZXItbWV0YV9fcm93XCJcclxuXHRcdFx0a2V5PXsgJ3VzZXJfbWV0YV8nICsgbmFtZSB9XHJcblx0XHQ+XHJcblx0XHRcdHsvKjxJY29uQ29tcG9uZW50XHJcblx0XHRcdFx0Y2xhc3NOYW1lPXsgJ2pldC1maWVsZC1tYXBfX3Jvdy1pY29uJyB9XHJcblx0XHRcdFx0a2V5PXsgJ2ljb25fZmllbGRfJyArIG5hbWUgfVxyXG5cdFx0XHRcdHN0eWxlPXsgeyBoZWlnaHQ6ICc0OHB4Jywgd2lkdGg6ICc0OHB4JyB9IH1cclxuXHRcdFx0Lz4qL31cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJqZXQtZmllbGQtbWFwX19yb3ctbGFiZWxcIj5cclxuXHJcblx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPXsgJ2ZpZWxkcy1tYXBfX2xhYmVsJyB9PlxyXG5cdFx0XHRcdFx0eyAoIGRhdGEuaGFzT3duUHJvcGVydHkoIGxhYmVsS2V5ICkgJiYgZGF0YVsgbGFiZWxLZXkgXSApICYmIGRhdGFbIGxhYmVsS2V5IF0gfVxyXG5cdFx0XHRcdFx0eyAoICEgZGF0YS5oYXNPd25Qcm9wZXJ0eSggbGFiZWxLZXkgKSApICYmIGRhdGEgfVxyXG5cdFx0XHRcdDwvc3Bhbj5cclxuXHRcdFx0XHR7ICggZGF0YS5oYXNPd25Qcm9wZXJ0eSggcmVxdWlyZWRLZXkgKSAmJiBkYXRhWyByZXF1aXJlZEtleSBdICkgJiZcclxuXHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9eyAnZmllbGRzLW1hcF9fcmVxdWlyZWQnIH0+ICo8L3NwYW4+IH1cclxuXHRcdFx0XHR7IGRhdGFbIGhlbHBLZXkgXSAmJiA8cFxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ2NvbXBvbmVudHMtYmFzZS1jb250cm9sX19oZWxwJyB9XHJcblx0XHRcdFx0XHRzdHlsZT17IHtcclxuXHRcdFx0XHRcdFx0Y29sb3I6ICdyZ2IoMTE3LCAxMTcsIDExNyknLFxyXG5cdFx0XHRcdFx0XHRtYXJnaW46ICcxZW0gMCAwIDAnLFxyXG5cdFx0XHRcdFx0fSB9PlxyXG5cdFx0XHRcdFx0PFJhd0hUTUw+eyBkYXRhWyBoZWxwS2V5IF0gfTwvUmF3SFRNTD5cclxuXHRcdFx0XHQ8L3A+IH1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdHsgY2hpbGRyZW4gfVxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufSIsImNvbnN0IHsgX18gfSA9IHdwLmkxOG47XHJcblxyXG5jb25zdCB7XHJcblx0QnV0dG9uLFxyXG59ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmNvbnN0IHsgdXNlRWZmZWN0IH0gPSB3cC5lbGVtZW50O1xyXG5cclxuZnVuY3Rpb24gUmVxdWVzdEJ1dHRvbigge1xyXG5cdGxhYmVsLFxyXG5cdGFqYXhBcmdzID0ge30sXHJcblx0b25TdWNjZXNzUmVxdWVzdCA9ICgpID0+IHtcclxuXHR9LFxyXG5cdG9uRmFpbFJlcXVlc3QgPSAoKSA9PiB7XHJcblx0fSxcclxuXHRvbkxvYWRpbmcgPSAoKSA9PiB7XHJcblx0fSxcclxuXHRjbGFzc05hbWUgPSAnJyxcclxuXHRjaGlsZHJlbiA9ICgpID0+IHtcclxuXHR9LFxyXG5cdGRpc2FibGVkID0gZmFsc2UsXHJcblx0Y3VzdG9tUmVxdWVzdCA9IGZhbHNlLFxyXG5cdGlzSGlkZGVuID0gZmFsc2UsXHJcblx0aGFzRmV0Y2hlZCA9IC0xXHJcbn0gKSB7XHJcblxyXG5cdGNvbnN0IGRlZmF1bHRSZXF1ZXN0ID0gKCkgPT4ge1xyXG5cdFx0b25Mb2FkaW5nKCk7XHJcblxyXG5cdFx0alF1ZXJ5LmFqYXgoIHtcclxuXHRcdFx0dXJsOiBhamF4dXJsLFxyXG5cdFx0XHR0eXBlOiAnUE9TVCcsXHJcblx0XHRcdGRhdGE6IGFqYXhBcmdzLFxyXG5cdFx0fSApLmRvbmUoIHJlc3BvbnNlID0+IHJlc3BvbnNlLnN1Y2Nlc3MgPyBvblN1Y2Nlc3NSZXF1ZXN0KCByZXNwb25zZSApIDogb25GYWlsUmVxdWVzdCgpICkuZmFpbCggKCkgPT4gb25GYWlsUmVxdWVzdCgpICk7XHJcblx0fTtcclxuXHJcblx0Y29uc3QgcmVxdWVzdCA9ICgpID0+IHtcclxuXHRcdGlmICggZmFsc2UgPT09IGN1c3RvbVJlcXVlc3QgKSB7XHJcblx0XHRcdGRlZmF1bHRSZXF1ZXN0KCk7XHJcblx0XHR9IGVsc2UgaWYgKCAnZnVuY3Rpb24nID09PSB0eXBlb2YgY3VzdG9tUmVxdWVzdCApIHtcclxuXHRcdFx0Y3VzdG9tUmVxdWVzdCgpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0b25GYWlsUmVxdWVzdCgpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHVzZUVmZmVjdCggKCkgPT4ge1xyXG5cdFx0aWYgKCBpc0hpZGRlbiAmJiAtMSA9PT0gaGFzRmV0Y2hlZCApIHtcclxuXHRcdFx0cmVxdWVzdCgpO1xyXG5cdFx0fVxyXG5cdH0sIFtdICk7XHJcblxyXG5cdGlmICggaXNIaWRkZW4gKSB7XHJcblx0XHRyZXR1cm4gbnVsbDtcclxuXHR9XHJcblxyXG5cdHJldHVybiA8QnV0dG9uXHJcblx0XHRkaXNhYmxlZD17IGRpc2FibGVkIH1cclxuXHRcdGtleT17ICd2YWxpZGF0ZV9hcGlfa2V5JyB9XHJcblx0XHRpc1ByaW1hcnlcclxuXHRcdG9uQ2xpY2s9eyByZXF1ZXN0IH1cclxuXHRcdGNsYXNzTmFtZT17IGNsYXNzTmFtZSB9XHJcblx0PlxyXG5cdFx0eyBjaGlsZHJlbiAmJiBjaGlsZHJlbiB9XHJcblx0XHR7IGxhYmVsIH1cclxuXHQ8L0J1dHRvbj47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlcXVlc3RCdXR0b247XHJcbiIsImltcG9ydCB7XHJcblx0ZnJvbUxvY2FsaXplSGVscGVyLFxyXG5cdGdldEFjdGlvblNldHRpbmdzLFxyXG59IGZyb20gXCIuLi9hY3Rpb25zL2FjdGlvbi1oZWxwZXJcIjtcclxuXHJcbmZ1bmN0aW9uIGdhdGV3YXlBY3Rpb25BdHRyaWJ1dGVzKCBhY3Rpb24gKSB7XHJcblx0Y29uc3QgeyBnYXRld2F5QXR0cnMsIGxhYmVsIH0gPSBmcm9tTG9jYWxpemVIZWxwZXIoICdnZXRMb2NhbGl6ZWRGdWxsUGFjaycgKSggYWN0aW9uLnR5cGUgKTtcclxuXHRjb25zdCBhY3Rpb25TZXR0aW5ncyA9IGdldEFjdGlvblNldHRpbmdzKCBhY3Rpb24uaWQgKTtcclxuXHJcblx0Y29uc3QgdmFsdWUgPSBhdHRyID0+IHtcclxuXHRcdGlmICggYWN0aW9uU2V0dGluZ3NbIGF0dHIgXSApIHtcclxuXHRcdFx0cmV0dXJuIGFjdGlvblNldHRpbmdzWyBhdHRyIF07XHJcblx0XHR9XHJcblx0XHRpZiAoIGFjdGlvblNldHRpbmdzWyBhY3Rpb24udHlwZSBdICYmIGFjdGlvblNldHRpbmdzWyBhY3Rpb24udHlwZSBdWyBhdHRyIF0gKSB7XHJcblx0XHRcdHJldHVybiBhY3Rpb25TZXR0aW5nc1sgYWN0aW9uLnR5cGUgXVsgYXR0ciBdO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuICdOVUxMJztcclxuXHR9O1xyXG5cclxuXHRjb25zdCBsYWJlbFdpdGhBdHRycyA9IGdhdGV3YXlBdHRycygpLm1hcCggYXR0ciA9PiAoIGAkeyBsYWJlbCggYXR0ciApIH0gJHsgdmFsdWUoIGF0dHIgKSB9YCApICk7XHJcblxyXG5cdHJldHVybiBsYWJlbFdpdGhBdHRycy5qb2luKCAnLCAnICk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdhdGV3YXlBY3Rpb25BdHRyaWJ1dGVzOyIsImltcG9ydCB7IHVzZUFjdGlvbnMgfSBmcm9tICcuLi9ob29rcy9ob29rcy1oZWxwZXInO1xyXG5pbXBvcnQgZ2F0ZXdheUFjdGlvbkF0dHJpYnV0ZXMgZnJvbSAnLi4vZ2F0ZXdheXMvZ2F0ZXdheS1hY3Rpb24tYXR0cnViaXRlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QWN0aW9uc0J5VHlwZSA9IHR5cGUgPT4ge1xyXG5cdGNvbnN0IFsgYWN0aW9ucyBdID0gdXNlQWN0aW9ucygpO1xyXG5cclxuXHRyZXR1cm4gYWN0aW9ucy5maWx0ZXIoIGFjdGlvbiA9PiB0eXBlID09PSBhY3Rpb24udHlwZSApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZyb21Mb2NhbGl6ZUhlbHBlciA9IG5hbWUgPT4ge1xyXG5cdHJldHVybiBuYW1lID8gd2luZG93LkpldEZCTG9jYWxpemVIZWxwZXJbIG5hbWUgXSA6IHdpbmRvdy5KZXRGQkxvY2FsaXplSGVscGVyO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGFjdGlvbkJ5VHlwZUxpc3QgPSAoIGFjdGlvblR5cGUsIHdpdGhEZXNjID0gZmFsc2UgKSA9PiB7XHJcblx0cmV0dXJuIHByZXBhcmVBY3Rpb25zTGlzdEJ5VHlwZSggZ2V0QWN0aW9uc0J5VHlwZSggYWN0aW9uVHlwZSApLCBhY3Rpb25UeXBlLCB3aXRoRGVzYyApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHByZXBhcmVBY3Rpb25zTGlzdEJ5VHlwZSA9ICggc291cmNlLCBhY3Rpb25UeXBlLCB3aXRoRGVzYyA9IGZhbHNlICkgPT4ge1xyXG5cdHJldHVybiBzb3VyY2UuZmlsdGVyKCBhY3Rpb24gPT4gYWN0aW9uVHlwZSA9PT0gYWN0aW9uLnR5cGUgKS5tYXAoIGFjdGlvbiA9PiB7XHJcblx0XHRjb25zdCBuZXdBY3Rpb24gPSB7XHJcblx0XHRcdHZhbHVlOiBhY3Rpb24uaWQsXHJcblx0XHRcdGxhYmVsOiBmcm9tTG9jYWxpemVIZWxwZXIoICdnZXRBY3Rpb25MYWJlbCcgKSggYWN0aW9uLnR5cGUgKSxcclxuXHRcdH07XHJcblx0XHRpZiAoIHdpdGhEZXNjICkge1xyXG5cdFx0XHRuZXdBY3Rpb24ubGFiZWwgKz0gYCAoJHsgZ2F0ZXdheUFjdGlvbkF0dHJpYnV0ZXMoIGFjdGlvbiApIH0pYDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbmV3QWN0aW9uO1xyXG5cdH0gKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRBY3Rpb25TZXR0aW5ncyA9IGFjdGlvbklkID0+IHtcclxuXHRjb25zdCBbIGFjdGlvbnMgXSA9IHVzZUFjdGlvbnMoKTtcclxuXHRjb25zdCBhY3Rpb24gPSBhY3Rpb25zLmZpbmQoIGFjdGlvbiA9PiBhY3Rpb25JZCA9PT0gYWN0aW9uLmlkICk7XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHRhY3Rpb24gJiYgYWN0aW9uLnNldHRpbmdzXHJcblx0KSA/IGFjdGlvbi5zZXR0aW5ncyA6IGZhbHNlO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbnZlcnRMaXN0VG9GaWVsZHNNYXAgPSAoIC4uLnNvdXJjZXMgKSA9PiB7XHJcblx0Y29uc3QgcmVzcG9uc2UgPSBbXTtcclxuXHJcblx0Zm9yICggY29uc3Qgc291cmNlIG9mIHNvdXJjZXMgKSB7XHJcblx0XHRyZXNwb25zZS5wdXNoKCAuLi5zb3VyY2UubWFwKCBpdGVtID0+IHtcclxuXHRcdFx0Y29uc3QgaWQgPSBpdGVtLnZhbHVlO1xyXG5cclxuXHRcdFx0cmV0dXJuIFsgaWQsIGl0ZW0gXTtcclxuXHRcdH0gKSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIHJlc3BvbnNlO1xyXG59O1xyXG5cclxuIiwiXHJcbmZ1bmN0aW9uIGdsb2JhbFRhYiggeyBzbHVnLCBlbGVtZW50ID0gJycsIGVtcHR5ID0gJycgfSApIHtcclxuXHRjb25zdCBnbG9iYWwgPSBKZXRGb3JtRWRpdG9yRGF0YS5nbG9iYWxfc2V0dGluZ3M7XHJcblxyXG5cdGlmKCAhIGdsb2JhbCApIHtcclxuXHRcdHJldHVybiBlbXB0eTtcclxuXHR9XHJcblxyXG5cdGlmICggZWxlbWVudCApIHtcclxuXHRcdHJldHVybiAoIGdsb2JhbFsgc2x1ZyBdICYmIGdsb2JhbFsgc2x1ZyBdWyBlbGVtZW50IF0gKSA/IGdsb2JhbFsgc2x1ZyBdWyBlbGVtZW50IF0gOiBlbXB0eTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBnbG9iYWxbIHNsdWcgXSB8fCBlbXB0eTtcclxufVxyXG5cclxuZXhwb3J0IHsgZ2xvYmFsVGFiIH07IiwiZXhwb3J0IGNvbnN0IGdhdGV3YXlBdHRyID0gKCBhdHRyID0gZmFsc2UsIGlzRW1wdHkgPSAnJyApID0+IHtcclxuXHRjb25zdCBkYXRhID0gd2luZG93LkpldEZvcm1FZGl0b3JEYXRhLmdhdGV3YXlzO1xyXG5cclxuXHRpZiAoICEgYXR0ciApIHtcclxuXHRcdHJldHVybiBkYXRhO1xyXG5cdH1cclxuXHRpZiAoICEgZGF0YVsgYXR0ciBdICkge1xyXG5cdFx0cmV0dXJuIGZhbHNlO1xyXG5cdH1cclxuXHJcblx0Y29uc3Qgc291cmNlID0gZGF0YVsgYXR0ciBdO1xyXG5cclxuXHRyZXR1cm4gbmFtZSA9PiBzb3VyY2VbIG5hbWUgXSA/IHNvdXJjZVsgbmFtZSBdIDogaXNFbXB0eTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnYXRld2F5TGFiZWwgPSAoIHR5cGUsIGlzRW1wdHkgPSAnJyApID0+IHtcclxuXHRjb25zdCBsYWJlbCA9IGdhdGV3YXlBdHRyKCAnbGFiZWxzJyApO1xyXG5cclxuXHRyZXR1cm4gYXR0ciA9PiBsYWJlbCggdHlwZSApID8gbGFiZWwoIHR5cGUgKVsgYXR0ciBdIDogaXNFbXB0eTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCByZWdpc3RlckdhdGV3YXkgPSAoIGlkLCBjYWxsYmFjaywgZm9yV2hhdCA9ICdjcmVkJyApID0+IHtcclxuXHR3aW5kb3cuSmV0RkJHYXRld2F5c0xpc3QgPSB3aW5kb3cuSmV0RkJHYXRld2F5c0xpc3QgfHwge307XHJcblx0d2luZG93LkpldEZCR2F0ZXdheXNMaXN0WyBpZCBdID0gd2luZG93LkpldEZCR2F0ZXdheXNMaXN0WyBpZCBdIHx8IHt9O1xyXG5cdHdpbmRvdy5KZXRGQkdhdGV3YXlzTGlzdFsgaWQgXVsgZm9yV2hhdCBdID0gY2FsbGJhY2s7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaXNzZXRSZW5kZXJHYXRld2F5ID0gKCBpZCwgd2hhdCA9ICdjcmVkJyApID0+IHtcclxuXHRyZXR1cm4gKFxyXG5cdFx0d2luZG93LkpldEZCR2F0ZXdheXNMaXN0ICYmIHdpbmRvdy5KZXRGQkdhdGV3YXlzTGlzdFsgaWQgXSAmJiB3aW5kb3cuSmV0RkJHYXRld2F5c0xpc3RbIGlkIF1bIHdoYXQgXVxyXG5cdCk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgcmVuZGVyR2F0ZXdheSA9ICggaWQsIHByb3BzLCB3aGF0ID0gJ2NyZWQnICkgPT4ge1xyXG5cdGlmICggISBpc3NldFJlbmRlckdhdGV3YXkoIGlkLCB3aGF0ICkgKSB7XHJcblx0XHRyZXR1cm4gbnVsbDtcclxuXHR9XHJcblx0Y29uc3QgR2F0ZXdheUNvbXBvbmVudCA9IHdpbmRvdy5KZXRGQkdhdGV3YXlzTGlzdFsgaWQgXVsgd2hhdCBdO1xyXG5cclxuXHRyZXR1cm4gPEdhdGV3YXlDb21wb25lbnQgeyAuLi5wcm9wcyB9IC8+O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlbmRlckdhdGV3YXlXaXRoUGxhY2Vob2xkZXIgPSAoIGlkLCBwcm9wcywgd2hhdCA9ICdjcmVkJywgUGxhY2Vob2xkZXIgPSBudWxsICkgPT4ge1xyXG5cdGlmICggISBpc3NldFJlbmRlckdhdGV3YXkoIGlkLCB3aGF0ICkgKSB7XHJcblx0XHRyZXR1cm4gUGxhY2Vob2xkZXI7XHJcblx0fVxyXG5cdHByb3BzLlBsYWNlaG9sZGVyID0gUGxhY2Vob2xkZXI7XHJcblxyXG5cdHJldHVybiByZW5kZXJHYXRld2F5KCBpZCwgcHJvcHMsIHdoYXQgKTtcclxufTsiLCJpbXBvcnQgeyBwcmVwYXJlQWN0aW9uc0xpc3RCeVR5cGUgfSBmcm9tICcuLi9hY3Rpb25zL2FjdGlvbi1oZWxwZXInO1xyXG5pbXBvcnQgeyBnbG9iYWxUYWIgfSBmcm9tICcuLi9zZXR0aW5ncy9oZWxwZXInO1xyXG5pbXBvcnQgeyBnYXRld2F5QXR0ciwgZ2F0ZXdheUxhYmVsIH0gZnJvbSAnLi4vZ2F0ZXdheXMvZ2F0ZXdheS1oZWxwZXInO1xyXG5cclxuY29uc3Qge1xyXG5cdHVzZVN0YXRlLFxyXG5cdHVzZUVmZmVjdCxcclxufSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5jb25zdCB7XHJcblx0dXNlU2VsZWN0LFxyXG5cdHVzZURpc3BhdGNoLFxyXG59ID0gd3AuZGF0YTtcclxuXHJcbmNvbnN0IHsgYXBwbHlGaWx0ZXJzIH0gPSB3cC5ob29rcztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VNZXRhU3RhdGUgPSAoIGtleSwgaWZFbXB0eSA9ICd7fScgKSA9PiB7XHJcblx0Y29uc3QgbWV0YSA9IHVzZVNlbGVjdCggKCBzZWxlY3QgKSA9PiB7XHJcblx0XHRyZXR1cm4gc2VsZWN0KCAnY29yZS9lZGl0b3InICkuZ2V0RWRpdGVkUG9zdEF0dHJpYnV0ZSggJ21ldGEnICkgfHwge307XHJcblx0fSApO1xyXG5cclxuXHRjb25zdCB7IGVkaXRQb3N0IH0gPSB1c2VEaXNwYXRjaCggJ2NvcmUvZWRpdG9yJywgWyBtZXRhIF0gKTtcclxuXHJcblx0Y29uc3QgbWV0YVN0YXRlVmFsdWUgPSBKU09OLnBhcnNlKCBtZXRhWyBrZXkgXSB8fCBpZkVtcHR5ICk7XHJcblxyXG5cdGNvbnN0IHNldE1ldGFTdGF0ZVZhbHVlID0gY2FsbGFibGUgPT4ge1xyXG5cdFx0bGV0IHZhbHVlO1xyXG5cclxuXHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGNhbGxhYmxlICkge1xyXG5cdFx0XHR2YWx1ZSA9IGNhbGxhYmxlKCBtZXRhU3RhdGVWYWx1ZSApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dmFsdWUgPSBjYWxsYWJsZTtcclxuXHRcdH1cclxuXHJcblx0XHRlZGl0UG9zdCgge1xyXG5cdFx0XHRtZXRhOiAoXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Li4ubWV0YSxcclxuXHRcdFx0XHRcdFsga2V5IF06IEpTT04uc3RyaW5naWZ5KCB2YWx1ZSApLFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0KSxcclxuXHRcdH0gKTtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gWyBtZXRhU3RhdGVWYWx1ZSwgc2V0TWV0YVN0YXRlVmFsdWUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VBY3Rpb25zID0gKCkgPT4ge1xyXG5cdHJldHVybiB1c2VNZXRhU3RhdGUoICdfamZfYWN0aW9ucycgKTtcclxufTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgaW5pdENsYXNzZXMgPSBbICdqZXQtZm9ybS12YWxpZGF0ZS1idXR0b24nIF07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlU3RhdGVWYWxpZENsYXNzZXMgPSBpbml0aWFsVmFsaWQgPT4ge1xyXG5cdGNvbnN0IHZhbGlkQ2xhc3MgPSAnaXMtdmFsaWQnO1xyXG5cdGNvbnN0IGludmFsaWRDbGFzcyA9ICdpcy1pbnZhbGlkJztcclxuXHJcblx0Y29uc3QgaW5pdFN0YXRlQ2xhc3NlcyA9ICgpID0+IHtcclxuXHRcdGlmICggaW5pdGlhbFZhbGlkICkge1xyXG5cdFx0XHRyZXR1cm4gWyAuLi5pbml0Q2xhc3NlcywgdmFsaWRDbGFzcyBdO1xyXG5cdFx0fSBlbHNlIGlmICggISBpbml0aWFsVmFsaWQgKSB7XHJcblx0XHRcdHJldHVybiBbIC4uLmluaXRDbGFzc2VzLCBpbnZhbGlkQ2xhc3MgXTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRjb25zdCBbIGNsYXNzZXMsIHNldENsYXNzZXMgXSA9IHVzZVN0YXRlKCBpbml0U3RhdGVDbGFzc2VzKCkgKTtcclxuXHJcblx0Y29uc3Qgc2V0VmFsaWRDbGFzcyA9ICgpID0+IHtcclxuXHRcdHNldENsYXNzZXMoIFsgLi4uaW5pdENsYXNzZXMsIHZhbGlkQ2xhc3MgXSApO1xyXG5cdH07XHJcblx0Y29uc3Qgc2V0SW52YWxpZENsYXNzID0gKCkgPT4ge1xyXG5cdFx0c2V0Q2xhc3NlcyggWyAuLi5pbml0Q2xhc3NlcywgaW52YWxpZENsYXNzIF0gKTtcclxuXHR9O1xyXG5cdGNvbnN0IHNldExvYWRpbmdDbGFzcyA9ICgpID0+IHtcclxuXHRcdHNldENsYXNzZXMoIFsgLi4uaW5pdENsYXNzZXMsICdsb2FkaW5nJyBdICk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIFsgY2xhc3Nlcy5qb2luKCAnICcgKSwgc2V0VmFsaWRDbGFzcywgc2V0SW52YWxpZENsYXNzLCBzZXRMb2FkaW5nQ2xhc3MgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VTdGF0ZUxvYWRpbmdDbGFzc2VzID0gKCkgPT4ge1xyXG5cdGNvbnN0IFsgY2xhc3Nlcywgc2V0Q2xhc3NlcyBdID0gdXNlU3RhdGUoIFsgLi4uaW5pdENsYXNzZXMgXSApO1xyXG5cclxuXHRjb25zdCBzZXRMb2FkaW5nQ2xhc3MgPSAoKSA9PiB7XHJcblx0XHRzZXRDbGFzc2VzKCBbIC4uLmluaXRDbGFzc2VzLCAnbG9hZGluZycgXSApO1xyXG5cdH07XHJcblx0Y29uc3QgY2xlYXJMb2FkaW5nQ2xhc3MgPSAoKSA9PiB7XHJcblx0XHRzZXRDbGFzc2VzKCBpbml0Q2xhc3NlcyApO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiBbIGNsYXNzZXMuam9pbiggJyAnICksIHNldExvYWRpbmdDbGFzcywgY2xlYXJMb2FkaW5nQ2xhc3MgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VTdWNjZXNzTm90aWNlID0gKCB0ZXh0LCBvcHRpb25zID0ge30gKSA9PiB7XHJcblx0Y29uc3QgWyBoYXNDb3BpZWQsIHNldEhhc0NvcGllZCBdID0gdXNlU3RhdGUoIGZhbHNlICk7XHJcblx0Y29uc3Qgbm90aWNlU3RvcmUgPSB1c2VEaXNwYXRjaCggd3Aubm90aWNlcy5zdG9yZSApO1xyXG5cclxuXHR1c2VFZmZlY3QoICgpID0+IHtcclxuXHRcdGlmICggaGFzQ29waWVkICkge1xyXG5cdFx0XHRub3RpY2VTdG9yZS5jcmVhdGVXYXJuaW5nTm90aWNlKCB0ZXh0LCB7IHR5cGU6ICdzbmFja2JhcicsIC4uLm9wdGlvbnMgfSApO1xyXG5cdFx0fVxyXG5cdH0sIFsgaGFzQ29waWVkIF0gKTtcclxuXHJcblx0cmV0dXJuIHNldEhhc0NvcGllZDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB3aXRoRGlzcGF0Y2hOb3RpY2UgPSAoIGRpc3BhdGNoICkgPT4ge1xyXG5cdHJldHVybiB7XHJcblx0XHRjcmVhdGVOb3RpY2U6ICggc3RhdHVzLCB0ZXh0LCBvcHRpb25zID0ge30gKSA9PiB7XHJcblx0XHRcdGRpc3BhdGNoKCB3cC5ub3RpY2VzLnN0b3JlICkuY3JlYXRlTm90aWNlKFxyXG5cdFx0XHRcdHN0YXR1cywgdGV4dCwge1xyXG5cdFx0XHRcdFx0dHlwZTogJ2RlZmF1bHQnLFxyXG5cdFx0XHRcdFx0c3RhdHVzOiAnaW5mbycsXHJcblx0XHRcdFx0XHQuLi5vcHRpb25zLFxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdCk7XHJcblx0XHR9LFxyXG5cdH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0UmVxdWVzdEZpZWxkcyA9IGFjdGlvbnMgPT4ge1xyXG5cdGNvbnN0IHJlcXVlc3RGaWVsZHMgPSBbXTtcclxuXHJcblx0Zm9yICggY29uc3QgYWN0aW9uIG9mIGFjdGlvbnMgKSB7XHJcblx0XHRjb25zdCB7XHJcblx0XHRcdFsgYWN0aW9uLnR5cGUgXTogY3VycmVudCA9IHt9LFxyXG5cdFx0fSA9IGFjdGlvbi5zZXR0aW5ncztcclxuXHJcblx0XHRpZiAoICEgY3VycmVudC5yZXF1ZXN0RmllbGRzICkge1xyXG5cdFx0XHRjb250aW51ZTtcclxuXHRcdH1cclxuXHJcblx0XHRmb3IgKCBjb25zdCByZXF1ZXN0RmllbGQgb2YgY3VycmVudC5yZXF1ZXN0RmllbGRzICkge1xyXG5cdFx0XHRjb25zdCBpbmRleCA9IHJlcXVlc3RGaWVsZHMuZmluZEluZGV4KCBmaWVsZCA9PiBmaWVsZC52YWx1ZSA9PT0gcmVxdWVzdEZpZWxkLm5hbWUgKTtcclxuXHJcblx0XHRcdGlmICggLSAxICE9PSBpbmRleCApIHtcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmVxdWVzdEZpZWxkcy5wdXNoKCB7XHJcblx0XHRcdFx0ZnJvbTogYWN0aW9uLnR5cGUsXHJcblx0XHRcdFx0aWQ6IGFjdGlvbi5pZCxcclxuXHRcdFx0XHRsYWJlbDogcmVxdWVzdEZpZWxkLm5hbWUsXHJcblx0XHRcdFx0dmFsdWU6IHJlcXVlc3RGaWVsZC5uYW1lLFxyXG5cdFx0XHRcdG5hbWU6IHJlcXVlc3RGaWVsZC5uYW1lLFxyXG5cdFx0XHRcdGhlbHA6IHJlcXVlc3RGaWVsZC5oZWxwLFxyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcmVxdWVzdEZpZWxkcztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VSZXF1ZXN0RmllbGRzID0gKCBvcHRpb25zID0ge30gKSA9PiB7XHJcblx0Y29uc3QgbWV0YSA9IHVzZVNlbGVjdCggKCBzZWxlY3QgKSA9PiB7XHJcblx0XHRyZXR1cm4gc2VsZWN0KCAnY29yZS9lZGl0b3InICkuZ2V0RWRpdGVkUG9zdEF0dHJpYnV0ZSggJ21ldGEnICkgfHwge307XHJcblx0fSApO1xyXG5cdGNvbnN0IGFjdGlvbnMgPSBKU09OLnBhcnNlKCBtZXRhLl9qZl9hY3Rpb25zIHx8ICdbXScgKTtcclxuXHJcblx0cmV0dXJuIGdldFJlcXVlc3RGaWVsZHMoIGFjdGlvbnMgKTtcclxufTtcclxuXHJcbmNvbnN0IHNlbGVjdFBvc3RNZXRhID0gc2VsZWN0ID0+IHtcclxuXHRyZXR1cm4gc2VsZWN0KCAnY29yZS9lZGl0b3InICkuZ2V0RWRpdGVkUG9zdEF0dHJpYnV0ZSggJ21ldGEnICkgfHwge307XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0UGFyc2VkUG9zdE1ldGEgPSAoIHNlbGVjdCwgbmFtZSApID0+IHtcclxuXHRjb25zdCBhbGxNZXRhID0gc2VsZWN0UG9zdE1ldGEoIHNlbGVjdCApO1xyXG5cclxuXHRyZXR1cm4gSlNPTi5wYXJzZSggYWxsTWV0YVsgbmFtZSBdIHx8ICd7fScgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VTZWxlY3RQb3N0TWV0YSA9ICggbmFtZSApID0+IHtcclxuXHRjb25zdCBhbGxNZXRhID0gdXNlU2VsZWN0KCBzZWxlY3QgPT4gc2VsZWN0UG9zdE1ldGEoIHNlbGVjdCApICk7XHJcblxyXG5cdHJldHVybiBKU09OLnBhcnNlKCBhbGxNZXRhWyBuYW1lIF0gfHwgJ3t9JyApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHdpdGhDdXJyZW50QWN0aW9uID0gc2VsZWN0ID0+IHtcclxuXHRjb25zdCBjdXJyZW50QWN0aW9uID0gc2VsZWN0KCAnamV0LWZvcm1zL2FjdGlvbnMnICkuZ2V0Q3VycmVudEFjdGlvbigpO1xyXG5cclxuXHRyZXR1cm4geyBjdXJyZW50QWN0aW9uIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgd2l0aFJlcXVlc3RGaWVsZHMgPSBzZWxlY3QgPT4ge1xyXG5cdGNvbnN0IG1ldGEgPSBzZWxlY3QoICdjb3JlL2VkaXRvcicgKS5nZXRFZGl0ZWRQb3N0QXR0cmlidXRlKCAnbWV0YScgKSB8fCB7fTtcclxuXHRjb25zdCBhY3Rpb25zID0gSlNPTi5wYXJzZSggbWV0YS5famZfYWN0aW9ucyB8fCAnW10nICk7XHJcblx0Y29uc3QgY3VycmVudEFjdGlvbiA9IHNlbGVjdCggJ2pldC1mb3Jtcy9hY3Rpb25zJyApLmdldEN1cnJlbnRBY3Rpb24oKTtcclxuXHJcblx0YWN0aW9ucy5zcGxpY2UoIGN1cnJlbnRBY3Rpb24uaW5kZXggKTtcclxuXHJcblx0cmV0dXJuIHsgcmVxdWVzdEZpZWxkczogZ2V0UmVxdWVzdEZpZWxkcyggYWN0aW9ucyApIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgd2l0aFNlbGVjdEFjdGlvbkxvYWRpbmcgPSBzZWxlY3QgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdTdGF0ZSA9IHNlbGVjdCggJ2pldC1mb3Jtcy9hY3Rpb25zJyApLmdldEN1cnJlbnRMb2FkaW5nKCk7XHJcblxyXG5cdHJldHVybiB7IGxvYWRpbmdTdGF0ZSB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHdpdGhEaXNwYXRjaEFjdGlvbkxvYWRpbmcgPSBkaXNwYXRjaCA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdHNldExvYWRpbmcoIGFjdGlvbklkICkge1xyXG5cdFx0XHRkaXNwYXRjaCggJ2pldC1mb3Jtcy9hY3Rpb25zJyApLnNldExvYWRpbmcoIHsgYWN0aW9uSWQgfSApO1xyXG5cdFx0fSxcclxuXHRcdHNldFJlc3VsdFN1Y2Nlc3MoIGFjdGlvbklkLCByZXNwb25zZSApIHtcclxuXHRcdFx0ZGlzcGF0Y2goICdqZXQtZm9ybXMvYWN0aW9ucycgKS5zZXRMb2FkaW5nUmVzdWx0KCB7XHJcblx0XHRcdFx0YWN0aW9uSWQsXHJcblx0XHRcdFx0c3VjY2VzczogdHJ1ZSxcclxuXHRcdFx0XHRyZXNwb25zZSxcclxuXHRcdFx0fSApO1xyXG5cdFx0fSxcclxuXHRcdHNldFJlc3VsdEZhaWwoIGFjdGlvbklkICkge1xyXG5cdFx0XHRkaXNwYXRjaCggJ2pldC1mb3Jtcy9hY3Rpb25zJyApLnNldExvYWRpbmdSZXN1bHQoIHtcclxuXHRcdFx0XHRhY3Rpb25JZCxcclxuXHRcdFx0XHRzdWNjZXNzOiBmYWxzZSxcclxuXHRcdFx0XHRyZXNwb25zZToge30sXHJcblx0XHRcdH0gKTtcclxuXHRcdH0sXHJcblx0fTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB3aXRoRGlzcGF0Y2hNZXRhID0gKCBtZXRhU2x1ZywgY2FsbGJhY2tOYW1lICkgPT4gKCBkaXNwYXRjaCwgb3duUHJvcHMsIHsgc2VsZWN0IH0gKSA9PiB7XHJcblx0Y29uc3QgYWxsTWV0YSA9IHNlbGVjdFBvc3RNZXRhKCBzZWxlY3QgKTtcclxuXHJcblx0Y29uc3Qge1xyXG5cdFx0ZWRpdFBvc3QsXHJcblx0fSA9IGRpc3BhdGNoKCAnY29yZS9lZGl0b3InICk7XHJcblxyXG5cdGNvbnN0IGNoYW5nZSA9IG5ld1N0YXRlID0+IGVkaXRQb3N0KCB7XHJcblx0XHRtZXRhOiAoXHJcblx0XHRcdHtcclxuXHRcdFx0XHQuLi5hbGxNZXRhLFxyXG5cdFx0XHRcdFsgbWV0YVNsdWcgXTogSlNPTi5zdHJpbmdpZnkoIG5ld1N0YXRlICksXHJcblx0XHRcdH1cclxuXHRcdCksXHJcblx0fSApO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0WyBjYWxsYmFja05hbWUgXTogY2hhbmdlLFxyXG5cdH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgd2l0aFNlbGVjdE1ldGEgPSAoIG1ldGFTbHVnLCBpZkVtcHR5ID0ge30gKSA9PiBzZWxlY3QgPT4ge1xyXG5cdGNvbnN0IGN1cnJlbnQgPSBzZWxlY3RQYXJzZWRQb3N0TWV0YSggc2VsZWN0LCBtZXRhU2x1ZyApO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0WyBtZXRhU2x1ZyBdOiAoXHJcblx0XHRcdGN1cnJlbnQgPz8gaWZFbXB0eVxyXG5cdFx0KSxcclxuXHR9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHdpdGhTZWxlY3RHYXRld2F5cyA9IHNlbGVjdCA9PiB7XHJcblx0Y29uc3Qgc3RvcmUgPSBzZWxlY3QoICdqZXQtZm9ybXMvZ2F0ZXdheXMnICk7XHJcblxyXG5cdGNvbnN0IGdhdGV3YXlSZXF1ZXN0SWQgPSBzdG9yZS5nZXRDdXJyZW50UmVxdWVzdElkKCk7XHJcblx0Y29uc3QgZ2F0ZXdheVNwZWNpZmljID0gc3RvcmUuZ2V0R2F0ZXdheVNwZWNpZmljKCk7XHJcblx0Y29uc3Qgc2NlbmFyaW8gPSBzdG9yZS5nZXRTY2VuYXJpbygpO1xyXG5cclxuXHRjb25zdCBDVVJSRU5UX0dBVEVXQVkgPSBzdG9yZS5nZXRHYXRld2F5SWQoKTtcclxuXHRjb25zdCB7IGlkOiBDVVJSRU5UX1NDRU5BUklPID0gJ1BBWV9OT1cnIH0gPSBzY2VuYXJpbztcclxuXHJcblx0Y29uc3Qge1xyXG5cdFx0dXNlX2dsb2JhbCA9IGZhbHNlLFxyXG5cdH0gPSBnYXRld2F5U3BlY2lmaWM7XHJcblxyXG5cdGNvbnN0IGN1cnJlbnRUYWIgPSBnbG9iYWxUYWIoIHsgc2x1ZzogQ1VSUkVOVF9HQVRFV0FZIH0gKTtcclxuXHJcblx0Y29uc3QgZ2V0U3BlY2lmaWNPckdsb2JhbCA9ICgga2V5LCBpZkVtcHR5ID0gJycgKSA9PiB7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHR1c2VfZ2xvYmFsID8gKFxyXG5cdFx0XHRcdGN1cnJlbnRUYWJbIGtleSBdIHx8IGlmRW1wdHlcclxuXHRcdFx0KSA6IChcclxuXHRcdFx0XHRnYXRld2F5U3BlY2lmaWNbIGtleSBdIHx8IGlmRW1wdHlcclxuXHRcdFx0KVxyXG5cdFx0KTtcclxuXHR9O1xyXG5cclxuXHRjb25zdCBjYWxsYWJsZUdhdGV3YXkgPSBnYXRld2F5QXR0ciggJ2FkZGl0aW9uYWwnICk7XHJcblx0Y29uc3QgYWRkaXRpb25hbFNvdXJjZUdhdGV3YXkgPSBjYWxsYWJsZUdhdGV3YXkoIENVUlJFTlRfR0FURVdBWSApO1xyXG5cclxuXHRjb25zdCBsb2FkaW5nR2F0ZXdheSA9IHNlbGVjdCggJ2pldC1mb3Jtcy9hY3Rpb25zJyApLmdldExvYWRpbmcoIGdhdGV3YXlSZXF1ZXN0SWQgKTtcclxuXHJcblx0Y29uc3QgZ2xvYmFsR2F0ZXdheUxhYmVsID0gZ2F0ZXdheUF0dHIoICdsYWJlbHMnICk7XHJcblx0Y29uc3Qgc3BlY2lmaWNHYXRld2F5TGFiZWwgPSBnYXRld2F5TGFiZWwoIENVUlJFTlRfR0FURVdBWSApO1xyXG5cclxuXHRjb25zdCBjdXN0b21HYXRld2F5TGFiZWwgPSBmdW5jdGlvbiAoIGtleSApIHtcclxuXHRcdHJldHVybiBnbG9iYWxHYXRld2F5TGFiZWwoIGAkeyBDVVJSRU5UX0dBVEVXQVkgfS4keyBrZXkgfWAgKTtcclxuXHR9O1xyXG5cdGNvbnN0IHNjZW5hcmlvTGFiZWwgPSBmdW5jdGlvbiAoIGtleSApIHtcclxuXHRcdHJldHVybiBjdXN0b21HYXRld2F5TGFiZWwoIGBzY2VuYXJpby4keyBDVVJSRU5UX1NDRU5BUklPIH0uJHsga2V5IH1gICk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIHtcclxuXHRcdGdhdGV3YXlHZW5lcmFsOiBzdG9yZS5nZXRHYXRld2F5KCksXHJcblx0XHRnYXRld2F5UmVxdWVzdDogc3RvcmUuZ2V0Q3VycmVudFJlcXVlc3QoKSxcclxuXHRcdHNjZW5hcmlvU291cmNlOiBhZGRpdGlvbmFsU291cmNlR2F0ZXdheVsgQ1VSUkVOVF9TQ0VOQVJJTyBdIHx8IHt9LFxyXG5cdFx0Y3VycmVudFNjZW5hcmlvOiBzY2VuYXJpb1sgQ1VSUkVOVF9TQ0VOQVJJTyBdIHx8IHt9LFxyXG5cdFx0Q1VSUkVOVF9TQ0VOQVJJTyxcclxuXHRcdGdhdGV3YXlTY2VuYXJpbzogc2NlbmFyaW8sXHJcblx0XHRhZGRpdGlvbmFsU291cmNlR2F0ZXdheSxcclxuXHRcdGdhdGV3YXlTcGVjaWZpYyxcclxuXHRcdGdhdGV3YXlSZXF1ZXN0SWQsXHJcblx0XHRsb2FkaW5nR2F0ZXdheSxcclxuXHRcdGdldFNwZWNpZmljT3JHbG9iYWwsXHJcblx0XHRnbG9iYWxHYXRld2F5TGFiZWwsXHJcblx0XHRzcGVjaWZpY0dhdGV3YXlMYWJlbCxcclxuXHRcdGN1c3RvbUdhdGV3YXlMYWJlbCxcclxuXHRcdHNjZW5hcmlvTGFiZWwsXHJcblx0fTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB3aXRoRGlzcGF0Y2hHYXRld2F5cyA9ICggZGlzcGF0Y2ggKSA9PiB7XHJcblx0Y29uc3Qgc3RvcmUgPSBkaXNwYXRjaCggJ2pldC1mb3Jtcy9nYXRld2F5cycgKTtcclxuXHJcblx0cmV0dXJuIHtcclxuXHRcdHNldEdhdGV3YXlSZXF1ZXN0OiBzdG9yZS5zZXRSZXF1ZXN0LFxyXG5cdFx0c2V0R2F0ZXdheVNjZW5hcmlvOiBzdG9yZS5zZXRTY2VuYXJpbyxcclxuXHRcdHNldFNjZW5hcmlvOiBzdG9yZS5zZXRDdXJyZW50U2NlbmFyaW8sXHJcblx0XHRzZXRHYXRld2F5OiBzdG9yZS5zZXRHYXRld2F5LFxyXG5cdFx0c2V0R2F0ZXdheUlubmVyOiBzdG9yZS5zZXRHYXRld2F5SW5uZXIsXHJcblx0XHRzZXRHYXRld2F5U3BlY2lmaWM6IHN0b3JlLnNldEdhdGV3YXlTcGVjaWZpYyxcclxuXHRcdGNsZWFyR2F0ZXdheTogc3RvcmUuY2xlYXJHYXRld2F5LFxyXG5cdFx0Y2xlYXJTY2VuYXJpbzogc3RvcmUuY2xlYXJTY2VuYXJpbyxcclxuXHR9O1xyXG59O1xyXG5cclxuY29uc3QgZ2V0Rm9ybUZpZWxkcyA9ICggYmxvY2tQYXJzZXJGdW5jLCBibG9ja3MgKSA9PiB7XHJcblx0YmxvY2tzLm1hcCggYmxvY2sgPT4ge1xyXG5cdFx0YmxvY2tQYXJzZXJGdW5jKCBibG9jayApO1xyXG5cclxuXHRcdGlmICggYmxvY2suaW5uZXJCbG9ja3MubGVuZ3RoICkge1xyXG5cdFx0XHRnZXRGb3JtRmllbGRzKCBibG9ja1BhcnNlckZ1bmMsIGJsb2NrLmlubmVyQmxvY2tzICk7XHJcblx0XHR9XHJcblx0fSApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHdpdGhTZWxlY3RGb3JtRmllbGRzID0gKFxyXG5cdGV4Y2x1ZGUgPSBbXSxcclxuXHRwbGFjZWhvbGRlciA9IGZhbHNlLFxyXG5cdHN1cHByZXNzRmlsdGVyID0gZmFsc2UsXHJcbikgPT4gc2VsZWN0ID0+IHtcclxuXHJcblx0bGV0IGZvcm1GaWVsZHMgPSBbXTtcclxuXHRsZXQgc2tpcEZpZWxkcyA9IFsgJ3N1Ym1pdCcsICdmb3JtLWJyZWFrJywgJ2hlYWRpbmcnLCAnZ3JvdXAtYnJlYWsnLCAnY29uZGl0aW9uYWwnLCAuLi5leGNsdWRlIF07XHJcblxyXG5cdGdldEZvcm1GaWVsZHMoIGJsb2NrID0+IHtcclxuXHRcdGlmICggYmxvY2submFtZS5pbmNsdWRlcyggJ2pldC1mb3Jtcy8nIClcclxuXHRcdCAgICAgJiYgYmxvY2suYXR0cmlidXRlcy5uYW1lXHJcblx0XHQgICAgICYmICEgc2tpcEZpZWxkcy5maW5kKCBmaWVsZCA9PiBibG9jay5uYW1lLmluY2x1ZGVzKCBmaWVsZCApIClcclxuXHRcdCkge1xyXG5cclxuXHRcdFx0Lypjb25zdCBibG9ja1R5cGUgPSBzZWxlY3QoIGJsb2Nrc1N0b3JlICkuZ2V0QmxvY2tUeXBlKCBibG9jay5uYW1lICk7Ki9cclxuXHJcblx0XHRcdGZvcm1GaWVsZHMucHVzaCgge1xyXG5cdFx0XHRcdGJsb2NrTmFtZTogYmxvY2submFtZSxcclxuXHRcdFx0XHRuYW1lOiBibG9jay5hdHRyaWJ1dGVzLm5hbWUsXHJcblx0XHRcdFx0bGFiZWw6IGJsb2NrLmF0dHJpYnV0ZXMubGFiZWwgfHwgYmxvY2suYXR0cmlidXRlcy5uYW1lLFxyXG5cdFx0XHRcdHZhbHVlOiBibG9jay5hdHRyaWJ1dGVzLm5hbWUsXHJcblx0XHRcdFx0Ly9pY29uOiBibG9ja1R5cGUuaWNvbi5zcmMsXHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHR9LCBzZWxlY3QoICdjb3JlL2Jsb2NrLWVkaXRvcicgKS5nZXRCbG9ja3MoKSApO1xyXG5cclxuXHRmb3JtRmllbGRzID0gcGxhY2Vob2xkZXJcclxuXHRcdD8gWyB7IHZhbHVlOiAnJywgbGFiZWw6IHBsYWNlaG9sZGVyIH0sIC4uLmZvcm1GaWVsZHMgXVxyXG5cdFx0OiBmb3JtRmllbGRzO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0Zm9ybUZpZWxkczogc3VwcHJlc3NGaWx0ZXIgPyBmb3JtRmllbGRzIDogYXBwbHlGaWx0ZXJzKCAnamV0LmZiLmdldEZvcm1GaWVsZHNCbG9ja3MnLCBmb3JtRmllbGRzICksXHJcblx0fTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB3aXRoU2VsZWN0QWN0aW9uc0J5VHlwZSA9ICggYWN0aW9uVHlwZSwgd2l0aERlc2MgPSBmYWxzZSApID0+IHNlbGVjdCA9PiB7XHJcblx0Y29uc3QgeyBfamZfYWN0aW9ucyB9ID0gd2l0aFNlbGVjdE1ldGEoICdfamZfYWN0aW9ucycsIFtdICkoIHNlbGVjdCApO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0WyBhY3Rpb25UeXBlIF06IHByZXBhcmVBY3Rpb25zTGlzdEJ5VHlwZSggX2pmX2FjdGlvbnMsIGFjdGlvblR5cGUsIHdpdGhEZXNjICksXHJcblx0fTtcclxufTtcclxuIiwiaW1wb3J0IFJlcXVlc3RCdXR0b24gZnJvbSBcIi4vcmVxdWVzdC1idXR0b25cIjtcclxuaW1wb3J0IHsgdXNlU3RhdGVWYWxpZENsYXNzZXMgfSBmcm9tIFwiLi4vaGVscGVycy9ob29rcy9ob29rcy1oZWxwZXJcIjtcclxuXHJcbmZ1bmN0aW9uIFZhbGlkYXRlQnV0dG9uKCB7XHJcblx0XHRcdFx0XHRcdFx0IGluaXRpYWxWYWxpZCxcclxuXHRcdFx0XHRcdFx0XHQgbGFiZWwsXHJcblx0XHRcdFx0XHRcdFx0IGFqYXhBcmdzID0ge30sXHJcblx0XHRcdFx0XHRcdFx0IG9uVmFsaWQgPSAoKSA9PiB7fSxcclxuXHRcdFx0XHRcdFx0XHQgb25JbnZhbGlkID0gKCkgPT4ge30sXHJcblx0XHRcdFx0XHRcdCB9ICkge1xyXG5cclxuXHRjb25zdCBbXHJcblx0XHRjbGFzc05hbWUsXHJcblx0XHRzZXRWYWxpZENsYXNzLFxyXG5cdFx0c2V0SW52YWxpZENsYXNzLFxyXG5cdFx0c2V0TG9hZGluZ0NsYXNzXHJcblx0XSA9IHVzZVN0YXRlVmFsaWRDbGFzc2VzKCBpbml0aWFsVmFsaWQgfHwgZmFsc2UgKTtcclxuXHJcblx0Y29uc3Qgc2V0VmFsaWQgPSByZXNwb25zZSA9PiB7XHJcblx0XHRzZXRWYWxpZENsYXNzKCk7XHJcblx0XHRvblZhbGlkKCByZXNwb25zZSApO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IHNldEludmFsaWQgPSAoKSA9PiB7XHJcblx0XHRzZXRJbnZhbGlkQ2xhc3MoKTtcclxuXHRcdG9uSW52YWxpZCgpO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiA8UmVxdWVzdEJ1dHRvblxyXG5cdFx0YWpheEFyZ3M9eyBhamF4QXJncyB9XHJcblx0XHRsYWJlbD17IGxhYmVsIH1cclxuXHRcdG9uTG9hZGluZz17IHNldExvYWRpbmdDbGFzcyB9XHJcblx0XHRvblN1Y2Nlc3NSZXF1ZXN0PXsgc2V0VmFsaWQgfVxyXG5cdFx0b25GYWlsUmVxdWVzdD17IHNldEludmFsaWQgfVxyXG5cdFx0Y2xhc3NOYW1lPXsgY2xhc3NOYW1lIH1cclxuXHQ+XHJcblx0XHQ8aSBjbGFzc05hbWU9XCJkYXNoaWNvbnNcIi8+XHJcblx0PC9SZXF1ZXN0QnV0dG9uPjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVmFsaWRhdGVCdXR0b247IiwiZnVuY3Rpb24gYWRkQWN0aW9uKCBhY3Rpb25UeXBlLCBhY3Rpb25JbnN0YW5jZSApIHtcclxuXHR3cC5kYXRhLmRpc3BhdGNoKCAnamV0LWZvcm1zL2FjdGlvbnMnICkuYWRkQ2FsbGJhY2soIGFjdGlvblR5cGUsIGFjdGlvbkluc3RhbmNlICk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFkZEFjdGlvbjtcclxuIiwiY29uc3Qgc2VtdmVyR3QgPSByZXF1aXJlKCAnc2VtdmVyL2Z1bmN0aW9ucy9ndCcgKVxyXG5jb25zdCBzZW12ZXJMdCA9IHJlcXVpcmUoICdzZW12ZXIvZnVuY3Rpb25zL2x0JyApXHJcbmNvbnN0IHNlbXZlckd0ZSA9IHJlcXVpcmUoICdzZW12ZXIvZnVuY3Rpb25zL2d0ZScgKVxyXG5jb25zdCBzZW12ZXJMdGUgPSByZXF1aXJlKCAnc2VtdmVyL2Z1bmN0aW9ucy9sdGUnIClcclxuXHJcbmNvbnN0IHsgX18gfSA9IHdwLmkxOG47XHJcbmNvbnN0IHsgYXBwbHlGaWx0ZXJzIH0gPSB3cC5ob29rcztcclxuXHJcbmNsYXNzIFRvb2xzIHtcclxuXHJcblx0c3RhdGljIHdpdGhQbGFjZWhvbGRlciggc291cmNlLCBsYWJlbCA9ICctLScsIHZhbHVlID0gJycgKSB7XHJcblx0XHRyZXR1cm4gW1xyXG5cdFx0XHR7IGxhYmVsLCB2YWx1ZSB9LFxyXG5cdFx0XHQuLi5zb3VyY2UsXHJcblx0XHRdO1xyXG5cdH1cclxuXHJcblx0c3RhdGljIGlzRW1wdHlPYmplY3QoIG9iamVjdCApIHtcclxuXHRcdHJldHVybiAnb2JqZWN0JyA9PT0gdHlwZW9mIG9iamVjdCAmJiBPYmplY3Qua2V5cyggb2JqZWN0ICkubGVuZ3RoID09PSAwO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGV2ZW50ID0gbmFtZSA9PiB7XHJcblx0Y29uc3QgaW5pdGlhbGl6ZUNhbGxiYWNrc0V2ZW50ID0gbmV3IEV2ZW50KCBuYW1lICk7XHJcblx0cmV0dXJuICgpID0+IGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoIGluaXRpYWxpemVDYWxsYmFja3NFdmVudCApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxpc3RlbiA9ICggbmFtZSwgZnVuYyApID0+IHtcclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBuYW1lLCBmdW5jICk7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBnZXRTZW1WZXJGdW5jKCBvcGVyYXRvciApIHtcclxuXHRzd2l0Y2ggKCBvcGVyYXRvciApIHtcclxuXHRcdGNhc2UgJz4nOlxyXG5cdFx0XHRyZXR1cm4gc2VtdmVyR3Q7XHJcblx0XHRjYXNlICc+PSc6XHJcblx0XHRcdHJldHVybiBzZW12ZXJHdGU7XHJcblx0XHRjYXNlICc8JzpcclxuXHRcdFx0cmV0dXJuIHNlbXZlckx0O1xyXG5cdFx0Y2FzZSAnPD0nOlxyXG5cdFx0XHRyZXR1cm4gc2VtdmVyTHRlO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICgpID0+IGZhbHNlO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdmVyc2lvbkNvbXBhcmUoIHZlcnNpb24xLCB2ZXJzaW9uMiwgb3BlcmF0b3IgKSB7XHJcblx0dHJ5IHtcclxuXHRcdHJldHVybiBnZXRTZW1WZXJGdW5jKCBvcGVyYXRvciApKCB2ZXJzaW9uMSwgdmVyc2lvbjIgKTtcclxuXHR9IGNhdGNoICggdGUgKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBjb252ZXJ0U3ltYm9scyA9IGFwcGx5RmlsdGVycyggJ2pldC5mYi50b29scy5jb252ZXJ0U3ltYm9scycsIHtcclxuXHRjaGVja0N5clJlZ2V4OiAvW9CwLdGP0ZHRl9GU0pHRll0vaSxcclxuXHRjeXJSZWdleDogL1vQsC3Rj9GR0ZfRlNKR0ZZdL2dpLFxyXG5cdGNoYXJzTWFwOiB7XHJcblx0XHQn0LAnOiAnYScsICfQsSc6ICdiJywgJ9CyJzogJ3YnLCAn0LMnOiAnZycsICfQtCc6ICdkJyxcclxuXHRcdCfQtSc6ICdlJywgJ9GRJzogJ2lvJywgJ9C2JzogJ3poJywgJ9C3JzogJ3onLCAn0LgnOiAnaScsXHJcblx0XHQn0LknOiAnaScsICfQuic6ICdrJywgJ9C7JzogJ2wnLCAn0LwnOiAnbScsICfQvSc6ICduJyxcclxuXHRcdCfQvic6ICdvJywgJ9C/JzogJ3AnLCAn0YAnOiAncicsICfRgSc6ICdzJywgJ9GCJzogJ3QnLFxyXG5cdFx0J9GDJzogJ3UnLCAn0YQnOiAnZicsICfRhSc6ICdraCcsICfRhic6ICd0cycsICfRhyc6ICdjaCcsXHJcblx0XHQn0YgnOiAnc2gnLCAn0YknOiAnc2hjaCcsICfRiyc6ICd5JywgJ9GNJzogJ2UnLCAn0Y4nOiAnaXUnLFxyXG5cdFx0J9GPJzogJ2lhJywgJ9GXJzogJ2knLCAn0ZQnOiAnaWUnLCAn0pEnOiAnZycsICfRlic6ICdpJyxcclxuXHR9LFxyXG59ICk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWF5YmVDeXJUb0xhdGluKCBzdHIgKSB7XHJcblx0aWYgKCBjb252ZXJ0U3ltYm9scy5jaGVja0N5clJlZ2V4LnRlc3QoIHN0ciApICkge1xyXG5cdFx0c3RyID0gc3RyLnJlcGxhY2UoIGNvbnZlcnRTeW1ib2xzLmN5clJlZ2V4LCBmdW5jdGlvbiAoIG1hdGNoICkge1xyXG5cclxuXHRcdFx0aWYgKCB1bmRlZmluZWQgPT09IGNvbnZlcnRTeW1ib2xzLmNoYXJzTWFwWyBtYXRjaCBdICkge1xyXG5cdFx0XHRcdHJldHVybiAnJztcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIGNvbnZlcnRTeW1ib2xzLmNoYXJzTWFwWyBtYXRjaCBdO1xyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIHN0cjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnZlcnRlZE5hbWUoIHZhbHVlVG9DaGFuZ2UgKSB7XHJcblx0dmFyIHJlZ2V4ID0gL1xccysvZyxcclxuXHRcdHNsdWcgPSB2YWx1ZVRvQ2hhbmdlLnRvTG93ZXJDYXNlKCkucmVwbGFjZSggcmVnZXgsICdfJyApO1xyXG5cclxuXHQvLyBSZXBsYWNlIGFjY2VudHNcclxuXHRzbHVnID0gc2x1Zy5ub3JtYWxpemUoICdORkQnICkucmVwbGFjZSggL1tcXHUwMzAwLVxcdTAzNmZdL2csICcnICk7XHJcblxyXG5cdC8vIFJlcGxhY2UgY3lyaWxsaWNcclxuXHRzbHVnID0gbWF5YmVDeXJUb0xhdGluKCBzbHVnICk7XHJcblxyXG5cdGlmICggMjAgPCBzbHVnLmxlbmd0aCApIHtcclxuXHRcdC8vIDM0IC0gTGlvbmVsIE1lc3NpJ3MgYWdlIHdoZW4gaGUgbGVmdCBCYXJjZWxvbmFcclxuXHRcdHNsdWcgPSBzbHVnLnN1YnN0ciggMCwgMzQgKTtcclxuXHJcblx0XHRpZiAoICctJyA9PT0gc2x1Zy5zbGljZSggLSAxICkgKSB7XHJcblx0XHRcdHNsdWcgPSBzbHVnLnNsaWNlKCAwLCAtIDEgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBzbHVnO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xhc3NuYW1lcyggLi4uYWRkaXRpb25hbCApIHtcclxuXHRjb25zdCByZXN1bHQgPSBbXTtcclxuXHJcblx0Y29uc3QgcGFyc2VWYWx1ZXMgPSBzb3VyY2UgPT4ge1xyXG5cdFx0c291cmNlLmZvckVhY2goIGl0ZW1DbGFzcyA9PiB7XHJcblx0XHRcdGlmICggISBpdGVtQ2xhc3MgKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggaXRlbUNsYXNzICkgKSB7XHJcblx0XHRcdFx0cGFyc2VWYWx1ZXMoIGl0ZW1DbGFzcyApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggJ3N0cmluZycgPT09IHR5cGVvZiBpdGVtQ2xhc3MgKSB7XHJcblx0XHRcdFx0cmVzdWx0LnB1c2goIGl0ZW1DbGFzcy50cmltKCkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoICdvYmplY3QnID09PSB0eXBlb2YgaXRlbUNsYXNzICkge1xyXG5cdFx0XHRcdGZvciAoIGNvbnN0IGl0ZW1DbGFzc0tleSBpbiBpdGVtQ2xhc3MgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGl0ZW1DbGFzc1sgaXRlbUNsYXNzS2V5IF0gKSB7XHJcblx0XHRcdFx0XHRcdHJlc3VsdC5wdXNoKCAoXHJcblx0XHRcdFx0XHRcdFx0aXRlbUNsYXNzS2V5ICsgJydcclxuXHRcdFx0XHRcdFx0KS50cmltKCkgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9O1xyXG5cclxuXHRwYXJzZVZhbHVlcyggYWRkaXRpb25hbCApO1xyXG5cclxuXHRyZXR1cm4gcmVzdWx0LmpvaW4oICcgJyApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29udmVydE9iamVjdFRvT3B0aW9uc0xpc3QoIGVudHJpZXMgPSBbXSwge1xyXG5cdHVzZVBsYWNlaG9sZGVyID0gdHJ1ZSxcclxuXHRsYWJlbCA9ICctLScsXHJcblx0dmFsdWUgPSAnJyxcclxufSA9IHt9ICkge1xyXG5cdGNvbnN0IHBsYWNlaG9sZGVyID0geyBsYWJlbCwgdmFsdWUgfTtcclxuXHJcblx0aWYgKCAhIGVudHJpZXMgKSB7XHJcblx0XHRyZXR1cm4gdXNlUGxhY2Vob2xkZXIgPyBbIHBsYWNlaG9sZGVyIF0gOiBbXTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IG9wdGlvbnMgPSBPYmplY3QuZW50cmllcyggZW50cmllcyApLm1hcCggKCBbIHZhbHVlLCBsYWJlbCBdICkgPT4ge1xyXG5cdFx0cmV0dXJuIHsgdmFsdWUsIGxhYmVsIH07XHJcblx0fSApO1xyXG5cclxuXHRyZXR1cm4gdXNlUGxhY2Vob2xkZXIgPyBbIHBsYWNlaG9sZGVyLCAuLi5vcHRpb25zIF0gOiBvcHRpb25zO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb29sczsiLCJjb25zdCB7IGFwcGx5RmlsdGVycyB9ID0gd3AuaG9va3M7XHJcblxyXG5mdW5jdGlvbiB3aXRoUHJlc2V0KCBXcmFwcGVkQ29tcG9uZW50ICkge1xyXG5cdHJldHVybiBmdW5jdGlvbiBKZXRGb3JtUHJlc2V0RWRpdG9yKCBwcm9wcyApIHtcclxuXHJcblx0XHRjb25zdCBwYXJzZVZhbHVlID0gKCkgPT4ge1xyXG5cdFx0XHRsZXQgdmFsID0ge307XHJcblxyXG5cdFx0XHRpZiAoICdvYmplY3QnID09PSB0eXBlb2YgcHJvcHMudmFsdWUgKSB7XHJcblx0XHRcdFx0dmFsID0geyAuLi5wcm9wcy52YWx1ZSB9O1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKCBwcm9wcy52YWx1ZSAmJiAnc3RyaW5nJyA9PT0gdHlwZW9mIHByb3BzLnZhbHVlICkge1xyXG5cdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHR2YWwgPSBKU09OLnBhcnNlKCBwcm9wcy52YWx1ZSApO1xyXG5cdFx0XHRcdFx0aWYgKCAnbnVtYmVyJyA9PT0gdHlwZW9mIHZhbCApIHtcclxuXHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSBjYXRjaCAoIGV4Y2VwdGlvbiApIHtcclxuXHRcdFx0XHRcdHZhbCA9IHt9O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR2YWwuamV0X3ByZXNldCA9IHRydWU7XHJcblxyXG5cdFx0XHRyZXR1cm4gdmFsO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNvbnN0IGlzVmlzaWJsZSA9ICggY3VycmVudFN0YXRlLCBkYXRhLCBwb3NpdGlvbiApID0+IHtcclxuXHRcdFx0cmV0dXJuICggKCBkYXRhLnBvc2l0aW9uICYmIHBvc2l0aW9uID09PSBkYXRhLnBvc2l0aW9uIClcclxuXHRcdFx0XHR8fCAhIGRhdGEucG9zaXRpb24gfHwgJ3F1ZXJ5X3ZhcicgIT09IGN1cnJlbnRTdGF0ZS5mcm9tICkgJiYgaXNHbG9iYWxWaXNpYmxlKCBjdXJyZW50U3RhdGUsIGRhdGEgKTtcclxuXHRcdH07XHJcblxyXG5cdFx0Y29uc3QgaXNHbG9iYWxWaXNpYmxlID0gKCBjdXJyZW50U3RhdGUsIGRhdGEgKSA9PiB7XHJcblx0XHRcdGlmICggISBkYXRhLmNvbmRpdGlvbiAmJiAhIGRhdGEuY3VzdG9tX2NvbmRpdGlvbiApIHtcclxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKCBkYXRhLmN1c3RvbV9jb25kaXRpb24gKSB7XHJcblx0XHRcdFx0c3dpdGNoICggZGF0YS5jdXN0b21fY29uZGl0aW9uICkge1xyXG5cdFx0XHRcdFx0Y2FzZSAncXVlcnlfdmFyJzpcclxuXHRcdFx0XHRcdFx0cmV0dXJuIChcclxuXHRcdFx0XHRcdFx0XHQoICdwb3N0JyA9PT0gY3VycmVudFN0YXRlLmZyb20gJiYgJ3F1ZXJ5X3ZhcicgPT09IGN1cnJlbnRTdGF0ZS5wb3N0X2Zyb20gKVxyXG5cdFx0XHRcdFx0XHRcdHx8ICggJ3VzZXInID09PSBjdXJyZW50U3RhdGUuZnJvbSAmJiAncXVlcnlfdmFyJyA9PT0gY3VycmVudFN0YXRlLnVzZXJfZnJvbSApXHJcblx0XHRcdFx0XHRcdFx0fHwgKCAncXVlcnlfdmFyJyA9PT0gY3VycmVudFN0YXRlLmZyb20gKVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0ZGVmYXVsdDpcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGFwcGx5RmlsdGVycyggJ2pldC5mYi5wcmVzZXQuZWRpdG9yLmN1c3RvbS5jb25kaXRpb24nLCBmYWxzZSwgZGF0YS5jdXN0b21fY29uZGl0aW9uLCBjdXJyZW50U3RhdGUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggZGF0YS5jb25kaXRpb24gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGN1cnJlbnRTdGF0ZVsgZGF0YS5jb25kaXRpb24uZmllbGQgXSA9PT0gZGF0YS5jb25kaXRpb24udmFsdWU7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNvbnN0IGlzQ3VycmVudEZpZWxkVmlzaWJsZSA9ICggY3VycmVudFN0YXRlLCBkYXRhLCBwb3NpdGlvbiApID0+IHtcclxuXHJcblx0XHRcdGlmICggISBkYXRhLmNvbmRpdGlvbiAmJiAhIGRhdGEucGFyZW50X2NvbmRpdGlvbiApIHtcclxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIGRhdGEucG9zaXRpb24gJiYgcG9zaXRpb24gIT09IGRhdGEucG9zaXRpb24gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGRhdGEucGFyZW50X2NvbmRpdGlvbiAmJiAhIGRhdGEuY29uZGl0aW9uICkge1xyXG5cdFx0XHRcdHJldHVybiBjdXJyZW50U3RhdGVbIGRhdGEucGFyZW50X2NvbmRpdGlvbi5maWVsZCBdID09PSBkYXRhLnBhcmVudF9jb25kaXRpb24udmFsdWU7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoIGRhdGEucGFyZW50X2NvbmRpdGlvbiAmJiBkYXRhLmNvbmRpdGlvbiApIHtcclxuXHRcdFx0XHRyZXR1cm4gY3VycmVudFN0YXRlWyAnY3VycmVudF9maWVsZF8nICsgZGF0YS5jb25kaXRpb24uZmllbGQgXSA9PT0gZGF0YS5jb25kaXRpb24udmFsdWUgJiYgY3VycmVudFN0YXRlWyBkYXRhLnBhcmVudF9jb25kaXRpb24uZmllbGQgXSA9PT0gZGF0YS5wYXJlbnRfY29uZGl0aW9uLnZhbHVlO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKCAhIGRhdGEucGFyZW50X2NvbmRpdGlvbiAmJiBkYXRhLmNvbmRpdGlvbiApIHtcclxuXHRcdFx0XHRyZXR1cm4gY3VycmVudFN0YXRlWyAnY3VycmVudF9maWVsZF8nICsgZGF0YS5jb25kaXRpb24uZmllbGQgXSA9PT0gZGF0YS5jb25kaXRpb24udmFsdWU7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNvbnN0IGlzTWFwRmllbGRWaXNpYmxlID0gKCBjdXJyZW50U3RhdGUsIGRhdGEsIGZpZWxkICkgPT4ge1xyXG5cclxuXHRcdFx0aWYgKCAhIGRhdGEuY29uZGl0aW9uICYmICEgZGF0YS5wYXJlbnRfY29uZGl0aW9uICkge1xyXG5cdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGRhdGEucGFyZW50X2NvbmRpdGlvbiAmJiAhIGRhdGEuY29uZGl0aW9uICkge1xyXG5cdFx0XHRcdHJldHVybiBjdXJyZW50U3RhdGVbIGRhdGEucGFyZW50X2NvbmRpdGlvbi5maWVsZCBdID09PSBkYXRhLnBhcmVudF9jb25kaXRpb24udmFsdWU7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoIGRhdGEucGFyZW50X2NvbmRpdGlvbiAmJiBkYXRhLmNvbmRpdGlvbiApIHtcclxuXHRcdFx0XHRpZiAoICEgY3VycmVudFN0YXRlLmZpZWxkc19tYXAgfHwgISBjdXJyZW50U3RhdGUuZmllbGRzX21hcFsgZmllbGQgXSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gY3VycmVudFN0YXRlLmZpZWxkc19tYXBbIGZpZWxkIF1bIGRhdGEuY29uZGl0aW9uLmZpZWxkIF0gPT09IGRhdGEuY29uZGl0aW9uLnZhbHVlICYmIGN1cnJlbnRTdGF0ZVsgZGF0YS5wYXJlbnRfY29uZGl0aW9uLmZpZWxkIF0gPT09IGRhdGEucGFyZW50X2NvbmRpdGlvbi52YWx1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoICEgZGF0YS5wYXJlbnRfY29uZGl0aW9uICYmIGRhdGEuY29uZGl0aW9uICkge1xyXG5cdFx0XHRcdGlmICggISBjdXJyZW50U3RhdGUuZmllbGRzX21hcCB8fCAhIGN1cnJlbnRTdGF0ZS5maWVsZHNfbWFwWyBmaWVsZCBdICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdHJldHVybiBjdXJyZW50U3RhdGUuZmllbGRzX21hcFsgZmllbGQgXVsgZGF0YS5jb25kaXRpb24uZmllbGQgXSA9PT0gZGF0YS5jb25kaXRpb24udmFsdWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHJcblx0XHR9O1xyXG5cclxuXHRcdGNvbnN0IGV4Y2x1ZGVPcHRpb25zID0gKCBzZWxlY3RPcHRpb25zICkgPT4ge1xyXG5cdFx0XHRjb25zdCBvcHRpb25zID0gWyAuLi5zZWxlY3RPcHRpb25zIF07XHJcblx0XHRcdG9wdGlvbnMuZm9yRWFjaCggKCBvcHRpb24sIGluZGV4ICkgPT4ge1xyXG5cdFx0XHRcdGlmICggcHJvcHMuZXhjbHVkZVNvdXJjZXMgJiYgcHJvcHMuZXhjbHVkZVNvdXJjZXMuaW5jbHVkZXMoIG9wdGlvbi52YWx1ZSApICkge1xyXG5cdFx0XHRcdFx0b3B0aW9ucy5zcGxpY2UoIGluZGV4LCAxICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9ICk7XHJcblx0XHRcdHJldHVybiBvcHRpb25zO1xyXG5cdFx0fTtcclxuXHJcblx0XHRyZXR1cm4gPFdyYXBwZWRDb21wb25lbnRcclxuXHRcdFx0a2V5PSd3cmFwcGVkLXByZXNldC1lZGl0b3InXHJcblx0XHRcdHsgLi4ucHJvcHMgfVxyXG5cdFx0XHRwYXJzZVZhbHVlPXsgcGFyc2VWYWx1ZSB9XHJcblx0XHRcdGlzVmlzaWJsZT17IGlzVmlzaWJsZSB9XHJcblx0XHRcdGlzTWFwRmllbGRWaXNpYmxlPXsgaXNNYXBGaWVsZFZpc2libGUgfVxyXG5cdFx0XHRpc0N1cnJlbnRGaWVsZFZpc2libGU9eyBpc0N1cnJlbnRGaWVsZFZpc2libGUgfVxyXG5cdFx0XHRleGNsdWRlT3B0aW9ucz17IGV4Y2x1ZGVPcHRpb25zIH1cclxuXHRcdC8+O1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFByZXNldDtcclxuIiwiY29uc3QgeyBpc0VtcHR5IH0gPSB3aW5kb3cubG9kYXNoO1xyXG5cclxuLyoqXHJcbiAqIFdvcmRQcmVzcyBkZXBlbmRlbmNpZXNcclxuICovXHJcbmNvbnN0IHsgd2l0aEluc3RhbmNlSWQgfSA9IHdpbmRvdy53cC5jb21wb3NlO1xyXG5cclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuY29uc3QgQmFzZUNvbnRyb2wgPSB3aW5kb3cud3AuY29tcG9uZW50cy5CYXNlQ29udHJvbDtcclxuXHJcbmZ1bmN0aW9uIEdyb3VwZWRTZWxlY3RDb250cm9sKCB7XHJcblx0XHRcdFx0XHRcdFx0XHQgICBoZWxwLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICAgaW5zdGFuY2VJZCxcclxuXHRcdFx0XHRcdFx0XHRcdCAgIGxhYmVsLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICAgbXVsdGlwbGUgPSBmYWxzZSxcclxuXHRcdFx0XHRcdFx0XHRcdCAgIG9uQ2hhbmdlLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICAgb3B0aW9ucyA9IFtdLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICAgY2xhc3NOYW1lLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICAgdmFsdWUsXHJcblx0XHRcdFx0XHRcdFx0XHQgICBoaWRlTGFiZWxGcm9tVmlzaW9uLFxyXG5cdFx0XHRcdFx0XHRcdCAgIH0gKSB7XHJcblx0Y29uc3QgaWQgPSBgaW5zcGVjdG9yLXNlbGVjdC1jb250cm9sLSR7IGluc3RhbmNlSWQgfWA7XHJcblx0Y29uc3Qgb25DaGFuZ2VWYWx1ZSA9ICggZXZlbnQgKSA9PiB7XHJcblx0XHRvbkNoYW5nZSggZXZlbnQudGFyZ2V0LnZhbHVlICk7XHJcblx0fTtcclxuXHJcblx0Ly8gRGlzYWJsZSByZWFzb246IEEgc2VsZWN0IHdpdGggYW4gb25jaGFuZ2UgdGhyb3dzIGEgd2FybmluZ1xyXG5cclxuXHQvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9uby1vbmNoYW5nZSAqL1xyXG5cdHJldHVybiAhIGlzRW1wdHkoIG9wdGlvbnMgKSAmJiAoXHJcblx0XHQ8QmFzZUNvbnRyb2wgbGFiZWw9eyBsYWJlbCB9IGhpZGVMYWJlbEZyb21WaXNpb249eyBoaWRlTGFiZWxGcm9tVmlzaW9uIH0gaWQ9eyBpZCB9IGhlbHA9eyBoZWxwIH1cclxuXHRcdFx0XHRcdCBjbGFzc05hbWU9eyBjbGFzc05hbWUgfT5cclxuXHRcdFx0PHNlbGVjdFxyXG5cdFx0XHRcdGlkPXsgaWQgfVxyXG5cdFx0XHRcdGNsYXNzTmFtZT1cImNvbXBvbmVudHMtc2VsZWN0LWNvbnRyb2xfX2lucHV0XCJcclxuXHRcdFx0XHRvbkNoYW5nZT17IG9uQ2hhbmdlVmFsdWUgfVxyXG5cdFx0XHRcdHZhbHVlPXsgdmFsdWUgfVxyXG5cdFx0XHRcdGFyaWEtZGVzY3JpYmVkYnk9eyAhISBoZWxwID8gYCR7IGlkIH1fX2hlbHBgIDogdW5kZWZpbmVkIH1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdDxvcHRpb25cclxuXHRcdFx0XHRcdGtleT17IGAkeyBsYWJlbCB9LXBsYWNlaG9sZGVyYCB9XHJcblx0XHRcdFx0XHR2YWx1ZT17IGBgIH1cclxuXHRcdFx0XHQ+eyBgLS1gIH08L29wdGlvbj5cclxuXHRcdFx0XHR7IG9wdGlvbnMubWFwKCAoIG9wdEdyb3VwLCBncm91cEluZGV4ICkgPT4ge1xyXG5cdFx0XHRcdFx0cmV0dXJuICEgaXNFbXB0eSggb3B0R3JvdXAudmFsdWVzICkgJiYgPG9wdGdyb3VwXHJcblx0XHRcdFx0XHRcdGtleT17IGAkeyBvcHRHcm91cC5sYWJlbCB9LSR7IGdyb3VwSW5kZXggfWAgfVxyXG5cdFx0XHRcdFx0XHRsYWJlbD17IG9wdEdyb3VwLmxhYmVsIH1cclxuXHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0eyBvcHRHcm91cC52YWx1ZXMubWFwKCAoIG9wdGlvbiwgaW5kZXggKSA9PlxyXG5cdFx0XHRcdFx0XHRcdDxvcHRpb25cclxuXHRcdFx0XHRcdFx0XHRcdGtleT17IGAkeyBvcHRpb24udmFsdWUgfS0keyBpbmRleCB9LSR7IGdyb3VwSW5kZXggfWAgfVxyXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU9eyBvcHRpb24udmFsdWUgfVxyXG5cdFx0XHRcdFx0XHRcdFx0ZGlzYWJsZWQ9eyBvcHRpb24uZGlzYWJsZWQgfVxyXG5cdFx0XHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0XHRcdHsgb3B0aW9uLmxhYmVsIH1cclxuXHRcdFx0XHRcdFx0XHQ8L29wdGlvbj4sXHJcblx0XHRcdFx0XHRcdCkgfVxyXG5cdFx0XHRcdFx0PC9vcHRncm91cD47XHJcblx0XHRcdFx0fSApIH1cclxuXHRcdFx0PC9zZWxlY3Q+XHJcblx0XHQ8L0Jhc2VDb250cm9sPlxyXG5cdCk7XHJcblx0LyogZXNsaW50LWVuYWJsZSBqc3gtYTExeS9uby1vbmNoYW5nZSAqL1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3aXRoSW5zdGFuY2VJZCggR3JvdXBlZFNlbGVjdENvbnRyb2wgKTsiLCJpbXBvcnQgR3JvdXBlZFNlbGVjdENvbnRyb2wgZnJvbSAnLi4vZ3JvdXBlZC1zZWxlY3QtY29udHJvbCc7XHJcblxyXG5jb25zdCB7XHJcblx0XHQgIFRleHRDb250cm9sLFxyXG5cdFx0ICBTZWxlY3RDb250cm9sLFxyXG5cdFx0ICBDdXN0b21TZWxlY3RDb250cm9sLFxyXG5cdFx0ICBDYXJkLFxyXG5cdFx0ICBDYXJkQm9keSxcclxuXHRcdCAgQ2FyZEhlYWRlcixcclxuXHQgIH0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuZnVuY3Rpb24gR2xvYmFsRmllbGQoIHtcclxuXHRcdFx0XHRcdFx0ICBkYXRhLFxyXG5cdFx0XHRcdFx0XHQgIHZhbHVlLFxyXG5cdFx0XHRcdFx0XHQgIGluZGV4LFxyXG5cdFx0XHRcdFx0XHQgIG9uQ2hhbmdlVmFsdWUsXHJcblx0XHRcdFx0XHRcdCAgaXNWaXNpYmxlLFxyXG5cdFx0XHRcdFx0XHQgIGV4Y2x1ZGVPcHRpb25zID0gb3B0aW9ucyA9PiBvcHRpb25zLFxyXG5cdFx0XHRcdFx0XHQgIHBvc2l0aW9uLFxyXG5cdFx0XHRcdFx0ICB9ICkge1xyXG5cclxuXHRzd2l0Y2ggKCBkYXRhLnR5cGUgKSB7XHJcblx0XHRjYXNlICd0ZXh0JzpcclxuXHRcdFx0cmV0dXJuICggaXNWaXNpYmxlKCB2YWx1ZSwgZGF0YSwgcG9zaXRpb24gKSAmJlxyXG5cdFx0XHRcdDxkaXZcclxuXHRcdFx0XHRcdGtleT17ICdmaWVsZF8nICsgZGF0YS5uYW1lICsgaW5kZXggfVxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ2pldC1mb3JtLXByZXNldF9fcm93JyB9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0PFRleHRDb250cm9sXHJcblx0XHRcdFx0XHRcdGtleT17IGRhdGEubmFtZSArIGluZGV4IH1cclxuXHRcdFx0XHRcdFx0bGFiZWw9eyBkYXRhLmxhYmVsIH1cclxuXHRcdFx0XHRcdFx0dmFsdWU9eyB2YWx1ZVsgZGF0YS5uYW1lIF0gfVxyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdFx0b25DaGFuZ2VWYWx1ZSggbmV3VmFsLCBkYXRhLm5hbWUgKVxyXG5cdFx0XHRcdFx0XHR9IH1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdCk7XHJcblx0XHRjYXNlICdzZWxlY3QnOlxyXG5cdFx0XHRyZXR1cm4gKCBpc1Zpc2libGUoIHZhbHVlLCBkYXRhLCBwb3NpdGlvbiApICYmXHJcblx0XHRcdFx0PGRpdlxyXG5cdFx0XHRcdFx0a2V5PXsgJ2ZpZWxkXycgKyBkYXRhLm5hbWUgKyBpbmRleCB9XHJcblx0XHRcdFx0XHRjbGFzc05hbWU9eyAnamV0LWZvcm0tcHJlc2V0X19yb3cnIH1cclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHQ8U2VsZWN0Q29udHJvbFxyXG5cdFx0XHRcdFx0XHRrZXk9eyBkYXRhLm5hbWUgKyBpbmRleCB9XHJcblx0XHRcdFx0XHRcdGxhYmVsUG9zaXRpb249XCJzaWRlXCJcclxuXHRcdFx0XHRcdFx0b3B0aW9ucz17IGV4Y2x1ZGVPcHRpb25zKCBkYXRhLm9wdGlvbnMgKSB9XHJcblx0XHRcdFx0XHRcdGxhYmVsPXsgZGF0YS5sYWJlbCB9XHJcblx0XHRcdFx0XHRcdHZhbHVlPXsgdmFsdWVbIGRhdGEubmFtZSBdIH1cclxuXHRcdFx0XHRcdFx0b25DaGFuZ2U9eyBuZXdWYWwgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlVmFsdWUoIG5ld1ZhbCwgZGF0YS5uYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEF2YWlsYWJsZU1hcEZpZWxkKCB7XHJcblx0XHRcdFx0XHRcdFx0XHRmaWVsZHNNYXAsXHJcblx0XHRcdFx0XHRcdFx0XHRmaWVsZCxcclxuXHRcdFx0XHRcdFx0XHRcdGluZGV4LFxyXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWUsXHJcblx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlLFxyXG5cdFx0XHRcdFx0XHRcdFx0aXNNYXBGaWVsZFZpc2libGUsXHJcblx0XHRcdFx0XHRcdFx0fSApIHtcclxuXHJcblx0bGV0IGN1cnJlbnRWYWwgPSBudWxsO1xyXG5cclxuXHRpZiAoICEgZmllbGRzTWFwICkge1xyXG5cdFx0ZmllbGRzTWFwID0ge307XHJcblx0fVxyXG5cclxuXHRjdXJyZW50VmFsID0gZmllbGRzTWFwWyBmaWVsZCBdO1xyXG5cclxuXHRpZiAoICEgY3VycmVudFZhbCB8fCAnb2JqZWN0JyAhPT0gdHlwZW9mIGN1cnJlbnRWYWwgKSB7XHJcblx0XHRjdXJyZW50VmFsID0ge307XHJcblx0fVxyXG5cclxuXHRjb25zdCBBdmFpbGFibGVGaWVsZFdyYXBwZXIgPSAoIHsgZmllbGQsIG5hbWUsIGluZGV4LCBmSW5kZXgsIGNoaWxkcmVuIH0gKSA9PiA8Q2FyZFxyXG5cdFx0a2V5PXsgZmllbGQgKyBuYW1lICsgaW5kZXggKyBmSW5kZXggfVxyXG5cdFx0c2l6ZT17ICdleHRyYVNtYWxsJyB9XHJcblx0XHRzdHlsZT17IHsgbWFyZ2luQm90dG9tOiAnMTBweCcgfSB9XHJcblx0PlxyXG5cdFx0PENhcmRIZWFkZXI+XHJcblx0XHRcdDxzcGFuIGNsYXNzTmFtZT0namV0LWxhYmVsLW92ZXJmbG93Jz57IGZpZWxkIH08L3NwYW4+XHJcblx0XHQ8L0NhcmRIZWFkZXI+XHJcblx0XHQ8Q2FyZEJvZHlcclxuXHRcdFx0a2V5PXsgZmllbGQgKyBuYW1lICsgaW5kZXggKyBmSW5kZXggfVxyXG5cdFx0XHRjbGFzc05hbWU9eyAnamV0LWZvcm0tcHJlc2V0X19maWVsZHMtbWFwLWl0ZW0nIH1cclxuXHRcdD5cclxuXHRcdFx0eyBjaGlsZHJlbiB9XHJcblx0XHQ8L0NhcmRCb2R5PlxyXG5cdDwvQ2FyZD47XHJcblxyXG5cdGZ1bmN0aW9uIEF2YWlsYWJsZUZpZWxkV3JhcHBlckZ1bmMoIHsgZmllbGQsIG5hbWUsIGluZGV4LCBmSW5kZXggfSwgY2hpbGRyZW4gKSB7XHJcblx0XHRyZXR1cm4gPENhcmRcclxuXHRcdFx0a2V5PXsgZmllbGQgKyBuYW1lICsgaW5kZXggKyBmSW5kZXggfVxyXG5cdFx0XHRzaXplPXsgJ2V4dHJhU21hbGwnIH1cclxuXHRcdFx0c3R5bGU9eyB7IG1hcmdpbkJvdHRvbTogJzEwcHgnIH0gfVxyXG5cdFx0PlxyXG5cdFx0XHQ8Q2FyZEhlYWRlcj5cclxuXHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2pldC1sYWJlbC1vdmVyZmxvdyc+eyBmaWVsZCB9PC9zcGFuPlxyXG5cdFx0XHQ8L0NhcmRIZWFkZXI+XHJcblx0XHRcdDxDYXJkQm9keVxyXG5cdFx0XHRcdGtleT17IGZpZWxkICsgbmFtZSArIGluZGV4ICsgZkluZGV4IH1cclxuXHRcdFx0XHRjbGFzc05hbWU9eyAnamV0LWZvcm0tcHJlc2V0X19maWVsZHMtbWFwLWl0ZW0nIH1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdHsgY2hpbGRyZW4gfVxyXG5cdFx0XHQ8L0NhcmRCb2R5PlxyXG5cdFx0PC9DYXJkPjtcclxuXHR9XHJcblxyXG5cdHJldHVybiA8UmVhY3QuRnJhZ21lbnQga2V5PXsgYG1hcF9maWVsZF9wcmVzZXRfJHsgZmllbGQgKyBpbmRleCB9YCB9PlxyXG5cclxuXHRcdHsgd2luZG93LkpldEZvcm1FZGl0b3JEYXRhLnByZXNldENvbmZpZy5tYXBfZmllbGRzLm1hcCggKCBkYXRhLCBmSW5kZXggKSA9PiB7XHJcblx0XHRcdGNvbnN0IHByb3BzID0geyBmaWVsZCwgbmFtZTogZGF0YS5uYW1lLCBpbmRleCwgZkluZGV4IH07XHJcblxyXG5cdFx0XHRjb25zdCB1bmlxS2V5ID0gJ2NvbnRyb2xfJyArIGZpZWxkICsgZGF0YS5uYW1lICsgaW5kZXggKyBmSW5kZXg7XHJcblxyXG5cdFx0XHRzd2l0Y2ggKCBkYXRhLnR5cGUgKSB7XHJcblx0XHRcdFx0Y2FzZSAndGV4dCc6XHJcblx0XHRcdFx0XHRyZXR1cm4gKCBpc01hcEZpZWxkVmlzaWJsZSggdmFsdWUsIGRhdGEsIGZpZWxkICkgJiZcclxuXHRcdFx0XHRcdFx0QXZhaWxhYmxlRmllbGRXcmFwcGVyRnVuYyggcHJvcHMsIDxUZXh0Q29udHJvbFxyXG5cdFx0XHRcdFx0XHRcdGtleT17IHVuaXFLZXkgKyAnVGV4dENvbnRyb2wnIH1cclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj17IGRhdGEubGFiZWwgfVxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlPXsgY3VycmVudFZhbFsgZGF0YS5uYW1lIF0gfVxyXG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXsgbmV3VmFsID0+IHtcclxuXHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRWYWxbIGRhdGEubmFtZSBdID0gbmV3VmFsO1xyXG5cdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2VWYWx1ZSgge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQuLi5maWVsZHNNYXAsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFsgZmllbGQgXTogY3VycmVudFZhbCxcclxuXHRcdFx0XHRcdFx0XHRcdH0sICdmaWVsZHNfbWFwJyApO1xyXG5cdFx0XHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0XHQvPiApXHJcblx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdGNhc2UgJ3NlbGVjdCc6XHJcblx0XHRcdFx0XHRyZXR1cm4gKCBpc01hcEZpZWxkVmlzaWJsZSggdmFsdWUsIGRhdGEsIGZpZWxkICkgJiZcclxuXHRcdFx0XHRcdFx0PEF2YWlsYWJsZUZpZWxkV3JhcHBlciB7IC4uLnByb3BzIH0ga2V5PXsgdW5pcUtleSB9PlxyXG5cdFx0XHRcdFx0XHRcdDxTZWxlY3RDb250cm9sXHJcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zPXsgZGF0YS5vcHRpb25zIH1cclxuXHRcdFx0XHRcdFx0XHRcdC8vbGFiZWw9eyBkYXRhLmxhYmVsIH1cclxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsUG9zaXRpb249XCJ0b3BcIlxyXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU9eyBjdXJyZW50VmFsWyBkYXRhLm5hbWUgXSB9XHJcblx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRWYWxbIGRhdGEubmFtZSBdID0gbmV3VmFsO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Li4uZmllbGRzTWFwLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFsgZmllbGQgXTogY3VycmVudFZhbCxcclxuXHRcdFx0XHRcdFx0XHRcdFx0fSwgJ2ZpZWxkc19tYXAnICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9IH1cclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8L0F2YWlsYWJsZUZpZWxkV3JhcHBlcj5cclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0Y2FzZSAnY3VzdG9tX3NlbGVjdCc6XHJcblx0XHRcdFx0XHRyZXR1cm4gKCBpc01hcEZpZWxkVmlzaWJsZSggdmFsdWUsIGRhdGEsIGZpZWxkICkgJiZcclxuXHRcdFx0XHRcdFx0PEF2YWlsYWJsZUZpZWxkV3JhcHBlciB7IC4uLnByb3BzIH0ga2V5PXsgdW5pcUtleSB9PlxyXG5cdFx0XHRcdFx0XHRcdDxDdXN0b21TZWxlY3RDb250cm9sXHJcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zPXsgZGF0YS5vcHRpb25zIH1cclxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXsgKCB7IHNlbGVjdGVkSXRlbSB9ICkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VmFsWyBkYXRhLm5hbWUgXSA9IHNlbGVjdGVkSXRlbS5rZXk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlVmFsdWUoIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuLi5maWVsZHNNYXAsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0WyBmaWVsZCBdOiBjdXJyZW50VmFsLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR9LCAnZmllbGRzX21hcCcgKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU9eyBkYXRhLm9wdGlvbnMuZmluZCggb3B0aW9uID0+IG9wdGlvbi5rZXkgPT09IGN1cnJlbnRWYWxbIGRhdGEubmFtZSBdICkgfVxyXG5cdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdDwvQXZhaWxhYmxlRmllbGRXcmFwcGVyPiApO1xyXG5cdFx0XHRcdGNhc2UgJ2dyb3VwZWRfc2VsZWN0JzpcclxuXHRcdFx0XHRcdHJldHVybiAoIGlzTWFwRmllbGRWaXNpYmxlKCB2YWx1ZSwgZGF0YSwgZmllbGQgKSAmJlxyXG5cdFx0XHRcdFx0XHQ8QXZhaWxhYmxlRmllbGRXcmFwcGVyIHsgLi4ucHJvcHMgfSBrZXk9eyB1bmlxS2V5IH0+XHJcblx0XHRcdFx0XHRcdFx0PEdyb3VwZWRTZWxlY3RDb250cm9sXHJcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zPXsgZGF0YS5vcHRpb25zIH1cclxuXHRcdFx0XHRcdFx0XHRcdC8vbGFiZWw9eyBkYXRhLmxhYmVsIH1cclxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsUG9zaXRpb249XCJ0b3BcIlxyXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU9eyBjdXJyZW50VmFsWyBkYXRhLm5hbWUgXSB9XHJcblx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRWYWxbIGRhdGEubmFtZSBdID0gbmV3VmFsO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Li4uZmllbGRzTWFwLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFsgZmllbGQgXTogY3VycmVudFZhbCxcclxuXHRcdFx0XHRcdFx0XHRcdFx0fSwgJ2ZpZWxkc19tYXAnICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9IH1cclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8L0F2YWlsYWJsZUZpZWxkV3JhcHBlcj4gKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApIH1cclxuXHQ8L1JlYWN0LkZyYWdtZW50PjtcclxufVxyXG5cclxuZnVuY3Rpb24gTWFwRmllbGQoIHtcclxuXHRcdFx0XHRcdCAgIGRhdGEsXHJcblx0XHRcdFx0XHQgICB2YWx1ZSxcclxuXHRcdFx0XHRcdCAgIGluZGV4LFxyXG5cdFx0XHRcdFx0ICAgY3VycmVudFN0YXRlLFxyXG5cdFx0XHRcdFx0ICAgb25DaGFuZ2VWYWx1ZSxcclxuXHRcdFx0XHRcdCAgIGlzQ3VycmVudEZpZWxkVmlzaWJsZSxcclxuXHRcdFx0XHRcdCAgIHBvc2l0aW9uID0gJ2dlbmVyYWwnLFxyXG5cdFx0XHRcdCAgIH0gKSB7XHJcblxyXG5cdHN3aXRjaCAoIGRhdGEudHlwZSApIHtcclxuXHRcdGNhc2UgJ3RleHQnOlxyXG5cdFx0XHRyZXR1cm4gKCBpc0N1cnJlbnRGaWVsZFZpc2libGUoIGN1cnJlbnRTdGF0ZSwgZGF0YSApICYmXHJcblx0XHRcdFx0PGRpdlxyXG5cdFx0XHRcdFx0a2V5PXsgZGF0YS5uYW1lICsgaW5kZXggfVxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ2pldC1mb3JtLXByZXNldF9fcm93JyB9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0PFRleHRDb250cm9sXHJcblx0XHRcdFx0XHRcdGtleT17ICdjb250cm9sXycgKyBkYXRhLm5hbWUgKyBpbmRleCB9XHJcblx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPXsgZGF0YS5sYWJlbCB9XHJcblx0XHRcdFx0XHRcdHZhbHVlPXsgdmFsdWUgfVxyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdFx0b25DaGFuZ2VWYWx1ZSggbmV3VmFsLCAnY3VycmVudF9maWVsZF8nICsgZGF0YS5uYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQpO1xyXG5cdFx0Y2FzZSAnc2VsZWN0JzpcclxuXHRcdFx0cmV0dXJuICggaXNDdXJyZW50RmllbGRWaXNpYmxlKCBjdXJyZW50U3RhdGUsIGRhdGEgKSAmJlxyXG5cdFx0XHRcdDxkaXZcclxuXHRcdFx0XHRcdGtleT17IGRhdGEubmFtZSArIGluZGV4IH1cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT17ICdqZXQtZm9ybS1wcmVzZXRfX3JvdycgfVxyXG5cdFx0XHRcdD5cclxuXHRcdFx0XHRcdDxTZWxlY3RDb250cm9sXHJcblx0XHRcdFx0XHRcdGtleT17ICdjb250cm9sXycgKyBkYXRhLm5hbWUgKyBpbmRleCB9XHJcblx0XHRcdFx0XHRcdGxhYmVsUG9zaXRpb249XCJzaWRlXCJcclxuXHRcdFx0XHRcdFx0b3B0aW9ucz17IGRhdGEub3B0aW9ucyB9XHJcblx0XHRcdFx0XHRcdGxhYmVsPXsgZGF0YS5sYWJlbCB9XHJcblx0XHRcdFx0XHRcdHZhbHVlPXsgdmFsdWUgfVxyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdFx0b25DaGFuZ2VWYWx1ZSggbmV3VmFsLCAnY3VycmVudF9maWVsZF8nICsgZGF0YS5uYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQpO1xyXG5cdFx0Y2FzZSAnY3VzdG9tX3NlbGVjdCc6XHJcblx0XHRcdHJldHVybiAoIGlzQ3VycmVudEZpZWxkVmlzaWJsZSggY3VycmVudFN0YXRlLCBkYXRhICkgJiZcclxuXHRcdFx0XHQ8ZGl2XHJcblx0XHRcdFx0XHRrZXk9eyBkYXRhLm5hbWUgKyBpbmRleCB9XHJcblx0XHRcdFx0XHRjbGFzc05hbWU9eyAnamV0LWZvcm0tcHJlc2V0X19yb3cnIH1cclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHQ8Q3VzdG9tU2VsZWN0Q29udHJvbFxyXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9J2pldC1jdXN0b20tc2VsZWN0LWNvbnRyb2wnXHJcblx0XHRcdFx0XHRcdGxhYmVsPXsgZGF0YS5sYWJlbCB9XHJcblx0XHRcdFx0XHRcdG9wdGlvbnM9eyBkYXRhLm9wdGlvbnMgfVxyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17ICggeyBzZWxlY3RlZEl0ZW0gfSApID0+IHtcclxuXHRcdFx0XHRcdFx0XHR2YWx1ZSA9IHNlbGVjdGVkSXRlbS5rZXk7XHJcblx0XHRcdFx0XHRcdFx0b25DaGFuZ2VWYWx1ZSggdmFsdWUsICdjdXJyZW50X2ZpZWxkXycgKyBkYXRhLm5hbWUgKVxyXG5cdFx0XHRcdFx0XHR9IH1cclxuXHRcdFx0XHRcdFx0dmFsdWU9eyBkYXRhLm9wdGlvbnMuZmluZCggb3B0aW9uID0+IG9wdGlvbi5rZXkgPT09IHZhbHVlICkgfVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHQ8L2Rpdj4gKTtcclxuXHRcdGNhc2UgJ2dyb3VwZWRfc2VsZWN0JzpcclxuXHRcdFx0cmV0dXJuICggaXNDdXJyZW50RmllbGRWaXNpYmxlKCBjdXJyZW50U3RhdGUsIGRhdGEgKSAmJlxyXG5cdFx0XHRcdDxkaXZcclxuXHRcdFx0XHRcdGtleT17IGRhdGEubmFtZSArIGluZGV4IH1cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT17ICdqZXQtZm9ybS1wcmVzZXRfX3JvdycgfVxyXG5cdFx0XHRcdD5cclxuXHRcdFx0XHRcdDxHcm91cGVkU2VsZWN0Q29udHJvbFxyXG5cdFx0XHRcdFx0XHRvcHRpb25zPXsgZGF0YS5vcHRpb25zIH1cclxuXHRcdFx0XHRcdFx0bGFiZWw9eyBkYXRhLmxhYmVsIH1cclxuXHRcdFx0XHRcdFx0bGFiZWxQb3NpdGlvbj1cInNpZGVcIlxyXG5cdFx0XHRcdFx0XHR2YWx1ZT17IHZhbHVlIH1cclxuXHRcdFx0XHRcdFx0b25DaGFuZ2U9eyBuZXdWYWwgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlVmFsdWUoIG5ld1ZhbCwgJ2N1cnJlbnRfZmllbGRfJyArIGRhdGEubmFtZSApXHJcblx0XHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHQ8L2Rpdj4gKTtcclxuXHR9XHJcblx0cmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCB7XHJcblx0R2xvYmFsRmllbGQsXHJcblx0QXZhaWxhYmxlTWFwRmllbGQsXHJcblx0TWFwRmllbGQsXHJcbn07IiwiaW1wb3J0IHdpdGhQcmVzZXQgZnJvbSBcIi4vcHJlc2V0LWVkaXRvclwiO1xyXG5pbXBvcnQge1xyXG5cdEdsb2JhbEZpZWxkLFxyXG5cdE1hcEZpZWxkXHJcbn0gZnJvbSBcIi4vcHJlc2V0LXJlbmRlclwiO1xyXG5cclxuY29uc3Qge1xyXG5cdHVzZVN0YXRlLFxyXG5cdHVzZUVmZmVjdFxyXG59ID0gd3AuZWxlbWVudDtcclxuXHJcbmZ1bmN0aW9uIER5bmFtaWNQcmVzZXQoIHtcclxuXHRcdFx0XHRcdFx0XHR2YWx1ZSxcclxuXHRcdFx0XHRcdFx0XHRpc1NhdmVBY3Rpb24sXHJcblx0XHRcdFx0XHRcdFx0b25TYXZlUHJlc2V0LFxyXG5cdFx0XHRcdFx0XHRcdG9uVW5Nb3VudCxcclxuXHRcdFx0XHRcdFx0XHRwYXJzZVZhbHVlLFxyXG5cdFx0XHRcdFx0XHRcdGV4Y2x1ZGVPcHRpb25zLFxyXG5cdFx0XHRcdFx0XHRcdGlzQ3VycmVudEZpZWxkVmlzaWJsZSxcclxuXHRcdFx0XHRcdFx0XHRpc1Zpc2libGUsXHJcblx0XHRcdFx0XHRcdH0gKSB7XHJcblxyXG5cdGNvbnN0IHBvc2l0aW9uID0gJ2R5bmFtaWMnO1xyXG5cdGNvbnN0IFsgc3RhdGVWYWx1ZSwgc2V0VmFsdWUgXSA9IHVzZVN0YXRlKCAoKSA9PiBwYXJzZVZhbHVlKCB2YWx1ZSApICk7XHJcblxyXG5cdGNvbnN0IG9uQ2hhbmdlVmFsdWUgPSAoIG5ld1ZhbHVlLCBuYW1lICkgPT4ge1xyXG5cdFx0c2V0VmFsdWUoIHByZXYgPT4gKCB7IC4uLnByZXYsIFsgbmFtZSBdOiBuZXdWYWx1ZSB9ICkgKTtcclxuXHR9XHJcblxyXG5cdHVzZUVmZmVjdCggKCkgPT4ge1xyXG5cdFx0aWYgKCB0cnVlID09PSBpc1NhdmVBY3Rpb24gKSB7XHJcblx0XHRcdGlmICggb25TYXZlUHJlc2V0ICkge1xyXG5cdFx0XHRcdG9uU2F2ZVByZXNldCggSlNPTi5zdHJpbmdpZnkoIHN0YXRlVmFsdWUgKSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdG9uVW5Nb3VudCgpO1xyXG5cclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKCBmYWxzZSA9PT0gaXNTYXZlQWN0aW9uICkge1xyXG5cdFx0XHRvblVuTW91bnQoKTtcclxuXHRcdH1cclxuXHR9LCBbIGlzU2F2ZUFjdGlvbiBdICk7XHJcblxyXG5cdHJldHVybiA8PlxyXG5cdFx0eyB3aW5kb3cuSmV0Rm9ybUVkaXRvckRhdGEucHJlc2V0Q29uZmlnLmdsb2JhbF9maWVsZHMubWFwKCAoIGRhdGEsIGluZGV4ICkgPT4gPEdsb2JhbEZpZWxkXHJcblx0XHRcdGtleT17IGBjdXJyZW50X2ZpZWxkXyR7IGRhdGEubmFtZSB9XyR7IGluZGV4IH1gIH1cclxuXHRcdFx0dmFsdWU9eyBzdGF0ZVZhbHVlIH1cclxuXHRcdFx0aW5kZXg9eyBpbmRleCB9XHJcblx0XHRcdGRhdGE9eyBkYXRhIH1cclxuXHRcdFx0ZXhjbHVkZU9wdGlvbnM9eyBleGNsdWRlT3B0aW9ucyB9XHJcblx0XHRcdG9uQ2hhbmdlVmFsdWU9eyBvbkNoYW5nZVZhbHVlIH1cclxuXHRcdFx0aXNWaXNpYmxlPXsgaXNWaXNpYmxlIH1cclxuXHRcdFx0cG9zaXRpb249eyBwb3NpdGlvbiB9XHJcblx0XHQvPiApIH1cclxuXHJcblx0XHR7IHdpbmRvdy5KZXRGb3JtRWRpdG9yRGF0YS5wcmVzZXRDb25maWcubWFwX2ZpZWxkcy5tYXAoICggZGF0YSwgaW5kZXggKSA9PiA8TWFwRmllbGRcclxuXHRcdFx0a2V5PXsgYGN1cnJlbnRfZmllbGRfJHsgZGF0YS5uYW1lIH1fJHsgaW5kZXggfWAgfVxyXG5cdFx0XHRjdXJyZW50U3RhdGU9eyBzdGF0ZVZhbHVlIH1cclxuXHRcdFx0dmFsdWU9eyBzdGF0ZVZhbHVlWyAnY3VycmVudF9maWVsZF8nICsgZGF0YS5uYW1lIF0gfVxyXG5cdFx0XHRpbmRleD17IGluZGV4IH1cclxuXHRcdFx0ZGF0YT17IGRhdGEgfVxyXG5cdFx0XHRvbkNoYW5nZVZhbHVlPXsgb25DaGFuZ2VWYWx1ZSB9XHJcblx0XHRcdGlzQ3VycmVudEZpZWxkVmlzaWJsZT17IGlzQ3VycmVudEZpZWxkVmlzaWJsZSB9XHJcblx0XHRcdHBvc2l0aW9uPXsgcG9zaXRpb24gfVxyXG5cdFx0Lz4gKSB9XHJcblx0PC8+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3aXRoUHJlc2V0KCBEeW5hbWljUHJlc2V0ICk7IiwiXHJcbi8qKlxyXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmNvbnN0IHtcclxuXHRTZWxlY3RDb250cm9sLFxyXG5cdFRleHRDb250cm9sXHJcbn0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuXHJcbmNsYXNzIEpldEZpZWxkc01hcENvbnRyb2wgZXh0ZW5kcyB3cC5lbGVtZW50LkNvbXBvbmVudCB7XHJcblxyXG5cdGNvbnN0cnVjdG9yKCBwcm9wcyApIHtcclxuXHRcdHN1cGVyKCBwcm9wcyApO1xyXG5cclxuXHRcdHRoaXMuZmllbGRUeXBlcyA9IHRoaXMucHJvcHMuZmllbGRUeXBlcztcclxuXHRcdHRoaXMudGF4b25vbWllc0xpc3QgPSB0aGlzLnByb3BzLnRheG9ub21pZXNMaXN0O1xyXG5cdFx0dGhpcy5jbGFzc05hbWUgPSB0aGlzLnByb3BzLmNsYXNzTmFtZTtcclxuXHRcdHRoaXMubWV0YVByb3AgPSB0aGlzLnByb3BzLm1ldGFQcm9wID8gdGhpcy5wcm9wcy5tZXRhUHJvcCA6ICdwb3N0X21ldGEnO1xyXG5cdFx0dGhpcy50ZXJtc1Byb3AgPSB0aGlzLnByb3BzLnRlcm1zUHJvcCA/IHRoaXMucHJvcHMudGVybXNQcm9wIDogJ3Bvc3RfdGVybXMnO1xyXG5cdFx0dGhpcy5pbmRleCA9IHRoaXMucHJvcHMuaW5kZXg7XHJcblxyXG5cdFx0dGhpcy5pbml0KCk7XHJcblx0XHR0aGlzLmJpbmRGdW5jdGlvbnMoKTtcclxuXHJcblx0XHR0aGlzLnN0YXRlID0ge1xyXG5cdFx0XHR0eXBlOiB0aGlzLmdldEZpZWxkVHlwZSggdGhpcy5wcm9wcy5maWVsZFZhbHVlICksXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0YmluZEZ1bmN0aW9ucygpIHtcclxuXHRcdHRoaXMub25DaGFuZ2VUeXBlID0gdGhpcy5vbkNoYW5nZVR5cGUuYmluZCggdGhpcyApO1xyXG5cdFx0dGhpcy5vbkNoYW5nZVZhbHVlID0gdGhpcy5vbkNoYW5nZVZhbHVlLmJpbmQoIHRoaXMgKTtcclxuXHR9XHJcblxyXG5cclxuXHRpbml0KCkge1xyXG5cdFx0dGhpcy5pZCA9IGBpbnNwZWN0b3Itc2VsZWN0LWNvbnRyb2wtJHsgdGhpcy5pbmRleCB9YDtcclxuXHRcdHRoaXMucHJlcGFyZWRUYXhlcyA9IFtdO1xyXG5cdFx0dGhpcy50YXhQcmVmaXggPSAnamV0X3RheF9fJztcclxuXHJcblx0XHRpZiAoICEgdGhpcy50YXhvbm9taWVzTGlzdCApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMudGF4b25vbWllc0xpc3QubGVuZ3RoOyBpICsrICkge1xyXG5cdFx0XHR0aGlzLnByZXBhcmVkVGF4ZXMucHVzaCgge1xyXG5cdFx0XHRcdHZhbHVlOiB0aGlzLnRheFByZWZpeCArIHRoaXMudGF4b25vbWllc0xpc3RbIGkgXS52YWx1ZSxcclxuXHRcdFx0XHRsYWJlbDogdGhpcy50YXhvbm9taWVzTGlzdFsgaSBdLmxhYmVsLFxyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRnZXRGaWVsZE5hbWUoIHZhbHVlICkge1xyXG5cclxuXHRcdGlmICggISB2YWx1ZSApIHtcclxuXHRcdFx0cmV0dXJuICcnO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNvbnN0IGZpZWxkVHlwZSA9IHRoaXMuZ2V0RmllbGRUeXBlKCB2YWx1ZSApO1xyXG5cclxuXHRcdGlmICggdGhpcy50ZXJtc1Byb3AgPT09IGZpZWxkVHlwZSB8fCB0aGlzLm1ldGFQcm9wID09PSBmaWVsZFR5cGUgKSB7XHJcblx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRyZXR1cm4gJyc7XHJcblx0XHR9XHJcblxyXG5cdH07XHJcblxyXG5cdGlzVGVybU9yTWV0YSggdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gKCB0aGlzLnRlcm1zUHJvcCA9PT0gdmFsdWUgfHwgdGhpcy5tZXRhUHJvcCA9PT0gdmFsdWUgKTtcclxuXHR9XHJcblxyXG5cclxuXHRnZXRGaWVsZFR5cGUoIHZhbHVlICkge1xyXG5cclxuXHRcdGlmICggISB2YWx1ZSApIHtcclxuXHRcdFx0cmV0dXJuICcnO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMuZmllbGRUeXBlcy5sZW5ndGg7IGkgKysgKSB7XHJcblx0XHRcdGlmICggdmFsdWUgPT09IHRoaXMuZmllbGRUeXBlc1sgaSBdLnZhbHVlICkge1xyXG5cdFx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggdmFsdWUuaW5jbHVkZXMoIHRoaXMudGF4UHJlZml4ICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLnRlcm1zUHJvcDtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5tZXRhUHJvcDtcclxuXHRcdH1cclxuXHJcblx0fTtcclxuXHJcblxyXG5cdG9uQ2hhbmdlVmFsdWUoIG5ld1ZhbHVlICkge1xyXG5cdFx0dGhpcy5wcm9wcy5vbkNoYW5nZSgge1xyXG5cdFx0XHQuLi50aGlzLnByb3BzLmZpZWxkc01hcCxcclxuXHRcdFx0WyB0aGlzLnByb3BzLmZpZWxkTmFtZSBdOiBuZXdWYWx1ZVxyXG5cdFx0fSApO1xyXG5cdH07XHJcblxyXG5cclxuXHRvbkNoYW5nZVR5cGUoIG5ld1ZhbHVlICkge1xyXG5cdFx0bGV0IHZhbCA9IHRoaXMuZ2V0RmllbGRUeXBlKCBuZXdWYWx1ZSApO1xyXG5cclxuXHRcdHRoaXMuc2V0U3RhdGUoIHtcclxuXHRcdFx0dHlwZTogdmFsXHJcblx0XHR9ICk7XHJcblxyXG5cdFx0aWYgKCB0aGlzLmlzVGVybU9yTWV0YSggdmFsICkgKSB7XHJcblx0XHRcdHZhbCA9ICcnO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMub25DaGFuZ2VWYWx1ZSggdmFsICk7XHJcblx0fVxyXG5cclxuXHJcblx0Ly8gRGlzYWJsZSByZWFzb246IEEgc2VsZWN0IHdpdGggYW4gb25jaGFuZ2UgdGhyb3dzIGEgd2FybmluZ1xyXG5cclxuXHQvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9uby1vbmNoYW5nZSAqL1xyXG5cdHJlbmRlcigpIHtcclxuXHRcdHJldHVybiA8ZGl2XHJcblx0XHRcdGNsYXNzTmFtZT1cImpldC1maWVsZHMtbWFwX19yb3dcIlxyXG5cdFx0PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImpldC1wb3N0LWZpZWxkLWNvbnRyb2xcIj5cclxuXHRcdFx0XHQ8U2VsZWN0Q29udHJvbFxyXG5cdFx0XHRcdFx0a2V5PXsgJ2ZpZWxkX3R5cGVfJyArIHRoaXMucHJvcHMuZmllbGROYW1lICsgdGhpcy5pbmRleCB9XHJcblx0XHRcdFx0XHRsYWJlbD17IHRoaXMucHJvcHMuZmllbGROYW1lIH1cclxuXHRcdFx0XHRcdGxhYmVsUG9zaXRpb249XCJzaWRlXCJcclxuXHRcdFx0XHRcdHZhbHVlPXsgdGhpcy5zdGF0ZS50eXBlIH1cclxuXHRcdFx0XHRcdG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZVR5cGUgfVxyXG5cdFx0XHRcdFx0b3B0aW9ucz17IHRoaXMuZmllbGRUeXBlcyB9XHJcblx0XHRcdFx0XHRzdHlsZT17IHtcclxuXHRcdFx0XHRcdFx0d2lkdGg6ICcxNjBweCdcclxuXHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdC8+XHJcblx0XHRcdFx0eyAoIHRoaXMubWV0YVByb3AgPT09IHRoaXMuc3RhdGUudHlwZSApICYmIDxUZXh0Q29udHJvbFxyXG5cdFx0XHRcdFx0a2V5PXsgJ2ZpZWxkX25hbWVfJyArIHRoaXMucHJvcHMuZmllbGROYW1lICsgdGhpcy5pbmRleCB9XHJcblx0XHRcdFx0XHR2YWx1ZT17IHRoaXMucHJvcHMuZmllbGRWYWx1ZSB9XHJcblx0XHRcdFx0XHRvbkNoYW5nZT17IHRoaXMub25DaGFuZ2VWYWx1ZSB9XHJcblx0XHRcdFx0XHRzdHlsZT17IHsgd2lkdGg6ICcyMDBweCcgfSB9XHJcblx0XHRcdFx0Lz4gfVxyXG5cdFx0XHRcdHsgKCB0aGlzLnRlcm1zUHJvcCA9PT0gdGhpcy5zdGF0ZS50eXBlICkgJiYgPFNlbGVjdENvbnRyb2xcclxuXHRcdFx0XHRcdGNsYXNzTmFtZT0namV0LWNvbnRyb2wtd2l0aG91dC1sYWJlbCdcclxuXHRcdFx0XHRcdGtleT17ICdmaWVsZF90YXhfJyArIHRoaXMucHJvcHMuZmllbGROYW1lICsgdGhpcy5pbmRleCB9XHJcblx0XHRcdFx0XHR2YWx1ZT17IHRoaXMucHJvcHMuZmllbGRWYWx1ZSB9XHJcblx0XHRcdFx0XHRvbkNoYW5nZT17IHRoaXMub25DaGFuZ2VWYWx1ZSB9XHJcblx0XHRcdFx0XHRvcHRpb25zPXsgdGhpcy5wcmVwYXJlZFRheGVzIH1cclxuXHRcdFx0XHRcdHN0eWxlPXsgeyB3aWR0aDogJzIwMHB4JyB9IH1cclxuXHRcdFx0XHQvPiB9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+O1xyXG5cdH1cclxuXHJcblx0LyogZXNsaW50LWVuYWJsZSBqc3gtYTExeS9uby1vbmNoYW5nZSAqL1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBKZXRGaWVsZHNNYXBDb250cm9sOyIsImltcG9ydCBBY3Rpb25Nb2RhbCBmcm9tIFwiLi4vYWN0aW9uLW1vZGFsXCI7XHJcblxyXG5jb25zdCB7XHJcblx0XHQgIFBhdGgsXHJcblx0XHQgIFNWRyxcclxuXHRcdCAgQmFzZUNvbnRyb2wsXHJcblx0ICB9ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmNvbnN0IHtcclxuXHR1c2VTdGF0ZSxcclxufSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5mdW5jdGlvbiBGaWVsZFdpdGhQcmVzZXQoIHtcclxuXHRcdFx0XHRcdFx0XHQgIGNoaWxkcmVuID0gbnVsbCxcclxuXHRcdFx0XHRcdFx0XHQgIE1vZGFsRWRpdG9yLFxyXG5cdFx0XHRcdFx0XHRcdCAgdHJpZ2dlckNsYXNzZXMgPSBbXSxcclxuXHRcdFx0XHRcdFx0XHQgIGJhc2VDb250cm9sUHJvcHMgPSB7fSxcclxuXHRcdFx0XHRcdFx0ICB9ICkge1xyXG5cclxuXHRjb25zdCBbIG1vZGFsU3RhdGUsIHNldE1vZGFsU3RhdGUgXSA9IHVzZVN0YXRlKCBmYWxzZSApO1xyXG5cclxuXHRjb25zdCBjaGFuZ2VNb2RhbFN0YXRlID0gKCkgPT4ge1xyXG5cdFx0c2V0TW9kYWxTdGF0ZSggcHJldiA9PiAhIHByZXYgKTtcclxuXHR9O1xyXG5cdGNvbnN0IGNsYXNzTmFtZXMgPSBbICdqZXQtZm9ybS1keW5hbWljLXByZXNldF9fdHJpZ2dlcicsIC4uLnRyaWdnZXJDbGFzc2VzIF0uam9pbiggJyAnICk7XHJcblxyXG5cdHJldHVybiA8PlxyXG5cdFx0PEJhc2VDb250cm9sXHJcblx0XHRcdGNsYXNzTmFtZT1cImpldC1mb3JtLWR5bmFtaWMtcHJlc2V0XCJcclxuXHRcdFx0eyAuLi5iYXNlQ29udHJvbFByb3BzIH1cclxuXHRcdD5cclxuXHRcdFx0eyBjaGlsZHJlbiB9XHJcblx0XHRcdDxkaXZcclxuXHRcdFx0XHRjbGFzc05hbWU9eyBjbGFzc05hbWVzIH1cclxuXHRcdFx0XHRvbkNsaWNrPXsgY2hhbmdlTW9kYWxTdGF0ZSB9XHJcblx0XHRcdD48U1ZHIHZpZXdCb3g9XCIwIDAgNTQgNjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48UGF0aFxyXG5cdFx0XHRcdGQ9XCJNNDIuNjM5NiAyNi40MzQ3QzM3Ljg2ODIgMjcuMzQzNiAzMi41NjY2IDI4LjAyNTIgMjcuMTg5NCAyOC4wMjUyQzIxLjgxMjEgMjguMDI1MiAxNi40MzQ4IDI3LjM0MzYgMTEuNzM5MSAyNi40MzQ3QzYuOTY3NzQgMjUuNDUwMiAzLjE4MDkzIDIzLjg1OTcgMC4zNzg2OCAyMS45NjYzTDAuMzc4NjggMjguMDI1MkMwLjM3ODY4IDI5LjUzOTkgMS41OTA0NiAzMS4xMzA0IDMuNzg2ODIgMzIuNDE3OUM1Ljk4MzE3IDMzLjcwNTQgOS40NjcwNCAzNC45MTcyIDEzLjYzMjUgMzUuNTk4OEMxNy43OTggMzYuMjgwNSAyMi4xMTUgMzYuODEwNiAyNy4xODk0IDM2LjgxMDZDMzIuMjYzNyAzNi44MTA2IDM2LjY1NjQgMzYuNTA3NyA0MC43NDYyIDM1LjU5ODhDNDQuODM1OSAzNC42OSA0OC4zMTk4IDMzLjcwNTQgNTAuNTE2MiAzMi40MTc5QzUyLjcxMjUgMzEuMTMwNCA1NCAyOS41Mzk5IDU0IDI4LjAyNTJMNTQgMjEuOTY2M0M1MS4xMjIgMjMuODU5NyA0Ny4zMzUyIDI1LjQ1MDIgNDIuNjM5NiAyNi40MzQ3Wk00Mi42Mzk2IDUzLjU0ODRDMzcuODY4MiA1NC41MzI5IDMyLjU2NjYgNTUuMTM4OCAyNy4xODk0IDU1LjEzODhDMjEuODEyMSA1NS4xMzg4IDE2LjQzNDggNTQuNTMyOSAxMS43MzkxIDUzLjU0ODRDNy4wNDM0OCA1Mi41NjM4IDMuMTgwOTMgNTEuMDQ5MSAwLjM3ODY4MiA0OS4xNTU2TDAuMzc4NjgyIDU1LjEzODhDMC4zNzg2ODMgNTYuNzI5MyAxLjU5MDQ2IDU4LjMxOTcgMy43ODY4MiA1OS41MzE1QzYuMzYxODYgNjAuODE5IDkuNDY3MDUgNjIuMTA2NiAxMy42MzI1IDYyLjcxMjVDMTcuNzIyMyA2My42OTcgMjIuMTE1IDY0IDI3LjE4OTQgNjRDMzIuMjYzNyA2NCAzNi42NTY0IDYzLjY5NyA0MC43NDYyIDYyLjcxMjVDNDQuODM1OSA2MS44MDM2IDQ4LjMxOTggNjAuODE5IDUwLjUxNjIgNTkuNTMxNUM1Mi43MTI1IDU3Ljk0MTEgNTQgNTYuNzI5MyA1NCA1NC44MzU5TDU0IDQ4Ljg1MjdDNTEuMTIyIDUxLjA0OTEgNDcuMzM1MiA1Mi4yNjA4IDQyLjYzOTYgNTMuNTQ4NFpNNDIuNjM5NiAzOS45OTE1QzM3Ljg2ODIgNDAuOTAwNCAzMi41NjY2IDQxLjU4MiAyNy4xODk0IDQxLjU4MkMyMS44MTIxIDQxLjU4MiAxNi40MzQ4IDQwLjkwMDQgMTEuNzM5MSAzOS45OTE1QzYuOTY3NzQgMzkuMDA3IDMuMTgwOTMgMzcuNDkyMiAwLjM3ODY4MSAzNS41OTg4TDAuMzc4NjgxIDQxLjU4MkMwLjM3ODY4MSA0My4xNzI1IDEuNTkwNDYgNDQuNjg3MiAzLjc4NjgyIDQ1Ljk3NDdDNi4zNjE4NSA0Ny4yNjIyIDkuNDY3MDUgNDguNDc0IDEzLjYzMjUgNDkuMTU1NkMxNy43MjIzIDUwLjA2NDUgMjIuMTE1IDUwLjM2NzQgMjcuMTg5NCA1MC4zNjc0QzMyLjI2MzcgNTAuMzY3NCAzNi42NTY0IDUwLjA2NDUgNDAuNzQ2MiA0OS4xNTU2QzQ0LjgzNTkgNDguMTcxMSA0OC4zMTk4IDQ3LjI2MjIgNTAuNTE2MiA0NS45NzQ3QzUyLjcxMjUgNDQuMzg0MyA1NCA0My4xNzI1IDU0IDQxLjU4Mkw1NCAzNS41OTg4QzUxLjEyMiAzNy40OTIyIDQ3LjMzNTIgMzkuMDA3IDQyLjYzOTYgMzkuOTkxNVpNNDAuNDQzMiAyLjEyMzM3QzM2LjM1MzUgMS4xMzg3OSAzMS44ODUgMC44MzU4NDggMjYuODg2NCAwLjgzNTg0OUMyMS44ODc4IDAuODM1ODQ5IDE3LjQxOTQgMS4xMzg3OSAxMy4yNTM5IDIuMTIzMzdDOS4wODgzNiAzLjEwNzk0IDUuNjgwMjIgNC4wMTY3OCAzLjQ4Mzg3IDUuMzA0M0MxLjI4NzUxIDYuNTkxODEgLTMuNDc4MmUtMDYgOC4xMDY1NCAtMy4zMzkxNmUtMDYgOS42OTdMLTIuOTU1MTNlLTA2IDE0LjA4OTdDLTIuODE2MDllLTA2IDE1LjY4MDIgMS4yODc1MiAxNy4yNzA2IDMuNDgzODcgMTguNTU4MkM2LjA1ODkxIDE5Ljc2OTkgOS4xNjQxIDIxLjA1NzUgMTMuMjUzOSAyMS42NjMzQzE3LjM0MzYgMjIuMjY5MiAyMS44MTIxIDIyLjk1MDkgMjYuODg2NCAyMi45NTA5QzMxLjk2MDcgMjIuOTUwOSAzNi4zNTM1IDIyLjk1MDkgNDAuNDQzMiAyMi4zNDVDNDQuNTMzIDIxLjczOTEgNDguMDE2OSAyMC40NTE2IDUwLjIxMzIgMTkuMTY0QzUyLjcxMjUgMTcuNTczNiA1NCAxNS45ODMxIDU0IDE0LjM5MjdMNTQgOS45OTk5NUM1NCA4LjQwOTQ4IDUyLjcxMjUgNi44MTkwMiA1MC41MTYyIDUuNjA3MjRDNDguMzE5OCA0LjM5NTQ2IDQ0LjUzMyAyLjcyOTI2IDQwLjQ0MzIgMi4xMjMzN1pcIlxyXG5cdFx0XHRcdGZpbGw9XCIjN0U4OTkzXCIvPjwvU1ZHPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvQmFzZUNvbnRyb2w+XHJcblx0XHR7IG1vZGFsU3RhdGUgJiYgKFxyXG5cdFx0XHQ8QWN0aW9uTW9kYWxcclxuXHRcdFx0XHRvblJlcXVlc3RDbG9zZT17IGNoYW5nZU1vZGFsU3RhdGUgfVxyXG5cdFx0XHRcdGNsYXNzTmFtZXM9eyBbICd3aWR0aC02MCcgXSB9XHJcblx0XHRcdFx0dGl0bGU9eyAnRWRpdCBQcmVzZXQnIH1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdHsgbW9kYWxQcm9wcyA9PiA8TW9kYWxFZGl0b3JcclxuXHRcdFx0XHRcdHsgLi4ubW9kYWxQcm9wcyB9XHJcblx0XHRcdFx0Lz4gfVxyXG5cdFx0XHQ8L0FjdGlvbk1vZGFsPlxyXG5cdFx0KSB9XHJcblx0PC8+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGaWVsZFdpdGhQcmVzZXQ7IiwiY29uc3QgeyBfXyB9ID0gd3AuaTE4bjtcclxuXHJcbmNvbnN0IHsgYXBwbHlGaWx0ZXJzLCBhZGRGaWx0ZXIgfSA9IHdwLmhvb2tzO1xyXG5cclxuY29uc3QgeyBzZWxlY3QgfSA9IHdwLmRhdGE7XHJcblxyXG5jb25zdCB7IHN0b3JlOiBibG9ja3NTdG9yZSB9ID0gd3AuYmxvY2tzO1xyXG5cclxuY29uc3QgbG9vcEJsb2NrcyA9ICggY3VycmVudCApID0+IHtcclxuXHRjb25zdCB7XHRnZXRCbG9jayB9ID0gc2VsZWN0KCAnY29yZS9ibG9jay1lZGl0b3InICk7XHJcblxyXG5cdGNvbnN0IHsgaW5uZXJCbG9ja3MgfSA9IGN1cnJlbnQ7XHJcblxyXG5cdGN1cnJlbnQgPSB7XHJcblx0XHQuLi5jdXJyZW50LFxyXG5cdFx0Li4uZ2V0QmxvY2soIGN1cnJlbnQuY2xpZW50SWQgKSxcclxuXHR9XHJcblxyXG5cdGlmICggaW5uZXJCbG9ja3M/Lmxlbmd0aCApIHtcclxuXHRcdGN1cnJlbnQuaW5uZXJCbG9ja3MgPSBpbm5lckJsb2Nrcy5tYXAobG9vcEJsb2Nrcyk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gY3VycmVudDtcclxufTtcclxuXHJcbmNvbnN0IGdldEJsb2NrcyA9ICgpID0+IHtcclxuXHRjb25zdCB7XHJcblx0XHRnZXRCbG9ja3MsXHJcblx0XHRfX3Vuc3RhYmxlR2V0Q2xpZW50SWRzVHJlZTogZ2V0VHJlZSxcclxuXHR9ID0gc2VsZWN0KCAnY29yZS9ibG9jay1lZGl0b3InICk7XHJcblxyXG5cdGlmICggJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGdldFRyZWUgKSB7XHJcblx0XHRyZXR1cm4gZ2V0QmxvY2tzKCk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZ2V0VHJlZSgpLm1hcCggbG9vcEJsb2NrcyApO1xyXG59O1xyXG5cclxuY29uc3QgYmxvY2tzUmVjdXJzaXZlSXRlcmF0b3IgPSAoIGJsb2NrUGFyc2VyRnVuYyApID0+IHtcclxuXHRjb25zdCBibG9ja3NSZWN1cnNpdmVJdGVyYXRvciA9ICggYmxvY2tzICkgPT4ge1xyXG5cclxuXHRcdGJsb2NrcyA9IGJsb2NrcyB8fCBnZXRCbG9ja3MoKTtcclxuXHJcblx0XHRibG9ja3MubWFwKCBibG9jayA9PiB7XHJcblx0XHRcdGJsb2NrUGFyc2VyRnVuYyggYmxvY2sgKTtcclxuXHJcblx0XHRcdGlmICggYmxvY2suaW5uZXJCbG9ja3MubGVuZ3RoICkge1xyXG5cdFx0XHRcdGJsb2Nrc1JlY3Vyc2l2ZUl0ZXJhdG9yKCBibG9jay5pbm5lckJsb2NrcyApO1xyXG5cdFx0XHR9XHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0YmxvY2tzUmVjdXJzaXZlSXRlcmF0b3IoKTtcclxufTtcclxuXHJcbmNvbnN0IGdldEZvcm1GaWVsZHNCbG9ja3MgPSAoXHJcblx0ZXhjbHVkZSA9IFtdLFxyXG5cdHBsYWNlaG9sZGVyID0gZmFsc2UsXHJcblx0c3VwcHJlc3NGaWx0ZXIgPSBmYWxzZSxcclxuXHRjb250ZXh0ID0gJ2RlZmF1bHQnLFxyXG4pID0+IHtcclxuXHRsZXQgZm9ybUZpZWxkcyA9IFtdO1xyXG5cdGxldCBza2lwRmllbGRzID0gWyAnc3VibWl0JywgJ2Zvcm0tYnJlYWsnLCAnaGVhZGluZycsICdncm91cC1icmVhaycsICdjb25kaXRpb25hbCcsIC4uLmV4Y2x1ZGUgXTtcclxuXHJcblx0YmxvY2tzUmVjdXJzaXZlSXRlcmF0b3IoIGJsb2NrID0+IHtcclxuXHRcdGlmICggYmxvY2submFtZS5pbmNsdWRlcyggJ2pldC1mb3Jtcy8nIClcclxuXHRcdCAgICAgJiYgYmxvY2suYXR0cmlidXRlcy5uYW1lXHJcblx0XHQgICAgICYmICEgc2tpcEZpZWxkcy5maW5kKCBmaWVsZCA9PiBibG9jay5uYW1lLmluY2x1ZGVzKCBmaWVsZCApIClcclxuXHRcdCkge1xyXG5cclxuXHRcdFx0Lypjb25zdCBibG9ja1R5cGUgPSBzZWxlY3QoIGJsb2Nrc1N0b3JlICkuZ2V0QmxvY2tUeXBlKCBibG9jay5uYW1lICk7Ki9cclxuXHJcblx0XHRcdGZvcm1GaWVsZHMucHVzaCgge1xyXG5cdFx0XHRcdGJsb2NrTmFtZTogYmxvY2submFtZSxcclxuXHRcdFx0XHRuYW1lOiBibG9jay5hdHRyaWJ1dGVzLm5hbWUsXHJcblx0XHRcdFx0bGFiZWw6IGJsb2NrLmF0dHJpYnV0ZXMubGFiZWwgfHwgYmxvY2suYXR0cmlidXRlcy5uYW1lLFxyXG5cdFx0XHRcdHZhbHVlOiBibG9jay5hdHRyaWJ1dGVzLm5hbWUsXHJcblx0XHRcdFx0Ly9pY29uOiBibG9ja1R5cGUuaWNvbi5zcmMsXHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHR9ICk7XHJcblxyXG5cdGZvcm1GaWVsZHMgPSBwbGFjZWhvbGRlclxyXG5cdFx0PyBbIHsgdmFsdWU6ICcnLCBsYWJlbDogcGxhY2Vob2xkZXIgfSwgLi4uZm9ybUZpZWxkcyBdXHJcblx0XHQ6IGZvcm1GaWVsZHM7XHJcblxyXG5cdHJldHVybiBzdXBwcmVzc0ZpbHRlciA/IGZvcm1GaWVsZHMgOiBhcHBseUZpbHRlcnMoICdqZXQuZmIuZ2V0Rm9ybUZpZWxkc0Jsb2NrcycsIGZvcm1GaWVsZHMsIGNvbnRleHQgKTtcclxufTtcclxuXHJcbmNvbnN0IGdldEZpZWxkc1dpdGhvdXRDdXJyZW50ID0gKFxyXG5cdHBsYWNlaG9sZGVyID0gZmFsc2UsXHJcblx0c3VwcHJlc3NGaWx0ZXIgPSBmYWxzZSxcclxuXHRjb250ZXh0ID0gJ2RlZmF1bHQnLFxyXG4pID0+IHtcclxuXHJcblx0Y29uc3Qgc2tpcEZpZWxkcyA9IFsgJ3N1Ym1pdCcsICdmb3JtLWJyZWFrJywgJ2hlYWRpbmcnLCAnZ3JvdXAtYnJlYWsnLCAnY29uZGl0aW9uYWwnIF07XHJcblx0bGV0IGZvcm1GaWVsZHMgPSBbXTtcclxuXHJcblx0Y29uc3QgY3VycmVudCA9IHdwLmRhdGEuc2VsZWN0KCAnY29yZS9ibG9jay1lZGl0b3InICkuZ2V0U2VsZWN0ZWRCbG9jaygpO1xyXG5cclxuXHRpZiAoIG51bGwgPT09IGN1cnJlbnQgKSB7XHJcblx0XHRyZXR1cm4gW107XHJcblx0fVxyXG5cclxuXHRibG9ja3NSZWN1cnNpdmVJdGVyYXRvciggYmxvY2sgPT4ge1xyXG5cdFx0aWYgKCBibG9jay5uYW1lLmluY2x1ZGVzKCAnamV0LWZvcm1zLycgKVxyXG5cdFx0ICAgICAmJiBjdXJyZW50LmNsaWVudElkICE9PSBibG9jay5jbGllbnRJZFxyXG5cdFx0ICAgICAmJiAhIHNraXBGaWVsZHMuZmluZCggZmllbGQgPT4gYmxvY2submFtZS5pbmNsdWRlcyggZmllbGQgKSApXHJcblx0XHQpIHtcclxuXHRcdFx0Zm9ybUZpZWxkcy5wdXNoKCB7XHJcblx0XHRcdFx0YmxvY2tOYW1lOiBibG9jay5uYW1lLFxyXG5cdFx0XHRcdGxhYmVsOiBibG9jay5hdHRyaWJ1dGVzLmxhYmVsIHx8IGJsb2NrLmF0dHJpYnV0ZXMubmFtZSxcclxuXHRcdFx0XHR2YWx1ZTogYmxvY2suYXR0cmlidXRlcy5uYW1lLFxyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblx0fSApO1xyXG5cclxuXHRmb3JtRmllbGRzID0gcGxhY2Vob2xkZXJcclxuXHRcdD8gWyB7IHZhbHVlOiAnJywgbGFiZWw6IHBsYWNlaG9sZGVyIH0sIC4uLmZvcm1GaWVsZHMgXVxyXG5cdFx0OiBmb3JtRmllbGRzO1xyXG5cclxuXHRyZXR1cm4gc3VwcHJlc3NGaWx0ZXIgPyBmb3JtRmllbGRzIDogYXBwbHlGaWx0ZXJzKCAnamV0LmZiLmdldEZvcm1GaWVsZHNCbG9ja3MnLCBmb3JtRmllbGRzLCBjb250ZXh0ICk7XHJcbn07XHJcblxyXG5jb25zdCBnZXRBdmFpbGFibGVGaWVsZHMgPSAoIGV4Y2x1ZGUgPSBbXSwgY29udGV4dCA9ICdkZWZhdWx0JyApID0+IHtcclxuXHRsZXQgZmllbGRzID0gW107XHJcblx0Y29uc3QgYmxvY2tzID0gZ2V0Rm9ybUZpZWxkc0Jsb2NrcyggZXhjbHVkZSwgZmFsc2UsIGZhbHNlLCBjb250ZXh0ICk7XHJcblxyXG5cdGlmICggYmxvY2tzICkge1xyXG5cdFx0YmxvY2tzLmZvckVhY2goIGl0ZW0gPT4gZmllbGRzLnB1c2goIGl0ZW0ubmFtZSApICk7XHJcblx0fVxyXG5cdHJldHVybiBmaWVsZHM7XHJcbn07XHJcblxyXG5jb25zdCBnZXRBdmFpbGFibGVGaWVsZHNTdHJpbmcgPSAoIGJsb2NrTmFtZSApID0+IHtcclxuXHRjb25zdCBmaWVsZHMgPSBnZXRBdmFpbGFibGVGaWVsZHMoIFsgYmxvY2tOYW1lIF0gKTtcclxuXHJcblx0bGV0IGZpZWxkc1N0cmluZyA9IFtdO1xyXG5cdGZpZWxkcy5mb3JFYWNoKCBmdW5jdGlvbiAoIGl0ZW0gKSB7XHJcblx0XHRmaWVsZHNTdHJpbmcucHVzaCggJyVGSUVMRDo6JyArIGl0ZW0gKyAnJScgKTtcclxuXHR9ICk7XHJcblxyXG5cdHJldHVybiBfXyggJ0F2YWlsYWJsZSBmaWVsZHM6ICcsICdqZXQtZm9ybS1idWlsZGVyJyApICsgZmllbGRzU3RyaW5nLmpvaW4oICcsICcgKTtcclxufTtcclxuXHJcbmNvbnN0IGdldElubmVyQmxvY2tzID0gKCBjbGllbnRJZCApID0+IHtcclxuXHRjb25zdCBibG9jayA9IHdwLmRhdGEuc2VsZWN0KCAnY29yZS9ibG9jay1lZGl0b3InICkuZ2V0QmxvY2soIGNsaWVudElkICk7XHJcblx0cmV0dXJuIGJsb2NrID8gYmxvY2suaW5uZXJCbG9ja3MgOiBbXTtcclxufTtcclxuXHJcbmNvbnN0IGdldEZvcm1GaWVsZHNCeUJsb2NrID0gKCBibG9ja0V4Y2x1ZGUgKSA9PiB7XHJcblx0cmV0dXJuICgpID0+IGdldEZvcm1GaWVsZHNCbG9ja3MoIFsgYmxvY2tFeGNsdWRlLm5hbWUgXSApO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0QmxvY2tzQnlOYW1lID0gYmxvY2tOYW1lcyA9PiB7XHJcblx0Y29uc3QgYmxvY2tzID0gW107XHJcblxyXG5cdGJsb2Nrc1JlY3Vyc2l2ZUl0ZXJhdG9yKCBibG9jayA9PiB7XHJcblx0XHRpZiAoICEgYmxvY2tOYW1lcy5pbmNsdWRlcyggYmxvY2submFtZSApICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHRibG9ja3MucHVzaCggYmxvY2sgKTtcclxuXHR9ICk7XHJcblxyXG5cdHJldHVybiBibG9ja3M7XHJcbn07XHJcblxyXG5jb25zdCBhcHBlbmRGaWVsZCA9ICggY2FsbGJhY2ssIGZpZWxkTmFtZXMgPSBbXSApID0+IHtcclxuXHRhZGRGaWx0ZXIoICdqZXQuZmIucmVnaXN0ZXIuZmllbGRzJywgJ2pldC1mb3JtLWJ1aWxkZXInLCBibG9ja3MgPT4ge1xyXG5cdFx0cmV0dXJuIGJsb2Nrcy5tYXAoIGJsb2NrID0+IHtcclxuXHRcdFx0aWYgKCBmaWVsZE5hbWVzLmxlbmd0aCAmJiAhIGZpZWxkTmFtZXMuaW5jbHVkZXMoIGJsb2NrLm5hbWUgKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gYmxvY2s7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBjYWxsYmFjayggYmxvY2sgKTtcclxuXHRcdH0gKTtcclxuXHR9ICk7XHJcbn07XHJcblxyXG5leHBvcnQge1xyXG5cdGdldEZvcm1GaWVsZHNCeUJsb2NrLFxyXG5cdGdldElubmVyQmxvY2tzLFxyXG5cdGdldEF2YWlsYWJsZUZpZWxkc1N0cmluZyxcclxuXHRnZXRBdmFpbGFibGVGaWVsZHMsXHJcblx0Z2V0Rm9ybUZpZWxkc0Jsb2NrcyxcclxuXHRnZXRGaWVsZHNXaXRob3V0Q3VycmVudCxcclxuXHRnZXRCbG9ja3NCeU5hbWUsXHJcblx0YXBwZW5kRmllbGQsXHJcbn07XHJcblxyXG4iLCJpbXBvcnQgeyB1c2VTZWxlY3RQb3N0TWV0YSB9IGZyb20gJy4vaG9va3MtaGVscGVyJztcclxuXHJcbmNvbnN0IHsgdXNlU2VsZWN0IH0gPSB3cC5kYXRhO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZVJlcXVlc3RFdmVudHMgPSAoKSA9PiB7XHJcblx0Y29uc3QgY3VycmVudEFjdGlvbiA9IHVzZVNlbGVjdChcclxuXHRcdHNlbGVjdCA9PiBzZWxlY3QoICdqZXQtZm9ybXMvYWN0aW9ucycgKS5nZXRDdXJyZW50QWN0aW9uKCksXHJcblx0KTtcclxuXHJcblx0Y29uc3QgbGlzdCA9IFtcclxuXHRcdC4uLnVzZURlZmF1bHRFdmVudHMoIGN1cnJlbnRBY3Rpb24gKSxcclxuXHRcdC4uLnVzZUV2ZW50c0Zyb21HYXRld2F5cyggY3VycmVudEFjdGlvbiApLFxyXG5cdFx0Li4udXNlRXZlbnRzRnJvbUFjdGlvbnMoIGN1cnJlbnRBY3Rpb24gKSxcclxuXHRdO1xyXG5cclxuXHRyZXR1cm4gdXNlU2VsZWN0KFxyXG5cdFx0c2VsZWN0ID0+IHNlbGVjdCggJ2pldC1mb3Jtcy9ldmVudHMnICkuZmlsdGVyTGlzdCggY3VycmVudEFjdGlvbi50eXBlLCBsaXN0ICksXHJcblx0XHRbIGN1cnJlbnRBY3Rpb24uaWQgXSxcclxuXHQpO1xyXG59O1xyXG5cclxuY29uc3QgdXNlRGVmYXVsdEV2ZW50cyA9ICgpID0+IHtcclxuXHRjb25zdCBldmVudHNPYmplY3RzID0gdXNlU2VsZWN0KCBzZWxlY3QgPT4gc2VsZWN0KCAnamV0LWZvcm1zL2V2ZW50cycgKS5nZXRBbHdheXNUeXBlcygpLCBbXSApO1xyXG5cdGNvbnN0IGV2ZW50cyA9IFtdO1xyXG5cclxuXHRmb3IgKCBjb25zdCB7IHZhbHVlIH0gb2YgZXZlbnRzT2JqZWN0cyApIHtcclxuXHRcdGV2ZW50cy5wdXNoKCB2YWx1ZSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIFsgLi4ubmV3IFNldCggZXZlbnRzICkgXTtcclxuXHJcbn07XHJcblxyXG5jb25zdCB1c2VFdmVudHNGcm9tR2F0ZXdheXMgPSAoKSA9PiB7XHJcblx0Y29uc3QgZ2F0ZXdheXMgPSB1c2VTZWxlY3RQb3N0TWV0YSggJ19qZl9nYXRld2F5cycgKTtcclxuXHRjb25zdCB7IHNjZW5hcmlvID0gJ1BBWV9OT1cnIH0gPSBnYXRld2F5c1sgZ2F0ZXdheXM/LmdhdGV3YXkgXSA/PyB7fTtcclxuXHJcblx0cmV0dXJuIHVzZVNlbGVjdChcclxuXHRcdHNlbGVjdCA9PiB7XHJcblx0XHRcdGNvbnN0IGV2ZW50c09iamVjdHMgPSBzZWxlY3QoICdqZXQtZm9ybXMvZXZlbnRzJyApLmdldEdhdGV3YXlUeXBlcygpO1xyXG5cclxuXHRcdFx0Y29uc3QgZXZlbnRzID0gW107XHJcblxyXG5cdFx0XHRmb3IgKCBjb25zdCBldmVudCBvZiBldmVudHNPYmplY3RzICkge1xyXG5cdFx0XHRcdGNvbnN0IGNvcnJlY3RHYXRld2F5ID0gZXZlbnQuZ2F0ZXdheSA/IGV2ZW50LmdhdGV3YXkgPT09IGdhdGV3YXlzLmdhdGV3YXkgOiB0cnVlO1xyXG5cdFx0XHRcdGNvbnN0IGNvcnJlY3RTY2VuYXJpbyA9IGV2ZW50LnNjZW5hcmlvID8gZXZlbnQuc2NlbmFyaW8gPT09IHNjZW5hcmlvIDogdHJ1ZTtcclxuXHJcblx0XHRcdFx0aWYgKCBjb3JyZWN0R2F0ZXdheSAmJiBjb3JyZWN0U2NlbmFyaW8gKSB7XHJcblx0XHRcdFx0XHRldmVudHMucHVzaCggZXZlbnQudmFsdWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBbIC4uLm5ldyBTZXQoIGV2ZW50cyApIF07XHJcblx0XHR9LFxyXG5cdFx0WyBnYXRld2F5cz8uZ2F0ZXdheSBdLFxyXG5cdCk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRXZlbnRzRnJvbUFjdGlvbnMgPSAoIHsgaW5kZXggfSApID0+IHtcclxuXHRjb25zdCBhY3Rpb25zID0gdXNlU2VsZWN0UG9zdE1ldGEoICdfamZfYWN0aW9ucycgKTtcclxuXHJcblx0YWN0aW9ucy5zcGxpY2UoIGluZGV4LCAxICk7XHJcblxyXG5cdGNvbnN0IGV2ZW50cyA9IFtdO1xyXG5cclxuXHRmb3IgKCBjb25zdCBhY3Rpb24gb2YgYWN0aW9ucyApIHtcclxuXHRcdGNvbnN0IHtcclxuXHRcdFx0WyBhY3Rpb24udHlwZSBdOiBjdXJyZW50ID0ge30sXHJcblx0XHR9ID0gYWN0aW9uLnNldHRpbmdzO1xyXG5cclxuXHRcdGlmICggISBjdXJyZW50LnByb3ZpZGVFdmVudHM/Lmxlbmd0aCApIHtcclxuXHRcdFx0Y29udGludWU7XHJcblx0XHR9XHJcblxyXG5cdFx0ZXZlbnRzLnB1c2goIC4uLmN1cnJlbnQucHJvdmlkZUV2ZW50cyApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIFsgLi4ubmV3IFNldCggZXZlbnRzICkgXTtcclxufTsiLCJjb25zdCB7XHJcblx0dXNlQmxvY2tQcm9wcyxcclxufSA9IHdwLmJsb2NrRWRpdG9yO1xyXG5cclxuY29uc3QgeyB1c2VTZWxlY3QgfSA9IHdwLmRhdGE7XHJcblxyXG4vKipcclxuICogQHJldHVybnMge3tmdW5jdGlvbnMsIG9wZXJhdG9yc319XHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VCbG9ja0NvbmRpdGlvbnMoKSB7XHJcblx0Y29uc3QgYmxvY2tQcm9wcyA9IHVzZUJsb2NrUHJvcHMoKTtcclxuXHJcblx0Y29uc3QgWyBvcGVyYXRvcnMsIGZ1bmN0aW9ucyBdID0gdXNlU2VsZWN0KCBzZWxlY3QgPT4ge1xyXG5cdFx0cmV0dXJuIFtcclxuXHRcdFx0c2VsZWN0KCAnamV0LWZvcm1zL2Jsb2NrLWNvbmRpdGlvbnMnICkuZ2V0T3BlcmF0b3JzKCksXHJcblx0XHRcdHNlbGVjdCggJ2pldC1mb3Jtcy9ibG9jay1jb25kaXRpb25zJyApLmdldEZ1bmN0aW9ucygpLFxyXG5cdFx0XTtcclxuXHR9LCBbXSApO1xyXG5cclxuXHRpZiAoICdqZXQtZm9ybXMvY29uZGl0aW9uYWwtYmxvY2snICE9PSBibG9ja1Byb3BzWyAnZGF0YS10eXBlJyBdICkge1xyXG5cdFx0cmV0dXJuIHsgb3BlcmF0b3JzLCBmdW5jdGlvbnMgfTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGZpbHRlcmVkRnVuY3Rpb25zID0gdXNlU2VsZWN0KFxyXG5cdFx0c2VsZWN0ID0+IHNlbGVjdCggJ2pldC1mb3Jtcy9ibG9jay1jb25kaXRpb25zJyApLmdldEZpbHRlcmVkRnVuY3Rpb25zKCBibG9ja1Byb3BzICksXHJcblx0XHRbXSxcclxuXHQpO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0b3BlcmF0b3JzLFxyXG5cdFx0ZnVuY3Rpb25zOiBmaWx0ZXJlZEZ1bmN0aW9ucyxcclxuXHR9O1xyXG59XHJcblxyXG5leHBvcnQgeyB1c2VCbG9ja0NvbmRpdGlvbnMgfTsiLCJjb25zdCB7XHJcblx0dXNlQmxvY2tQcm9wcyxcclxufSA9IHdwLmJsb2NrRWRpdG9yO1xyXG5cclxuY29uc3Qge1xyXG5cdHVzZVNlbGVjdCxcclxuXHR1c2VEaXNwYXRjaCxcclxufSA9IHdwLmRhdGE7XHJcblxyXG5mdW5jdGlvbiB1c2VVbmlxS2V5KCkge1xyXG5cdGNvbnN0IGJsb2NrUHJvcHMgPSB1c2VCbG9ja1Byb3BzKCk7XHJcblxyXG5cdHJldHVybiBzbHVnID0+IChcclxuXHRcdHNsdWcgKyAnLScgKyBibG9ja1Byb3BzWyAnZGF0YS1ibG9jaycgXVxyXG5cdCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVzZUJsb2NrQXR0cmlidXRlcygpIHtcclxuXHRjb25zdCBbIGNsaWVudElkLCBhdHRyaWJ1dGVzIF0gPSB1c2VTZWxlY3QoIHNlbGVjdCA9PiB7XHJcblx0XHRjb25zdCBjbGllbnRJZCA9IHNlbGVjdCggJ2NvcmUvYmxvY2stZWRpdG9yJyApLmdldFNlbGVjdGVkQmxvY2tDbGllbnRJZCgpO1xyXG5cclxuXHRcdHJldHVybiBbIGNsaWVudElkLCBzZWxlY3QoICdjb3JlL2Jsb2NrLWVkaXRvcicgKS5nZXRCbG9ja0F0dHJpYnV0ZXMoIGNsaWVudElkICkgXTtcclxuXHR9ICk7XHJcblx0Y29uc3QgeyB1cGRhdGVCbG9jayB9ID0gdXNlRGlzcGF0Y2goICdjb3JlL2Jsb2NrLWVkaXRvcicsIFtdICk7XHJcblxyXG5cdGNvbnN0IHVwZGF0ZUF0dHJpYnV0ZXMgPSBwcm9wcyA9PiB7XHJcblx0XHRpZiAoICdvYmplY3QnID09PSB0eXBlb2YgcHJvcHMgKSB7XHJcblx0XHRcdHVwZGF0ZUJsb2NrKCBjbGllbnRJZCwgeyBhdHRyaWJ1dGVzOiBwcm9wcyB9ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0dXBkYXRlQmxvY2soIGNsaWVudElkLCB7XHJcblx0XHRcdGF0dHJpYnV0ZXM6IHByb3BzKCBhdHRyaWJ1dGVzICksXHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIFsgYXR0cmlidXRlcywgdXBkYXRlQXR0cmlidXRlcyBdO1xyXG59XHJcblxyXG5leHBvcnQgeyB1c2VVbmlxS2V5LCB1c2VCbG9ja0F0dHJpYnV0ZXMgfTsiLCJpbXBvcnQge1xyXG5cdGNsYXNzbmFtZXMsXHJcblx0Z2V0Q29udmVydGVkTmFtZSxcclxufSBmcm9tICcuLi8uLi9oZWxwZXJzL3Rvb2xzJztcclxuaW1wb3J0IHsgdXNlU2VsZWN0UG9zdE1ldGEgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2hvb2tzL2hvb2tzLWhlbHBlcic7XHJcblxyXG5jb25zdCB7XHJcblx0QmFzZUNvbnRyb2wsXHJcbn0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuY29uc3Qge1xyXG5cdHdpdGhTZWxlY3QsXHJcbn0gPSB3cC5kYXRhO1xyXG5cclxuXHJcblxyXG5jb25zdCB7XHJcblx0UmljaFRleHQsXHJcbn0gPSB3cC5ibG9ja0VkaXRvcjtcclxuXHJcbmNvbnN0IHsgX18gfSA9IHdwLmkxOG47XHJcblxyXG5mdW5jdGlvbiBSaWNoRGVzY3JpcHRpb24oIGNvbnRlbnQgKSB7XHJcblx0cmV0dXJuIDxzbWFsbCBzdHlsZT17IHtcclxuXHRcdHdoaXRlU3BhY2U6ICdub3dyYXAnLFxyXG5cdFx0cGFkZGluZzogJzAuMmVtIDAuOGVtIDAgMCcsXHJcblx0XHRjb2xvcjogJyM4ZThhOGEnLFxyXG5cdH0gfT5cclxuXHRcdHsgY29udGVudCB9XHJcblx0PC9zbWFsbD47XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEZpZWxkV3JhcHBlciggcHJvcHMgKSB7XHJcblxyXG5cdGNvbnN0IHtcclxuXHRcdGF0dHJpYnV0ZXMsXHJcblx0XHRlZGl0UHJvcHM6IHsgdW5pcUtleSwgYmxvY2tOYW1lID0gJycgfSxcclxuXHRcdGNoaWxkcmVuLFxyXG5cdFx0d3JhcENsYXNzZXMgPSBbXSxcclxuXHRcdHZhbHVlSWZFbXB0eUxhYmVsID0gJycsXHJcblx0XHRzZXRBdHRyaWJ1dGVzLFxyXG5cdFx0Y2hpbGRyZW5Qb3NpdGlvbiA9ICdiZXR3ZWVuJyxcclxuXHR9ID0gcHJvcHM7XHJcblxyXG5cdGNvbnN0IF9qZl9hcmdzID0gdXNlU2VsZWN0UG9zdE1ldGEoICdfamZfYXJncycgKTtcclxuXHJcblx0Y29uc3Qgc2V0RHluYW1pY05hbWUgPSAoKSA9PiB7XHJcblx0XHRpZiAoIDEgPCBhdHRyaWJ1dGVzLmxhYmVsLmxlbmd0aFxyXG5cdFx0ICAgICAmJiAoXHJcblx0XHRcdCAgICAgISBhdHRyaWJ1dGVzLm5hbWUgfHwgJ2ZpZWxkX25hbWUnID09PSBhdHRyaWJ1dGVzLm5hbWVcclxuXHRcdCAgICAgKVxyXG5cdFx0KSB7XHJcblx0XHRcdHNldEF0dHJpYnV0ZXMoIHsgbmFtZTogZ2V0Q29udmVydGVkTmFtZSggYXR0cmlidXRlcy5sYWJlbCApIH0gKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRmdW5jdGlvbiByZW5kZXJMYWJlbCgpIHtcclxuXHRcdHJldHVybiA8QmFzZUNvbnRyb2wuVmlzdWFsTGFiZWw+XHJcblx0XHRcdHsgUmljaERlc2NyaXB0aW9uKCBfXyggJ2lucHV0IGxhYmVsOicsICdqZXQtZm9ybS1idWlsZGVyJyApICkgfVxyXG5cdFx0XHQ8ZGl2IG9uQmx1cj17IHNldER5bmFtaWNOYW1lIH0gY2xhc3NOYW1lPSdqZXQtZm9ybS1idWlsZGVyX19sYWJlbCc+XHJcblx0XHRcdFx0PFJpY2hUZXh0XHJcblx0XHRcdFx0XHRrZXk9eyB1bmlxS2V5KCAncmljaC1sYWJlbCcgKSB9XHJcblx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nTGFiZWwuLi4nXHJcblx0XHRcdFx0XHRhbGxvd2VkRm9ybWF0cz17IFtdIH1cclxuXHRcdFx0XHRcdHZhbHVlPXsgYXR0cmlidXRlcy5sYWJlbCA/IGF0dHJpYnV0ZXMubGFiZWwgOiB2YWx1ZUlmRW1wdHlMYWJlbCB9XHJcblx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld0xhYmVsID0+IHNldEF0dHJpYnV0ZXMoIHsgbGFiZWw6IG5ld0xhYmVsIH0gKSB9XHJcblx0XHRcdFx0Lz5cclxuXHRcdFx0XHR7IGF0dHJpYnV0ZXMucmVxdWlyZWQgJiYgPHNwYW4gY2xhc3NOYW1lPXsgJ2pldC1mb3JtLWJ1aWxkZXJfX3JlcXVpcmVkJyB9PlxyXG5cdFx0XHRcdFx0eyBfamZfYXJncy5yZXF1aXJlZF9tYXJrID8gX2pmX2FyZ3MucmVxdWlyZWRfbWFyayA6ICcqJyB9XHJcblx0XHRcdFx0PC9zcGFuPiB9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9CYXNlQ29udHJvbC5WaXN1YWxMYWJlbD47XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiByZW5kZXJEZXNjcmlwdGlvbigpIHtcclxuXHRcdHJldHVybiA8ZGl2IGNsYXNzTmFtZT0namV0LWZvcm0tYnVpbGRlcl9fZGVzYy0td3JhcHBlcic+XHJcblx0XHRcdHsgUmljaERlc2NyaXB0aW9uKCBfXyggJ2lucHV0IGRlc2NyaXB0aW9uOicsICdqZXQtZm9ybS1idWlsZGVyJyApICkgfVxyXG5cdFx0XHQ8QmFzZUNvbnRyb2wga2V5PXsgJ2N1c3RvbV9oZWxwX2Rlc2NyaXB0aW9uJyB9IGNsYXNzTmFtZT17ICdqZXQtZm9ybS1idWlsZGVyX19kZXNjJyB9PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb21wb25lbnRzLWJhc2UtY29udHJvbF9faGVscCc+XHJcblx0XHRcdFx0XHQ8UmljaFRleHRcclxuXHRcdFx0XHRcdFx0a2V5PXsgdW5pcUtleSggJ3JpY2gtZGVzY3JpcHRpb24nICkgfVxyXG5cdFx0XHRcdFx0XHR0YWdOYW1lPSdzbWFsbCdcclxuXHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9J0Rlc2NyaXB0aW9uLi4uJ1xyXG5cdFx0XHRcdFx0XHRhbGxvd2VkRm9ybWF0cz17IFtdIH1cclxuXHRcdFx0XHRcdFx0dmFsdWU9eyBhdHRyaWJ1dGVzLmRlc2MgfVxyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17IGRlc2MgPT4gc2V0QXR0cmlidXRlcyggeyBkZXNjIH0gKSB9XHJcblx0XHRcdFx0XHRcdHN0eWxlPXsgeyBtYXJnaW5Ub3A6ICcwcHgnIH0gfVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9CYXNlQ29udHJvbD5cclxuXHRcdDwvZGl2PjtcclxuXHR9XHJcblxyXG5cdGlmICggJ3JvdycgPT09IF9qZl9hcmdzLmZpZWxkc19sYXlvdXQgKSB7XHJcblx0XHR3cmFwQ2xhc3Nlcy5wdXNoKCAnamV0LWZvcm0tYnVpbGRlci1yb3dfX2ZsZXgnICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PEJhc2VDb250cm9sXHJcblx0XHRcdGtleT17IHVuaXFLZXkoICdwbGFjZUhvbGRlcl9ibG9jaycgKSB9XHJcblx0XHRcdGNsYXNzTmFtZT17IGNsYXNzbmFtZXMoXHJcblx0XHRcdFx0J2pldC1mb3JtLWJ1aWxkZXJfX2ZpZWxkLXdyYXAnLFxyXG5cdFx0XHRcdCdqZXQtZm9ybS1idWlsZGVyLXJvdycsXHJcblx0XHRcdFx0d3JhcENsYXNzZXMsXHJcblx0XHRcdCkgfVxyXG5cdFx0PlxyXG5cdFx0XHR7ICdyb3cnICE9PSBfamZfYXJncy5maWVsZHNfbGF5b3V0ICYmIDw+XHJcblx0XHRcdFx0eyAndG9wJyA9PT0gY2hpbGRyZW5Qb3NpdGlvbiAmJiBjaGlsZHJlbiB9XHJcblx0XHRcdFx0eyByZW5kZXJMYWJlbCgpIH1cclxuXHRcdFx0XHR7ICdiZXR3ZWVuJyA9PT0gY2hpbGRyZW5Qb3NpdGlvbiAmJiBjaGlsZHJlbiB9XHJcblx0XHRcdFx0eyByZW5kZXJEZXNjcmlwdGlvbigpIH1cclxuXHRcdFx0XHR7ICdib3R0b20nID09PSBjaGlsZHJlblBvc2l0aW9uICYmIGNoaWxkcmVuIH1cclxuXHRcdFx0PC8+IH1cclxuXHRcdFx0eyAncm93JyA9PT0gX2pmX2FyZ3MuZmllbGRzX2xheW91dCAmJiA8PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdqZXQtZm9ybS1idWlsZGVyLXJvd19fZmxleC0tbGFiZWwnPlxyXG5cdFx0XHRcdFx0eyByZW5kZXJMYWJlbCgpIH1cclxuXHRcdFx0XHRcdHsgcmVuZGVyRGVzY3JpcHRpb24oKSB9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2pldC1mb3JtLWJ1aWxkZXItcm93X19mbGV4LS1jb250ZW50Jz57IGNoaWxkcmVuIH08L2Rpdj5cclxuXHRcdFx0PC8+IH1cclxuXHRcdDwvQmFzZUNvbnRyb2w+XHJcblx0KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRmllbGRXcmFwcGVyOyIsImNvbnN0IHtcclxuXHRcdCAgQnV0dG9uLFxyXG5cdFx0ICBQb3BvdmVyLFxyXG5cdFx0ICBQYW5lbEJvZHksXHJcblx0ICB9ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmNvbnN0IHtcclxuXHRcdCAgdXNlU3RhdGUsXHJcblx0ICB9ID0gd3AuZWxlbWVudDtcclxuXHJcbmZ1bmN0aW9uIE1hY3Jvc0luc2VydGVyKCB7XHJcblx0XHRcdFx0XHRcdFx0IGNoaWxkcmVuLFxyXG5cdFx0XHRcdFx0XHRcdCBmaWVsZHMsXHJcblx0XHRcdFx0XHRcdFx0IG9uRmllbGRDbGljayxcclxuXHRcdFx0XHRcdFx0XHQgY3VzdG9tTWFjcm9zLFxyXG5cdFx0XHRcdFx0XHRcdCB6SW5kZXggPSAxMDAwMDAwLFxyXG5cdFx0XHRcdFx0XHRcdCAuLi5wb3BvdmVyUHJvcHNcclxuXHRcdFx0XHRcdFx0IH0gKSB7XHJcblxyXG5cdGNvbnN0IFsgc2hvd1BvcG92ZXIsIHNldFBvcG92ZXJTdGF0ZSBdID0gdXNlU3RhdGUoICgpID0+IGZhbHNlICk7XHJcblxyXG5cdHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImpldC1mb3JtLWVkaXRvcl9fbWFjcm9zLWluc2VydGVyXCI+XHJcblx0XHQ8QnV0dG9uXHJcblx0XHRcdGlzVGVydGlhcnlcclxuXHRcdFx0aXNTbWFsbFxyXG5cdFx0XHRpY29uPXsgc2hvd1BvcG92ZXIgPyAnbm8tYWx0JyA6ICdhZG1pbi10b29scycgfVxyXG5cdFx0XHRsYWJlbD17ICdJbnNlcnQgbWFjcm9zJyB9XHJcblx0XHRcdGNsYXNzTmFtZT1cImpldC1mb3JtLWVkaXRvcl9fbWFjcm9zLXRyaWdnZXJcIlxyXG5cdFx0XHRvbkNsaWNrPXsgKCkgPT4ge1xyXG5cdFx0XHRcdHNldFBvcG92ZXJTdGF0ZSggcHJldiA9PiAhIHByZXYgKTtcclxuXHRcdFx0fSB9XHJcblx0XHQvPlxyXG5cdFx0eyBzaG93UG9wb3ZlciAmJiAoXHJcblx0XHRcdDxQb3BvdmVyXHJcblx0XHRcdFx0c3R5bGU9eyB7IHpJbmRleCB9IH1cclxuXHRcdFx0XHRwb3NpdGlvbj17ICdib3R0b20gbGVmdCcgfVxyXG5cdFx0XHRcdHsgLi4ucG9wb3ZlclByb3BzIH1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdHsgZmllbGRzLmxlbmd0aCAmJiA8UGFuZWxCb2R5IHRpdGxlPXsgJ0Zvcm0gRmllbGRzJyB9PlxyXG5cdFx0XHRcdFx0eyBmaWVsZHMubWFwKCBmaWVsZCA9PiB7XHJcblx0XHRcdFx0XHRcdHJldHVybiA8ZGl2IGtleT17ICdmaWVsZF8nICsgZmllbGQubmFtZSB9PlxyXG5cdFx0XHRcdFx0XHRcdDxCdXR0b25cclxuXHRcdFx0XHRcdFx0XHRcdGlzTGlua1xyXG5cdFx0XHRcdFx0XHRcdFx0b25DbGljaz17ICgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0b25GaWVsZENsaWNrKCBmaWVsZC5uYW1lIClcclxuXHRcdFx0XHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0XHRcdD57ICclJyArIGZpZWxkLm5hbWUgKyAnJScgfTwvQnV0dG9uPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj47XHJcblx0XHRcdFx0XHR9ICkgfVxyXG5cdFx0XHRcdDwvUGFuZWxCb2R5PiB9XHJcblx0XHRcdFx0eyBjdXN0b21NYWNyb3MgJiYgPFBhbmVsQm9keSB0aXRsZT17ICdDdXN0b20gTWFjcm9zJyB9PlxyXG5cdFx0XHRcdFx0eyBjdXN0b21NYWNyb3MubWFwKCBtYWNyb3MgPT4ge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gPGRpdiBrZXk9eyAnbWFjcm9zXycgKyBtYWNyb3MgfT5cclxuXHRcdFx0XHRcdFx0XHQ8QnV0dG9uXHJcblx0XHRcdFx0XHRcdFx0XHRpc0xpbmtcclxuXHRcdFx0XHRcdFx0XHRcdG9uQ2xpY2s9eyAoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdG9uRmllbGRDbGljayggbWFjcm9zIClcclxuXHRcdFx0XHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdFx0XHRcdD57ICclJyArIG1hY3JvcyArICclJyB9PC9CdXR0b24+XHJcblx0XHRcdFx0XHRcdDwvZGl2PjtcclxuXHRcdFx0XHRcdH0gKSB9XHJcblx0XHRcdFx0PC9QYW5lbEJvZHk+IH1cclxuXHRcdFx0PC9Qb3BvdmVyPlxyXG5cdFx0KSB9XHJcblx0PC9kaXY+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYWNyb3NJbnNlcnRlcjsiLCJjb25zdCB7IF9fIH0gPSB3cC5pMThuO1xyXG5cclxuY29uc3Qge1xyXG5cdFx0ICBCdXR0b24sXHJcblx0XHQgIEJ1dHRvbkdyb3VwLFxyXG5cdFx0ICBDYXJkLFxyXG5cdFx0ICBDYXJkQm9keSxcclxuXHRcdCAgQ2FyZEhlYWRlcixcclxuXHRcdCAgVG9nZ2xlQ29udHJvbCxcclxuXHRcdCAgRmxleCxcclxuXHRcdCAgRmxleEl0ZW0sXHJcblx0ICB9ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmNvbnN0IHtcclxuXHRcdCAgdXNlU3RhdGUsXHJcblx0XHQgIHVzZUVmZmVjdCxcclxuXHQgIH0gPSB3cC5lbGVtZW50O1xyXG5cclxuZnVuY3Rpb24gUmVwZWF0ZXJXaXRoU3RhdGUoIHtcclxuXHRcdFx0XHRcdFx0XHRcdGNoaWxkcmVuLFxyXG5cdFx0XHRcdFx0XHRcdFx0SXRlbUhlYWRpbmcsXHJcblx0XHRcdFx0XHRcdFx0XHRyZXBlYXRlckNsYXNzZXMgPSBbXSxcclxuXHRcdFx0XHRcdFx0XHRcdHJlcGVhdGVySXRlbUNsYXNzZXMgPSBbXSxcclxuXHRcdFx0XHRcdFx0XHRcdG5ld0l0ZW0sXHJcblx0XHRcdFx0XHRcdFx0XHRhZGROZXdCdXR0b25MYWJlbCA9ICdBZGQgTmV3JyxcclxuXHRcdFx0XHRcdFx0XHRcdGl0ZW1zID0gW10sXHJcblx0XHRcdFx0XHRcdFx0XHRpc1NhdmVBY3Rpb24sXHJcblx0XHRcdFx0XHRcdFx0XHRvblNhdmVJdGVtcyxcclxuXHRcdFx0XHRcdFx0XHRcdG9uVW5Nb3VudCxcclxuXHRcdFx0XHRcdFx0XHRcdG9uQWRkTmV3SXRlbSxcclxuXHRcdFx0XHRcdFx0XHRcdG9uUmVtb3ZlSXRlbSxcclxuXHRcdFx0XHRcdFx0XHRcdGhlbHAgPSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGhlbHBTb3VyY2U6IHt9LFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRoZWxwVmlzaWJsZTogKCkgPT4gZmFsc2UsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGhlbHBLZXk6ICcnLFxyXG5cdFx0XHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0XHRcdGFkZGl0aW9uYWxDb250cm9scyA9IG51bGwsXHJcblx0XHRcdFx0XHRcdFx0fSApIHtcclxuXHJcblx0Y29uc3QgY2xhc3NOYW1lcyA9IFsgJ2pldC1mb3JtLWJ1aWxkZXJfX3JlcGVhdGVyLWNvbXBvbmVudCcsIC4uLnJlcGVhdGVyQ2xhc3NlcyBdLmpvaW4oICcgJyApO1xyXG5cdGNvbnN0IGl0ZW1DbGFzc05hbWVzID0gWyAnamV0LWZvcm0tYnVpbGRlcl9fcmVwZWF0ZXItY29tcG9uZW50LWl0ZW0nLCAuLi5yZXBlYXRlckl0ZW1DbGFzc2VzIF0uam9pbiggJyAnICk7XHJcblxyXG5cdGNvbnN0IHBhcnNlZEl0ZW1zID0gKCkgPT4ge1xyXG5cdFx0aWYgKCBpdGVtcyAmJiBpdGVtcy5sZW5ndGggPiAwICkge1xyXG5cdFx0XHRyZXR1cm4gaXRlbXMubWFwKCBpdGVtID0+IHtcclxuXHRcdFx0XHRpdGVtLl9fdmlzaWJsZSA9IGZhbHNlO1xyXG5cclxuXHRcdFx0XHRyZXR1cm4gaXRlbTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIFsge1xyXG5cdFx0XHRcdC4uLm5ld0l0ZW0sXHJcblx0XHRcdFx0X192aXNpYmxlOiB0cnVlLFxyXG5cdFx0XHR9IF07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRjb25zdCBbIGl0ZW1zRGF0YSwgc2V0SXRlbXNEYXRhIF0gPSB1c2VTdGF0ZSggW10gKTtcclxuXHJcblx0dXNlRWZmZWN0KCAoKSA9PiB7XHJcblx0XHRzZXRJdGVtc0RhdGEoIHBhcnNlZEl0ZW1zKCkgKTtcclxuXHR9LCBbXSApO1xyXG5cclxuXHRjb25zdCBbIGlzU2FmZURlbGV0aW5nLCBzZXRTYWZlRGVsZXRpbmcgXSA9IHVzZVN0YXRlKCB0cnVlICk7XHJcblxyXG5cdGNvbnN0IGNoYW5nZUN1cnJlbnRJdGVtID0gKCB2YWx1ZVRvU2V0LCBpbmRleCApID0+IHtcclxuXHRcdHNldEl0ZW1zRGF0YSggcHJldiA9PiB7XHJcblx0XHRcdGNvbnN0IHByZXZDbG9uZSA9IEpTT04ucGFyc2UoIEpTT04uc3RyaW5naWZ5KCBwcmV2ICkgKTtcclxuXHJcblx0XHRcdHByZXZDbG9uZVsgaW5kZXggXSA9IHtcclxuXHRcdFx0XHQuLi5wcmV2WyBpbmRleCBdLFxyXG5cdFx0XHRcdC4uLnZhbHVlVG9TZXQsXHJcblx0XHRcdH07XHJcblx0XHRcdHJldHVybiBwcmV2Q2xvbmU7XHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25TYXZlRGVsZXRpbmcgPSBpbmRleCA9PiB7XHJcblx0XHRyZXR1cm4gY29uZmlybSggX18oIGBBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmVtb3ZlIGl0ZW0gJHsgaW5kZXggKyAxIH0/YCwgJ2pldC1mb3JtLWJ1aWxkZXInICkgKTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHJlbW92ZU9wdGlvbiA9ICggaW5kZXggKSA9PiB7XHJcblx0XHRpZiAoXHJcblx0XHRcdGlzU2FmZURlbGV0aW5nICYmICEgb25TYXZlRGVsZXRpbmcoIGluZGV4ICkgfHxcclxuXHRcdFx0b25SZW1vdmVJdGVtICYmICEgb25SZW1vdmVJdGVtKCBpbmRleCwgaXRlbXNEYXRhIClcclxuXHRcdCkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IHtcclxuXHRcdFx0Y29uc3QgcHJldkNsb25lID0gSlNPTi5wYXJzZSggSlNPTi5zdHJpbmdpZnkoIHByZXYgKSApO1xyXG5cdFx0XHRwcmV2Q2xvbmUuc3BsaWNlKCBpbmRleCwgMSApO1xyXG5cclxuXHRcdFx0cmV0dXJuIHByZXZDbG9uZTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGFkZE5ld0l0ZW0gPSAoIHZhbHVlICkgPT4ge1xyXG5cdFx0aWYgKCBvbkFkZE5ld0l0ZW0gKSB7XHJcblx0XHRcdG9uQWRkTmV3SXRlbSggdmFsdWUsIGl0ZW1zRGF0YSApO1xyXG5cdFx0fVxyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IFsgLi4ucHJldiwge1xyXG5cdFx0XHQuLi52YWx1ZSxcclxuXHRcdFx0X192aXNpYmxlOiB0cnVlLFxyXG5cdFx0fSBdICk7XHJcblx0fVxyXG5cclxuXHRjb25zdCBjbG9uZUl0ZW0gPSAoIGluZGV4ICkgPT4ge1xyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IHtcclxuXHRcdFx0Y29uc3QgcHJldkNsb25lID0gSlNPTi5wYXJzZSggSlNPTi5zdHJpbmdpZnkoIHByZXYgKSApO1xyXG5cdFx0XHRjb25zdCBbIGJlZm9yZSwgYWZ0ZXIgXSA9IFsgcHJldkNsb25lLnNsaWNlKCAwLCBpbmRleCArIDEgKSwgcHJldkNsb25lLnNsaWNlKCBpbmRleCArIDEgKSBdO1xyXG5cclxuXHRcdFx0cmV0dXJuIFsgLi4uYmVmb3JlLCBwcmV2Q2xvbmVbIGluZGV4IF0sIC4uLmFmdGVyIF07XHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRjb25zdCBtb3ZlUmVwZWF0ZXJJdGVtID0gKCB7IG9sZEluZGV4LCBuZXdJbmRleCB9ICkgPT4ge1xyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IHtcclxuXHRcdFx0Y29uc3QgcHJldkNsb25lID0gSlNPTi5wYXJzZSggSlNPTi5zdHJpbmdpZnkoIHByZXYgKSApO1xyXG5cclxuXHRcdFx0WyBwcmV2Q2xvbmVbIG5ld0luZGV4IF0sIHByZXZDbG9uZVsgb2xkSW5kZXggXSBdID0gWyBwcmV2Q2xvbmVbIG9sZEluZGV4IF0sIHByZXZDbG9uZVsgbmV3SW5kZXggXSBdO1xyXG5cclxuXHRcdFx0cmV0dXJuIHByZXZDbG9uZTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IG1vdmVVcCA9ICggaW5kZXggKSA9PiB7XHJcblx0XHRtb3ZlUmVwZWF0ZXJJdGVtKCB7IG9sZEluZGV4OiBpbmRleCwgbmV3SW5kZXg6IGluZGV4IC0gMSB9ICk7XHJcblx0fVxyXG5cdGNvbnN0IG1vdmVEb3duID0gKCBpbmRleCApID0+IHtcclxuXHRcdG1vdmVSZXBlYXRlckl0ZW0oIHsgb2xkSW5kZXg6IGluZGV4LCBuZXdJbmRleDogaW5kZXggKyAxIH0gKTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGlzRGlzYWJsZWRFbmQgPSAoIGluZGV4ICkgPT4ge1xyXG5cdFx0cmV0dXJuICEgKCBpbmRleCA8IGl0ZW1zRGF0YS5sZW5ndGggLSAxICk7XHJcblx0fVxyXG5cdC8qXHJcblx0ICBcclxuXHQgKi9cclxuXHJcblx0Y29uc3QgdG9nZ2xlVmlzaWJsZSA9IGluZGV4ID0+IHtcclxuXHRcdHNldEl0ZW1zRGF0YSggcHJldiA9PiB7XHJcblx0XHRcdGNvbnN0IHByZXZDbG9uZSA9IEpTT04ucGFyc2UoIEpTT04uc3RyaW5naWZ5KCBwcmV2ICkgKTtcclxuXHRcdFx0cHJldkNsb25lWyBpbmRleCBdLl9fdmlzaWJsZSA9ICEgKCBwcmV2Q2xvbmVbIGluZGV4IF0uX192aXNpYmxlICk7XHJcblxyXG5cdFx0XHRyZXR1cm4gcHJldkNsb25lO1xyXG5cdFx0fSApO1xyXG5cdH07XHJcblxyXG5cdHVzZUVmZmVjdCggKCkgPT4ge1xyXG5cdFx0aWYgKCB0cnVlID09PSBpc1NhdmVBY3Rpb24gKSB7XHJcblx0XHRcdGZvciAoIGNvbnN0IGl0ZW1zRGF0YUtleSBpbiBpdGVtc0RhdGEgKSB7XHJcblx0XHRcdFx0Zm9yICggY29uc3QgaXRlbUtleSBpbiBpdGVtc0RhdGFbIGl0ZW1zRGF0YUtleSBdICkge1xyXG5cdFx0XHRcdFx0aWYgKCBpdGVtS2V5LnN0YXJ0c1dpdGgoICdfXycgKSApIHtcclxuXHRcdFx0XHRcdFx0ZGVsZXRlIGl0ZW1zRGF0YVsgaXRlbXNEYXRhS2V5IF1bIGl0ZW1LZXkgXTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0b25TYXZlSXRlbXMoIGl0ZW1zRGF0YSApO1xyXG5cdFx0XHRvblVuTW91bnQoKTtcclxuXHRcdH0gZWxzZSBpZiAoIGZhbHNlID09PSBpc1NhdmVBY3Rpb24gKSB7XHJcblx0XHRcdG9uVW5Nb3VudCgpO1xyXG5cdFx0fVxyXG5cdH0sIFsgaXNTYXZlQWN0aW9uIF0gKTtcclxuXHJcblx0Y29uc3QgZ2V0UmVwZWF0ZXJJdGVtSWQgPSBpbmRleCA9PiBgamV0LWZvcm0tYnVpbGRlci1yZXBlYXRlcl9faXRlbV8keyBpbmRleCB9YDtcclxuXHJcblx0Y29uc3Qge1xyXG5cdFx0aGVscFNvdXJjZSxcclxuXHRcdGhlbHBWaXNpYmxlLFxyXG5cdFx0aGVscEtleSxcclxuXHR9ID0gaGVscDtcclxuXHJcblx0Y29uc3QgaXNWaXNpYmxlSGVscCA9IGhlbHBWaXNpYmxlKCBpdGVtc0RhdGEgKSAmJiBoZWxwU291cmNlICYmIGhlbHBTb3VyY2VbIGhlbHBLZXkgXTtcclxuXHJcblx0cmV0dXJuIDxkaXZcclxuXHRcdGNsYXNzTmFtZT17IGNsYXNzTmFtZXMgfVxyXG5cdFx0a2V5PXsgJ2pldC1mb3JtLWJ1aWxkZXItcmVwZWF0ZXInIH1cclxuXHQ+XHJcblx0XHR7IGlzVmlzaWJsZUhlbHAgJiYgPHA+eyBoZWxwU291cmNlWyBoZWxwS2V5IF0ubGFiZWwgfTwvcD4gfVxyXG5cclxuXHRcdHsgMCA8IGl0ZW1zRGF0YS5sZW5ndGggJiYgPD5cclxuXHRcdFx0PEZsZXg+XHJcblx0XHRcdFx0PEZsZXhJdGVtPlxyXG5cdFx0XHRcdFx0PFRvZ2dsZUNvbnRyb2xcclxuXHRcdFx0XHRcdFx0bGFiZWw9eyBfXyggJ1NhZmUgZGVsZXRpbmcnLCAnamV0LWZvcm0tYnVpbGRlcicgKSB9XHJcblx0XHRcdFx0XHRcdGNoZWNrZWQ9eyBpc1NhZmVEZWxldGluZyB9XHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlPXsgc2V0U2FmZURlbGV0aW5nIH1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0PC9GbGV4SXRlbT5cclxuXHRcdFx0XHQ8RmxleEl0ZW0gc3R5bGU9eyB7XHJcblx0XHRcdFx0XHRmbGV4OiAndW5zZXQnLFxyXG5cdFx0XHRcdFx0bWFyZ2luQm90dG9tOiAnMWVtJyxcclxuXHRcdFx0XHR9IH0+XHJcblx0XHRcdFx0XHR7Lyo8QnV0dG9uR3JvdXA+XHJcblx0XHRcdFx0XHQgPEJ1dHRvblxyXG5cdFx0XHRcdFx0IGlzU2Vjb25kYXJ5XHJcblx0XHRcdFx0XHQgb25DbGljaz17ICgpID0+IHtcclxuXHRcdFx0XHRcdCB9IH1cclxuXHRcdFx0XHRcdCA+XHJcblx0XHRcdFx0XHQgeyBfXyggJ0NvcHkgaXRlbXMgdG8gY2xpcGJvYXJkJywgJ2pldC1mcm9tLWJ1aWxkZXInICkgfVxyXG5cdFx0XHRcdFx0IDwvQnV0dG9uPlxyXG5cdFx0XHRcdFx0IDxCdXR0b25cclxuXHRcdFx0XHRcdCBpc1NlY29uZGFyeVxyXG5cdFx0XHRcdFx0IG9uQ2xpY2s9eyAoKSA9PiB7XHJcblx0XHRcdFx0XHQgfSB9XHJcblx0XHRcdFx0XHQgPlxyXG5cdFx0XHRcdFx0IHsgX18oICdJbXBvcnQgaXRlbXMgZnJvbSBjbGlwYm9hcmQnLCAnamV0LWZyb20tYnVpbGRlcicgKSB9XHJcblx0XHRcdFx0XHQgPC9CdXR0b24+XHJcblx0XHRcdFx0XHQgPC9CdXR0b25Hcm91cD4qLyB9XHJcblx0XHRcdFx0PC9GbGV4SXRlbT5cclxuXHRcdFx0PC9GbGV4PlxyXG5cdFx0PC8+IH1cclxuXHRcdHsgYWRkaXRpb25hbENvbnRyb2xzIH1cclxuXHRcdHsgaXRlbXNEYXRhLm1hcCggKCBjdXJyZW50SXRlbSwgaW5kZXggKSA9PiA8Q2FyZFxyXG5cdFx0XHRpc0VsZXZhdGVkPXsgdHJ1ZSB9XHJcblx0XHRcdGNsYXNzTmFtZT17IGl0ZW1DbGFzc05hbWVzIH1cclxuXHRcdFx0a2V5PXsgZ2V0UmVwZWF0ZXJJdGVtSWQoIGluZGV4ICkgfVxyXG5cdFx0PlxyXG5cdFx0XHQ8Q2FyZEhlYWRlciBjbGFzc05hbWU9eyAncmVwZWF0ZXJfX2l0ZW1fX2hlYWRlcicgfT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ncmVwZWF0ZXItaXRlbV9fbGVmdC1oZWFkaW5nJz5cclxuXHRcdFx0XHRcdDxCdXR0b25Hcm91cCBjbGFzc05hbWU9eyAncmVwZWF0ZXItYWN0aW9uLWJ1dHRvbnMnIH0+XHJcblx0XHRcdFx0XHRcdDxCdXR0b25cclxuXHRcdFx0XHRcdFx0XHRpc1NtYWxsXHJcblx0XHRcdFx0XHRcdFx0aWNvbj17IGN1cnJlbnRJdGVtLl9fdmlzaWJsZSA/ICduby1hbHQnIDogJ2VkaXQnIH1cclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXsgKCkgPT4gdG9nZ2xlVmlzaWJsZSggaW5kZXggKSB9XHJcblx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ3JlcGVhdGVyLWFjdGlvbi1idXR0b24nIH1cclxuXHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdFx0XHRcdGlzU21hbGxcclxuXHRcdFx0XHRcdFx0XHRpc1NlY29uZGFyeVxyXG5cdFx0XHRcdFx0XHRcdGRpc2FibGVkPXsgISBCb29sZWFuKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRpY29uPXsgJ2Fycm93LXVwLWFsdDInIH1cclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXsgKCkgPT4gbW92ZVVwKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9eyAncmVwZWF0ZXItYWN0aW9uLWJ1dHRvbicgfVxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8QnV0dG9uXHJcblx0XHRcdFx0XHRcdFx0aXNTbWFsbFxyXG5cdFx0XHRcdFx0XHRcdGlzU2Vjb25kYXJ5XHJcblx0XHRcdFx0XHRcdFx0ZGlzYWJsZWQ9eyBpc0Rpc2FibGVkRW5kKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRpY29uPXsgJ2Fycm93LWRvd24tYWx0MicgfVxyXG5cdFx0XHRcdFx0XHRcdG9uQ2xpY2s9eyAoKSA9PiBtb3ZlRG93biggaW5kZXggKSB9XHJcblx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ3JlcGVhdGVyLWFjdGlvbi1idXR0b24nIH1cclxuXHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdDwvQnV0dG9uR3JvdXA+XHJcblx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9eyAncmVwZWF0ZXItaXRlbS10aXRsZScgfT5cclxuXHRcdFx0XHRcdFx0XHR7IEl0ZW1IZWFkaW5nICYmIDxJdGVtSGVhZGluZ1xyXG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudEl0ZW09eyBjdXJyZW50SXRlbSB9XHJcblx0XHRcdFx0XHRcdFx0XHRpbmRleD17IGluZGV4IH1cclxuXHRcdFx0XHRcdFx0XHRcdGNoYW5nZUN1cnJlbnRJdGVtPXsgZGF0YSA9PiBjaGFuZ2VDdXJyZW50SXRlbSggZGF0YSwgaW5kZXggKSB9XHJcblx0XHRcdFx0XHRcdFx0Lz4gfVxyXG5cdFx0XHRcdFx0XHR7ICEgSXRlbUhlYWRpbmcgJiYgYCMkeyBpbmRleCArIDEgfWAgfVxyXG5cdFx0XHRcdFx0XHQ8L3NwYW4+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PEJ1dHRvbkdyb3VwPlxyXG5cdFx0XHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdFx0XHRpc1NtYWxsXHJcblx0XHRcdFx0XHRcdGlzU2Vjb25kYXJ5XHJcblx0XHRcdFx0XHRcdG9uQ2xpY2s9eyAoKSA9PiBjbG9uZUl0ZW0oIGluZGV4ICkgfVxyXG5cdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHR7IF9fKCAnQ2xvbmUnLCAnamV0LWZvcm0tYnVpbGRlcicgKSB9XHJcblx0XHRcdFx0XHQ8L0J1dHRvbj5cclxuXHRcdFx0XHRcdDxCdXR0b25cclxuXHRcdFx0XHRcdFx0aXNTbWFsbFxyXG5cdFx0XHRcdFx0XHRpc1NlY29uZGFyeVxyXG5cdFx0XHRcdFx0XHRpc0Rlc3RydWN0aXZlXHJcblx0XHRcdFx0XHRcdG9uQ2xpY2s9eyAoKSA9PiByZW1vdmVPcHRpb24oIGluZGV4ICkgfVxyXG5cdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHR7IF9fKCAnRGVsZXRlJywgJ2pldC1mb3JtLWJ1aWxkZXInICkgfVxyXG5cdFx0XHRcdFx0PC9CdXR0b24+XHJcblx0XHRcdFx0PC9CdXR0b25Hcm91cD5cclxuXHRcdFx0PC9DYXJkSGVhZGVyPlxyXG5cdFx0XHR7IGN1cnJlbnRJdGVtLl9fdmlzaWJsZSAmJiA8Q2FyZEJvZHlcclxuXHRcdFx0XHRjbGFzc05hbWU9eyAncmVwZWF0ZXItaXRlbV9fY29udGVudCcgfVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0eyBjaGlsZHJlbiAmJiA8UmVhY3QuRnJhZ21lbnRcclxuXHRcdFx0XHRcdGtleT17IGByZXBlYXRlci1jb21wb25lbnRfX2l0ZW1fJHsgaW5kZXggfWAgfVxyXG5cdFx0XHRcdD5cclxuXHRcdFx0XHRcdHsgJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGNoaWxkcmVuICYmIGNoaWxkcmVuKCB7XHJcblx0XHRcdFx0XHRcdGN1cnJlbnRJdGVtLFxyXG5cdFx0XHRcdFx0XHRjaGFuZ2VDdXJyZW50SXRlbTogZGF0YSA9PiBjaGFuZ2VDdXJyZW50SXRlbSggZGF0YSwgaW5kZXggKSxcclxuXHRcdFx0XHRcdFx0Y3VycmVudEluZGV4OiBpbmRleCxcclxuXHRcdFx0XHRcdH0gKSB9XHJcblx0XHRcdFx0XHR7ICdmdW5jdGlvbicgIT09IHR5cGVvZiBjaGlsZHJlbiAmJiBjaGlsZHJlbiB9XHJcblx0XHRcdFx0PC9SZWFjdC5GcmFnbWVudD4gfVxyXG5cdFx0XHRcdHsgISBjaGlsZHJlbiAmJiAnU2V0IHVwIHlvdXIgUmVwZWF0ZXIgVGVtcGxhdGUsIHBsZWFzZS4nIH1cclxuXHRcdFx0PC9DYXJkQm9keT4gfVxyXG5cdFx0PC9DYXJkPiApIH1cclxuXHRcdHsgMSA8IGl0ZW1zRGF0YS5sZW5ndGggJiYgPD5cclxuXHRcdFx0eyBhZGRpdGlvbmFsQ29udHJvbHMgfVxyXG5cdFx0XHQ8VG9nZ2xlQ29udHJvbFxyXG5cdFx0XHRcdGNsYXNzTmFtZT0namV0LWNvbnRyb2wtY2xlYXInXHJcblx0XHRcdFx0bGFiZWw9eyBfXyggJ1NhZmUgZGVsZXRpbmcnICkgfVxyXG5cdFx0XHRcdGNoZWNrZWQ9eyBpc1NhZmVEZWxldGluZyB9XHJcblx0XHRcdFx0b25DaGFuZ2U9eyBzZXRTYWZlRGVsZXRpbmcgfVxyXG5cdFx0XHQvPlxyXG5cdFx0PC8+IH1cclxuXHRcdDxCdXR0b25cclxuXHRcdFx0aXNTZWNvbmRhcnlcclxuXHRcdFx0b25DbGljaz17ICgpID0+IGFkZE5ld0l0ZW0oIG5ld0l0ZW0gKSB9XHJcblx0XHQ+XHJcblx0XHRcdHsgYWRkTmV3QnV0dG9uTGFiZWwgfVxyXG5cdFx0PC9CdXR0b24+XHJcblx0PC9kaXY+O1xyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUmVwZWF0ZXJXaXRoU3RhdGU7IiwiY29uc3QgeyBfXyB9ID0gd3AuaTE4bjtcclxuY29uc3QgeyBhcHBseUZpbHRlcnMgfSA9IHdwLmhvb2tzO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRyb2xzU2V0dGluZ3MgPSAoKSA9PiBhcHBseUZpbHRlcnMoICdqZXQuZmIucmVnaXN0ZXIuZmllbGRzLmNvbnRyb2xzJywge1xyXG5cdFwiZ2VuZXJhbFwiOiB7XHJcblx0XHRsYWJlbDogX18oICdHZW5lcmFsJywgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRhdHRyczogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJhdHRyTmFtZVwiOiBcImxhYmVsXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxyXG5cdFx0XHRcdFwibGFiZWxcIjogX18oIFwiRmllbGQgTGFiZWxcIiwgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImF0dHJOYW1lXCI6IFwibmFtZVwiLFxyXG5cdFx0XHRcdFwidHlwZVwiOiBcInRleHRcIixcclxuXHRcdFx0XHRcImxhYmVsXCI6IF9fKCBcIkZvcm0gZmllbGQgbmFtZVwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0XHRcImhlbHBcIjogX18oIFwiU2hvdWxkIGNvbnRhaW4gb25seSBMYXRpbiBsZXR0ZXJzLCBudW1iZXJzLCBgLWAgb3IgYF9gIGNoYXJzLCBubyBzcGFjZXMgb25seSBsb3dlciBjYXNlXCIsICdqZXQtZm9ybS1idWlsZGVyJyApLFxyXG5cdFx0XHR9LFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJhdHRyTmFtZVwiOiBcImRlc2NcIixcclxuXHRcdFx0XHRcInR5cGVcIjogXCJ0ZXh0XCIsXHJcblx0XHRcdFx0XCJsYWJlbFwiOiBfXyggXCJGaWVsZCBEZXNjcmlwdGlvblwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0fSxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdFwiYXR0ck5hbWVcIjogXCJkZWZhdWx0XCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwiZHluYW1pY190ZXh0XCIsXHJcblx0XHRcdFx0XCJsYWJlbFwiOiBfXyggXCJEZWZhdWx0IFZhbHVlXCIsICdqZXQtZm9ybS1idWlsZGVyJyApLFxyXG5cdFx0XHR9LFxyXG5cdFx0XSxcclxuXHR9LFxyXG5cdFwidG9vbGJhclwiOiB7XHJcblx0XHRhdHRyczogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJhdHRyTmFtZVwiOiBcInJlcXVpcmVkXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwidG9nZ2xlXCIsXHJcblx0XHRcdFx0XCJsYWJlbFwiOiBfXyggXCJJcyBSZXF1aXJlZFwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0fSxcclxuXHRcdF0sXHJcblx0fSxcclxuXHRcImFkdmFuY2VkXCI6IHtcclxuXHRcdGxhYmVsOiBfXyggJ0FkdmFuY2VkJywgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRhdHRyczogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJhdHRyTmFtZVwiOiBcInBsYWNlaG9sZGVyXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxyXG5cdFx0XHRcdFwibGFiZWxcIjogX18oIFwiUGxhY2Vob2xkZXJcIiwgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImF0dHJOYW1lXCI6IFwiYWRkX3ByZXZcIixcclxuXHRcdFx0XHRcInR5cGVcIjogXCJ0b2dnbGVcIixcclxuXHRcdFx0XHRcImxhYmVsXCI6IF9fKCBcIkFkZCBQcmV2IFBhZ2UgQnV0dG9uXCIsICdqZXQtZm9ybS1idWlsZGVyJyApLFxyXG5cdFx0XHRcdGhlbHA6IF9fKCBgSXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIFxyXG5cdFx0XHRcdHRoZSBcIkFjdGlvbiBCdXR0b25cIiBibG9jayB3aXRoIHRoZSBcIkdvIHRvIFByZXYgUGFnZVwiIHR5cGVgLCAnamV0LWZyb20tYnVpbGRlcicgKSxcclxuXHRcdFx0fSxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdFwiYXR0ck5hbWVcIjogXCJwcmV2X2xhYmVsXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxyXG5cdFx0XHRcdFwibGFiZWxcIjogX18oIFwiUHJldiBQYWdlIEJ1dHRvbiBMYWJlbFwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0XHRcImNvbmRpdGlvblwiOiBcImFkZF9wcmV2XCIsXHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImF0dHJOYW1lXCI6IFwidmlzaWJpbGl0eVwiLFxyXG5cdFx0XHRcdFwibGFiZWxcIjogX18oIFwiRmllbGQgVmlzaWJpbGl0eVwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0XHRcInR5cGVcIjogXCJzZWxlY3RcIixcclxuXHRcdFx0XHRcIm9wdGlvbnNcIjogW1xyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcInZhbHVlXCI6IFwiYWxsXCIsXHJcblx0XHRcdFx0XHRcdFwibGFiZWxcIjogX18oIFwiRm9yIGFsbFwiLCAnamV0LWZvcm0tYnVpbGRlcicgKSxcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFwidmFsdWVcIjogXCJsb2dnZWRfaWRcIixcclxuXHRcdFx0XHRcdFx0XCJsYWJlbFwiOiBfXyggXCJPbmx5IGZvciBsb2dnZWQgaW4gdXNlcnNcIiwgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcInZhbHVlXCI6IFwibm90X2xvZ2dlZF9pblwiLFxyXG5cdFx0XHRcdFx0XHRcImxhYmVsXCI6IF9fKCBcIk9ubHkgZm9yIE5PVC1sb2dnZWQgaW4gdXNlcnNcIiwgJ2pldC1mb3JtLWJ1aWxkZXInICksXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdF0sXHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImF0dHJOYW1lXCI6IFwiY2xhc3NfbmFtZVwiLFxyXG5cdFx0XHRcdFwidHlwZVwiOiBcInRleHRcIixcclxuXHRcdFx0XHRcImxhYmVsXCI6IF9fKCBcIkNTUyBDbGFzcyBOYW1lXCIsICdqZXQtZm9ybS1idWlsZGVyJyApLFxyXG5cdFx0XHR9LFxyXG5cdFx0XSxcclxuXHR9LFxyXG59IClcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRCbG9ja0NvbnRyb2xzKCB0eXBlID0gJ2FsbCcgKSB7XHJcblx0aWYgKCAhIHR5cGUgKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cdGNvbnN0IGNvbnRyb2xzID0gQ29udHJvbHNTZXR0aW5ncygpO1xyXG5cclxuXHRpZiAoICdhbGwnID09PSB0eXBlICkge1xyXG5cdFx0cmV0dXJuIGNvbnRyb2xzO1xyXG5cdH1cclxuXHJcblx0aWYgKCBjb250cm9sc1sgdHlwZSBdXHJcblx0XHQmJiBjb250cm9sc1sgdHlwZSBdLmF0dHJzXHJcblx0XHQmJiBBcnJheS5pc0FycmF5KCBjb250cm9sc1sgdHlwZSBdLmF0dHJzIClcclxuXHRcdCYmIDAgPCBjb250cm9sc1sgdHlwZSBdLmF0dHJzLmxlbmd0aFxyXG5cdCkge1xyXG5cdFx0cmV0dXJuIGNvbnRyb2xzWyB0eXBlIF0uYXR0cnM7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZmFsc2U7XHJcbn0iLCJpbXBvcnQgeyBDb250cm9sc1NldHRpbmdzIH0gZnJvbSBcIi4vY29udHJvbHNcIjtcclxuaW1wb3J0IEZpZWxkV2l0aFByZXNldCBmcm9tIFwiLi9maWVsZC13aXRoLXByZXNldFwiO1xyXG5pbXBvcnQgRHluYW1pY1ByZXNldCBmcm9tIFwiLi4vcHJlc2V0cy9keW5hbWljLXByZXNldFwiO1xyXG5pbXBvcnQgeyBnZXRDb252ZXJ0ZWROYW1lIH0gZnJvbSAnLi4vLi4vaGVscGVycy90b29scyc7XHJcbmltcG9ydCB7IHVzZVN1Y2Nlc3NOb3RpY2UgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2hvb2tzL2hvb2tzLWhlbHBlcic7XHJcblxyXG5jb25zdCB7XHJcblx0XHQgIEJsb2NrQ29udHJvbHMsXHJcblx0XHQgIFJpY2hUZXh0LFxyXG5cdCAgfSA9IHdwLmJsb2NrRWRpdG9yID8gd3AuYmxvY2tFZGl0b3IgOiB3cC5lZGl0b3I7XHJcblxyXG5jb25zdCB7XHJcblx0XHQgIHVzZVN0YXRlLFxyXG5cdFx0ICB1c2VFZmZlY3QsXHJcblx0ICB9ID0gd3AuZWxlbWVudDtcclxuXHJcbmNvbnN0IHtcclxuXHRcdCAgdXNlRGlzcGF0Y2gsXHJcblx0ICB9ID0gd3AuZGF0YTtcclxuXHJcbmNvbnN0IHtcclxuXHRcdCAgVGV4dENvbnRyb2wsXHJcblx0XHQgIFNlbGVjdENvbnRyb2wsXHJcblx0XHQgIFBhbmVsQm9keSxcclxuXHRcdCAgVG9nZ2xlQ29udHJvbCxcclxuXHRcdCAgVG9vbGJhckdyb3VwLFxyXG5cdFx0ICBGbGV4LFxyXG5cdFx0ICBCYXNlQ29udHJvbCxcclxuXHRcdCAgX19leHBlcmltZW50YWxOdW1iZXJDb250cm9sLFxyXG5cdFx0ICBDbGlwYm9hcmRCdXR0b24sXHJcblx0XHQgIFNuYWNrYmFyLFxyXG5cdCAgfSA9IHdwLmNvbXBvbmVudHM7XHJcblxyXG5sZXQgeyBOdW1iZXJDb250cm9sIH0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuaWYgKCB0eXBlb2YgTnVtYmVyQ29udHJvbCA9PT0gJ3VuZGVmaW5lZCcgKSB7XHJcblx0TnVtYmVyQ29udHJvbCA9IF9fZXhwZXJpbWVudGFsTnVtYmVyQ29udHJvbDtcclxufVxyXG5cclxuZnVuY3Rpb24gZmlsdGVyRmllbGRDb250cm9scygge1xyXG5cdFx0XHRcdFx0XHRcdFx0ICB0eXBlLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICBhdHRyaWJ1dGVzLFxyXG5cdFx0XHRcdFx0XHRcdFx0ICBhdHRyc1NldHRpbmdzID0ge30sXHJcblx0XHRcdFx0XHRcdFx0XHQgIGVkaXRQcm9wczoge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQgIGF0dHJIZWxwID0gKCkgPT4gJycsXHJcblx0XHRcdFx0XHRcdFx0XHRcdCAgYmxvY2tOYW1lID0gJycsXHJcblx0XHRcdFx0XHRcdFx0XHQgIH0sXHJcblx0XHRcdFx0XHRcdFx0ICB9ICkge1xyXG5cdGNvbnN0IGNvbnRyb2xzID0gQ29udHJvbHNTZXR0aW5ncygpO1xyXG5cclxuXHRpZiAoICEgY29udHJvbHNbIHR5cGUgXSApIHtcclxuXHRcdHJldHVybiBbXTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGN1cnJlbnRDb250cm9sID0gY29udHJvbHNbIHR5cGUgXTtcclxuXHJcblx0Y29uc3QgaXNWYWxpZENvbmRpdGlvbiA9ICggYXR0ciApID0+IHtcclxuXHRcdGlmICggISBhdHRyLmNvbmRpdGlvbiApIHtcclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBibG9ja05hbWUgJiYgYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lICkge1xyXG5cdFx0XHRpZiAoICdzdHJpbmcnID09PSB0eXBlb2YgYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lICYmIGJsb2NrTmFtZSAhPT0gYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lICkge1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoICdvYmplY3QnID09PSB0eXBlb2YgYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lXHJcblx0XHRcdFx0JiYgYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lLmxlbmd0aFxyXG5cdFx0XHRcdCYmICEgYXR0ci5jb25kaXRpb24uYmxvY2tOYW1lLmluY2x1ZGVzKCBibG9ja05hbWUgKVxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRjb25zdCBvYmplY3ROb3RNYXRjaCA9ICggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggJ29iamVjdCcgIT09IHR5cGVvZiBhdHRyLmNvbmRpdGlvbi5hdHRyICkge1xyXG5cdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHR9XHJcblx0XHRcdGNvbnN0IHsgb3BlcmF0b3IgPSAnYW5kJywgaXRlbXMgPSB7fSB9ID0gYXR0ci5jb25kaXRpb24uYXR0clxyXG5cclxuXHRcdFx0aWYgKCAnb3InID09PSBvcGVyYXRvci50b0xvd2VyQ2FzZSgpICkge1xyXG5cdFx0XHRcdGZvciAoIGNvbnN0IGF0dHJUb0NvbXBhcmUgaW4gaXRlbXMgKSB7XHJcblx0XHRcdFx0XHRjb25zdCB2YWx1ZUNvbXBhcmUgPSBpdGVtc1sgYXR0clRvQ29tcGFyZSBdO1xyXG5cclxuXHRcdFx0XHRcdGlmICggdmFsdWVDb21wYXJlID09PSBhdHRyaWJ1dGVzWyBhdHRyVG9Db21wYXJlIF0gKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKCAnYW5kJyA9PT0gb3BlcmF0b3IudG9Mb3dlckNhc2UoKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGZvciAoIGNvbnN0IGF0dHJUb0NvbXBhcmUgaW4gaXRlbXMgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggaXRlbXNbIGF0dHJUb0NvbXBhcmUgXSAhPT0gYXR0cmlidXRlc1sgYXR0clRvQ29tcGFyZSBdICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0fSApKClcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9ICkoKVxyXG5cclxuXHRcdGlmICggISBvYmplY3ROb3RNYXRjaFxyXG5cdFx0XHR8fCAoXHJcblx0XHRcdFx0J3N0cmluZycgPT09IHR5cGVvZiBhdHRyLmNvbmRpdGlvbi5hdHRyXHJcblx0XHRcdFx0JiYgYXR0ci5jb25kaXRpb24uYXR0clxyXG5cdFx0XHRcdCYmICEgYXR0cmlidXRlc1sgYXR0ci5jb25kaXRpb24uYXR0ciBdXHJcblx0XHRcdClcclxuXHRcdFx0fHwgKFxyXG5cdFx0XHRcdCdzdHJpbmcnID09PSB0eXBlb2YgYXR0ci5jb25kaXRpb25cclxuXHRcdFx0XHQmJiAhIGF0dHJpYnV0ZXNbIGF0dHIuY29uZGl0aW9uIF1cclxuXHRcdFx0KVxyXG5cdFx0KSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gY3VycmVudENvbnRyb2wuYXR0cnMuZmlsdGVyKCAoIHsgaGVscCA9ICcnLCBhdHRyTmFtZSwgbGFiZWwsIC4uLmF0dHIgfSApID0+IHtcclxuXHRcdGNvbnN0IGlzUmVnaXN0ZXJBdHRyaWJ1dGUgPSAoIGF0dHJOYW1lIGluIGF0dHJpYnV0ZXMgKTtcclxuXHRcdGNvbnN0IHZhbGlkQ29uZGl0aW9uID0gaXNWYWxpZENvbmRpdGlvbiggYXR0ciApO1xyXG5cdFx0Y29uc3QgaXNIaWRkZW4gPSAoXHJcblx0XHRcdGF0dHJOYW1lIGluIGF0dHJzU2V0dGluZ3NcclxuXHRcdFx0JiYgJ3Nob3cnIGluIGF0dHJzU2V0dGluZ3NbIGF0dHJOYW1lIF1cclxuXHRcdFx0JiYgZmFsc2UgPT09IGF0dHJzU2V0dGluZ3NbIGF0dHJOYW1lIF0uc2hvd1xyXG5cdFx0KTtcclxuXHJcblx0XHRyZXR1cm4gKCBpc1JlZ2lzdGVyQXR0cmlidXRlICYmIHZhbGlkQ29uZGl0aW9uICYmICEgaXNIaWRkZW4gKVxyXG5cdH0gKTtcclxufVxyXG5cclxuZnVuY3Rpb24gRmllbGRDb250cm9sKCBwcm9wcyApIHtcclxuXHRsZXQge1xyXG5cdFx0XHRzZXRBdHRyaWJ1dGVzLFxyXG5cdFx0XHRhdHRyaWJ1dGVzLFxyXG5cdFx0XHRlZGl0UHJvcHM6IHtcclxuXHRcdFx0XHRhdHRySGVscCAgPSAoKSA9PiAnJyxcclxuXHRcdFx0XHRibG9ja05hbWUgPSAnJyxcclxuXHRcdFx0fSxcclxuXHRcdFx0ZmllbGRDb250cm9scyA9IFtdLFxyXG5cdFx0XHRhdXRvQ29tcGxldGVMYWJlbCA9IHRydWVcclxuXHRcdH0gPSBwcm9wcztcclxuXHJcblx0aWYgKCAhIGZpZWxkQ29udHJvbHMubGVuZ3RoICkge1xyXG5cdFx0ZmllbGRDb250cm9scyA9IGZpbHRlckZpZWxkQ29udHJvbHMoIHByb3BzICk7XHJcblx0fVxyXG5cclxuXHRjb25zdCBvbkNoYW5nZVZhbHVlID0gKCB2YWx1ZSwga2V5ICkgPT4ge1xyXG5cdFx0c2V0QXR0cmlidXRlcyggeyBbIGtleSBdOiB2YWx1ZSB9ICk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIGZpZWxkQ29udHJvbHMubWFwKCAoIHsgaGVscCA9ICcnLCBhdHRyTmFtZSwgbGFiZWwsIC4uLmF0dHIgfSApID0+IHtcclxuXHRcdHN3aXRjaCAoIGF0dHIudHlwZSApIHtcclxuXHRcdFx0Y2FzZSAndGV4dCc6XHJcblx0XHRcdFx0cmV0dXJuIDxUZXh0Q29udHJvbFxyXG5cdFx0XHRcdFx0a2V5PXsgYCR7IGF0dHIudHlwZSB9LSR7IGF0dHJOYW1lIH0tVGV4dENvbnRyb2xgIH1cclxuXHRcdFx0XHRcdGxhYmVsPXsgbGFiZWwgfVxyXG5cdFx0XHRcdFx0aGVscD17IGhlbHAgfVxyXG5cdFx0XHRcdFx0dmFsdWU9eyBhdHRyaWJ1dGVzWyBhdHRyTmFtZSBdIH1cclxuXHRcdFx0XHRcdG9uQ2hhbmdlPXsgbmV3VmFsID0+IG9uQ2hhbmdlVmFsdWUoIG5ld1ZhbCwgYXR0ck5hbWUgKSB9XHJcblx0XHRcdFx0XHRvbkJsdXI9eyAoKSA9PiB7XHJcblx0XHRcdFx0XHRcdGlmICggJ2xhYmVsJyA9PT0gYXR0ck5hbWVcclxuXHRcdFx0XHRcdFx0XHQmJiAxIDwgYXR0cmlidXRlcy5sYWJlbC5sZW5ndGhcclxuXHRcdFx0XHRcdFx0XHQmJiAoICEgYXR0cmlidXRlcy5uYW1lIHx8ICdmaWVsZF9uYW1lJyA9PT0gYXR0cmlidXRlcy5uYW1lIClcclxuXHRcdFx0XHRcdFx0XHQmJiBhdXRvQ29tcGxldGVMYWJlbFxyXG5cdFx0XHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCBnZXRDb252ZXJ0ZWROYW1lKCBhdHRyaWJ1dGVzLmxhYmVsICksICduYW1lJyApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9IH1cclxuXHRcdFx0XHQvPjtcclxuXHRcdFx0Y2FzZSAnZHluYW1pY190ZXh0JzpcclxuXHRcdFx0XHRyZXR1cm4gPEZpZWxkV2l0aFByZXNldFxyXG5cdFx0XHRcdFx0a2V5PXsgYCR7IGF0dHIudHlwZSB9LSR7IGF0dHJOYW1lIH0tRmllbGRXaXRoUHJlc2V0YCB9XHJcblx0XHRcdFx0XHRNb2RhbEVkaXRvcj17ICggeyBhY3Rpb25DbGljaywgb25SZXF1ZXN0Q2xvc2UgfSApID0+IDxEeW5hbWljUHJlc2V0XHJcblx0XHRcdFx0XHRcdHZhbHVlPXsgYXR0cmlidXRlc1sgYXR0ck5hbWUgXSB9XHJcblx0XHRcdFx0XHRcdGlzU2F2ZUFjdGlvbj17IGFjdGlvbkNsaWNrIH1cclxuXHRcdFx0XHRcdFx0b25TYXZlUHJlc2V0PXsgbmV3VmFsID0+IHtcclxuXHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCBuZXdWYWwsIGF0dHJOYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHRcdG9uVW5Nb3VudD17IG9uUmVxdWVzdENsb3NlIH1cclxuXHRcdFx0XHRcdC8+IH1cclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHQ8VGV4dENvbnRyb2xcclxuXHRcdFx0XHRcdFx0a2V5PXsgYCR7IGF0dHIudHlwZSB9LSR7IGF0dHJOYW1lIH0tVGV4dENvbnRyb2xEeW5hbWljYCB9XHJcblx0XHRcdFx0XHRcdGxhYmVsPXsgbGFiZWwgfVxyXG5cdFx0XHRcdFx0XHRoZWxwPXsgaGVscCB8fCBhdHRySGVscCggYXR0ck5hbWUgKSB9XHJcblx0XHRcdFx0XHRcdHZhbHVlPXsgYXR0cmlidXRlc1sgYXR0ck5hbWUgXSB9XHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlPXsgbmV3VmFsID0+IHtcclxuXHRcdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCBuZXdWYWwsIGF0dHJOYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdDwvRmllbGRXaXRoUHJlc2V0PjtcclxuXHRcdFx0Y2FzZSAnc2VsZWN0JzpcclxuXHRcdFx0XHRyZXR1cm4gPFNlbGVjdENvbnRyb2xcclxuXHRcdFx0XHRcdGtleT17IGAkeyBhdHRyLnR5cGUgfS0keyBhdHRyTmFtZSB9LVNlbGVjdENvbnRyb2xgIH1cclxuXHRcdFx0XHRcdGxhYmVsPXsgbGFiZWwgfVxyXG5cdFx0XHRcdFx0aGVscD17IGhlbHAgfHwgYXR0ckhlbHAoIGF0dHJOYW1lICkgfVxyXG5cdFx0XHRcdFx0dmFsdWU9eyBhdHRyaWJ1dGVzWyBhdHRyTmFtZSBdIH1cclxuXHRcdFx0XHRcdG9wdGlvbnM9eyBhdHRyLm9wdGlvbnMgfVxyXG5cdFx0XHRcdFx0b25DaGFuZ2U9eyBuZXdWYWwgPT4ge1xyXG5cdFx0XHRcdFx0XHRvbkNoYW5nZVZhbHVlKCBuZXdWYWwsIGF0dHJOYW1lIClcclxuXHRcdFx0XHRcdH0gfVxyXG5cdFx0XHRcdC8+O1xyXG5cdFx0XHRjYXNlICd0b2dnbGUnOlxyXG5cdFx0XHRcdHJldHVybiA8VG9nZ2xlQ29udHJvbFxyXG5cdFx0XHRcdFx0a2V5PXsgYCR7IGF0dHIudHlwZSB9LSR7IGF0dHJOYW1lIH0tVG9nZ2xlQ29udHJvbGAgfVxyXG5cdFx0XHRcdFx0bGFiZWw9eyBsYWJlbCB9XHJcblx0XHRcdFx0XHRoZWxwPXsgaGVscCB8fCBhdHRySGVscCggYXR0ck5hbWUgKSB9XHJcblx0XHRcdFx0XHRjaGVja2VkPXsgYXR0cmlidXRlc1sgYXR0ck5hbWUgXSB9XHJcblx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbCA9PiB7XHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlVmFsdWUoIG5ld1ZhbCwgYXR0ck5hbWUgKVxyXG5cdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0Lz47XHJcblx0XHRcdGNhc2UgJ251bWJlcic6XHJcblx0XHRcdFx0cmV0dXJuIDxCYXNlQ29udHJvbFxyXG5cdFx0XHRcdFx0a2V5PXsgYCR7IGF0dHIudHlwZSB9LSR7IGF0dHJOYW1lIH0tQmFzZUNvbnRyb2xgIH1cclxuXHRcdFx0XHRcdGxhYmVsPXsgbGFiZWwgfVxyXG5cdFx0XHRcdD5cclxuXHRcdFx0XHRcdDxOdW1iZXJDb250cm9sXHJcblx0XHRcdFx0XHRcdGtleT17IGAkeyBhdHRyLnR5cGUgfS0keyBhdHRyTmFtZSB9LU51bWJlckNvbnRyb2xgIH1cclxuXHRcdFx0XHRcdFx0dmFsdWU9eyBhdHRyaWJ1dGVzWyBhdHRyTmFtZSBdIH1cclxuXHRcdFx0XHRcdFx0b25DaGFuZ2U9eyBuZXdWYWwgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlVmFsdWUoIE51bWJlciggbmV3VmFsICksIGF0dHJOYW1lIClcclxuXHRcdFx0XHRcdFx0fSB9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPXsgJ2NvbXBvbmVudHMtYmFzZS1jb250cm9sX19oZWxwJyB9XHJcblx0XHRcdFx0XHQgICBzdHlsZT17IHtcclxuXHRcdFx0XHRcdFx0ICAgY29sb3I6ICdyZ2IoMTE3LCAxMTcsIDExNyknLFxyXG5cdFx0XHRcdFx0ICAgfSB9PnsgaGVscCB8fCBhdHRySGVscCggYXR0ck5hbWUgKSB9PC9wPlxyXG5cdFx0XHRcdDwvQmFzZUNvbnRyb2w+O1xyXG5cdFx0fVxyXG5cclxuXHR9ICk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBHZW5lcmFsRmllbGRzKCBwcm9wcyApIHtcclxuXHRjb25zdCBjdXJyZW50Q29udHJvbCA9IENvbnRyb2xzU2V0dGluZ3MoKS5nZW5lcmFsO1xyXG5cclxuXHRyZXR1cm4gPFBhbmVsQm9keSB0aXRsZT17IGN1cnJlbnRDb250cm9sLmxhYmVsIH0ga2V5PXsgJ2pldC1mb3JtLWdlbmVyYWwtZmllbGRzJyB9PlxyXG5cdFx0PEZpZWxkQ29udHJvbFxyXG5cdFx0XHR0eXBlPSdnZW5lcmFsJ1xyXG5cdFx0XHRrZXk9eyAnamV0LWZvcm0tZ2VuZXJhbC1maWVsZHMtY29tcG9uZW50JyB9XHJcblx0XHRcdHsgLi4ucHJvcHMgfVxyXG5cdFx0Lz5cclxuXHRcdDxGaWVsZENvbnRyb2xcclxuXHRcdFx0dHlwZT0nY3VzdG9tX2dlbmVyYWwnXHJcblx0XHRcdGtleT17ICdqZXQtZm9ybS1nZW5lcmFsLWN1c3RvbS1maWVsZHMtY29tcG9uZW50JyB9XHJcblx0XHRcdHsgLi4ucHJvcHMgfVxyXG5cdFx0Lz5cclxuXHQ8L1BhbmVsQm9keT47XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEFkdmFuY2VkRmllbGRzKCBwcm9wcyApIHtcclxuXHRjb25zdCBjdXJyZW50Q29udHJvbCA9IENvbnRyb2xzU2V0dGluZ3MoKS5hZHZhbmNlZDtcclxuXHJcblx0cmV0dXJuIDxQYW5lbEJvZHkgdGl0bGU9eyBjdXJyZW50Q29udHJvbC5sYWJlbCB9IGtleT17ICdqZXQtZm9ybS1hZHZhbmNlZC1maWVsZHMnIH0gaW5pdGlhbE9wZW49eyBmYWxzZSB9PlxyXG5cdFx0PEZpZWxkQ29udHJvbFxyXG5cdFx0XHR0eXBlPSdhZHZhbmNlZCdcclxuXHRcdFx0a2V5PXsgJ2pldC1mb3JtLWFkdmFuY2VkLWZpZWxkcy1jb21wb25lbnQnIH1cclxuXHRcdFx0eyAuLi5wcm9wcyB9XHJcblx0XHQvPlxyXG5cdFx0PEZpZWxkQ29udHJvbFxyXG5cdFx0XHR0eXBlPSdjdXN0b21fYWR2YW5jZWQnXHJcblx0XHRcdGtleT17ICdqZXQtZm9ybS1hZHZhbmNlZC1jdXN0b20tZmllbGRzLWNvbXBvbmVudCcgfVxyXG5cdFx0XHR7IC4uLnByb3BzIH1cclxuXHRcdC8+XHJcblx0PC9QYW5lbEJvZHk+O1xyXG59XHJcblxyXG5mdW5jdGlvbiBUb29sQmFyRmllbGRzKCBwcm9wcyApIHtcclxuXHJcblx0Y29uc3Qge1xyXG5cdFx0XHQgIGVkaXRQcm9wczogeyB1bmlxS2V5IH0sXHJcblx0XHRcdCAgY2hpbGRyZW4gICAgPSBbXSxcclxuXHRcdFx0ICBkaXNwbGF5TmFtZSA9IHRydWUsXHJcblx0XHRcdCAgYXR0cmlidXRlcyxcclxuXHRcdFx0ICBzZXRBdHRyaWJ1dGVzLFxyXG5cdFx0ICB9ID0gcHJvcHM7XHJcblxyXG5cdGNvbnN0IGRpc3BsYXlOb3RpY2UgPSB1c2VTdWNjZXNzTm90aWNlKCBgQ29waWVkIFwiJHsgYXR0cmlidXRlcy5uYW1lIH1cIiB0byBjbGlwYm9hcmQuYCApO1xyXG5cclxuXHRyZXR1cm4gPEJsb2NrQ29udHJvbHMga2V5PXsgdW5pcUtleSggJ1Rvb2xCYXJGaWVsZHMtQmxvY2tDb250cm9scycgKSB9PlxyXG5cdFx0PFRvb2xiYXJHcm91cCBrZXk9eyB1bmlxS2V5KCAnVG9vbEJhckZpZWxkcy1Ub29sYmFyR3JvdXAnICkgfT5cclxuXHRcdFx0PEZsZXhcclxuXHRcdFx0XHRhbGlnbj17ICdjZW50ZXInIH1cclxuXHRcdFx0XHRqdXN0aWZ5PXsgJ2NlbnRlcicgfVxyXG5cdFx0XHRcdGNsYXNzTmFtZT17ICdqZXQtZm9ybS10b2dnbGUtYm94JyB9XHJcblx0XHRcdD5cclxuXHRcdFx0XHR7IGRpc3BsYXlOYW1lICYmIDxkaXYgY2xhc3NOYW1lPXsnamV0LWlucHV0LXdpdGgtYnV0dG9uJ30+XHJcblx0XHRcdFx0XHQ8Q2xpcGJvYXJkQnV0dG9uXHJcblx0XHRcdFx0XHRcdGlzU21hbGxcclxuXHRcdFx0XHRcdFx0aWNvbj0nYWRtaW4tcGFnZSdcclxuXHRcdFx0XHRcdFx0c2hvd1Rvb2x0aXBcclxuXHRcdFx0XHRcdFx0c2hvcnRjdXQ9J0NvcHkgbmFtZSdcclxuXHRcdFx0XHRcdFx0dGV4dD17IGF0dHJpYnV0ZXMubmFtZSB9XHJcblx0XHRcdFx0XHRcdG9uQ29weT17ICgpID0+IGRpc3BsYXlOb3RpY2UoIHRydWUgKSB9XHJcblx0XHRcdFx0XHRcdG9uRmluaXNoQ29weT17ICgpID0+IGRpc3BsYXlOb3RpY2UoIGZhbHNlICkgfVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdDxUZXh0Q29udHJvbFxyXG5cdFx0XHRcdFx0XHR2YWx1ZT17IGF0dHJpYnV0ZXMubmFtZSB9XHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlPXsgbmFtZSA9PiBzZXRBdHRyaWJ1dGVzKCB7IG5hbWUgfSApIH1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0PC9kaXY+IH1cclxuXHRcdFx0XHQ8RmllbGRDb250cm9sXHJcblx0XHRcdFx0XHR0eXBlPSd0b29sYmFyJ1xyXG5cdFx0XHRcdFx0a2V5PXsgdW5pcUtleSggJ2pldC1mb3JtLXRvb2xiYXItZmllbGRzLWNvbXBvbmVudCcgKSB9XHJcblx0XHRcdFx0XHR7IC4uLnByb3BzIH1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHRcdHsgY2hpbGRyZW4gfVxyXG5cdFx0XHQ8L0ZsZXg+XHJcblx0XHQ8L1Rvb2xiYXJHcm91cD5cclxuXHQ8L0Jsb2NrQ29udHJvbHM+O1xyXG59XHJcblxyXG5leHBvcnQge1xyXG5cdEdlbmVyYWxGaWVsZHMsXHJcblx0VG9vbEJhckZpZWxkcyxcclxuXHRBZHZhbmNlZEZpZWxkcyxcclxuXHRGaWVsZENvbnRyb2wsXHJcblx0ZmlsdGVyRmllbGRDb250cm9sc1xyXG59OyIsImZ1bmN0aW9uIFBsYWNlaG9sZGVyTWVzc2FnZSggeyBzdHlsZSwgY2hpbGRyZW4gfSApIHtcclxuXHRjb25zdCBwcm9wU3R5bGUgPSB7XHJcblx0XHRmb250U2l6ZTogJzEuNWVtJyxcclxuXHRcdHBhZGRpbmc6ICcyZW0nLFxyXG5cdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcclxuXHRcdGJhY2tncm91bmRDb2xvcjogJ2FsaWNlYmx1ZScsXHJcblx0XHQuLi5zdHlsZVxyXG5cdH07XHJcblxyXG5cdHJldHVybiA8cCBzdHlsZT17IHByb3BTdHlsZSB9PnsgY2hpbGRyZW4gfTwvcD47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYWNlaG9sZGVyTWVzc2FnZTsiLCJjb25zdCB7XHJcblx0XHQgIFRleHRDb250cm9sLFxyXG5cdFx0ICBCYXNlQ29udHJvbCxcclxuXHQgIH0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuY29uc3Qge1xyXG5cdFx0ICB1c2VTdGF0ZSxcclxuXHRcdCAgdXNlRWZmZWN0LFxyXG5cdCAgfSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5jb25zdCB7IF9fIH0gPSB3cC5pMThuO1xyXG5cclxuZnVuY3Rpb24gQWN0aW9uTWVzc2FnZXMoIHByb3BzICkge1xyXG5cclxuXHRjb25zdCB7XHJcblx0XHRcdCAgc2V0dGluZ3MsXHJcblx0XHRcdCAgc291cmNlLFxyXG5cdFx0XHQgIGdldE1hcEZpZWxkLFxyXG5cdFx0XHQgIHNldE1hcEZpZWxkLFxyXG5cdFx0XHQgIG1lc3NhZ2VzLFxyXG5cdFx0XHQgIG9uQ2hhbmdlU2V0dGluZyxcclxuXHRcdCAgfSA9IHByb3BzO1xyXG5cclxuXHR1c2VFZmZlY3QoICgpID0+IHtcclxuXHRcdGNvbnN0IG9sZE1lc3NhZ2VzID0gc2V0dGluZ3MubWVzc2FnZXMgfHwge307XHJcblx0XHRjb25zdCBtZXNzYWdlcyA9IHt9O1xyXG5cclxuXHRcdE9iamVjdC5lbnRyaWVzKCBzb3VyY2UuX19tZXNzYWdlcyApLmZvckVhY2goICggWyB0eXBlLCBkYXRhIF0gKSA9PiB7XHJcblx0XHRcdGlmICggISBvbGRNZXNzYWdlc1sgdHlwZSBdICkge1xyXG5cdFx0XHRcdG1lc3NhZ2VzWyB0eXBlIF0gPSBkYXRhLnZhbHVlO1xyXG5cdFx0XHR9XHJcblx0XHR9IClcclxuXHJcblx0XHRpZiAoIG1lc3NhZ2VzICkge1xyXG5cdFx0XHRvbkNoYW5nZVNldHRpbmcoIHsgLi4ub2xkTWVzc2FnZXMsIC4uLm1lc3NhZ2VzIH0sICdtZXNzYWdlcycgKTtcclxuXHRcdH1cclxuXHR9LCBbXSApO1xyXG5cclxuXHRjb25zdCBzZXRNZXNzYWdlID0gKCB2YWx1ZSwgbmFtZUZpZWxkICkgPT4ge1xyXG5cdFx0Y29uc3Qgc291cmNlID0gJ21lc3NhZ2VzJztcclxuXHJcblx0XHRzZXRNYXBGaWVsZCggeyB2YWx1ZSwgbmFtZUZpZWxkLCBzb3VyY2UgfSApO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IGdldE1lc3NhZ2UgPSBuYW1lID0+IHtcclxuXHRcdGNvbnN0IHNvdXJjZSA9ICdtZXNzYWdlcyc7XHJcblxyXG5cdFx0cmV0dXJuIGdldE1hcEZpZWxkKCB7IG5hbWUsIHNvdXJjZSB9IClcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gPEJhc2VDb250cm9sXHJcblx0XHRsYWJlbD17IF9fKCAnTWVzc2FnZXMgU2V0dGluZ3M6JyApIH1cclxuXHRcdGtleT0nbWVzc2FnZXNfc2V0dGluZ3NfZmllbGRzJ1xyXG5cdD5cclxuXHRcdDxkaXYgY2xhc3NOYW1lPSdqZXQtdXNlci1maWVsZHMtbWFwX19saXN0Jz5cclxuXHRcdFx0eyBzZXR0aW5ncy5tZXNzYWdlcyAmJiBPYmplY3QuZW50cmllcyggc2V0dGluZ3MubWVzc2FnZXMgKVxyXG5cdFx0XHRcdC5tYXAoICggWyB0eXBlLCBkYXRhIF0sIGlkICkgPT4gPGRpdlxyXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9XCJqZXQtdXNlci1tZXRhX19yb3dcIlxyXG5cdFx0XHRcdFx0XHRrZXk9eyAnbWVzc2FnZV8nICsgdHlwZSArIGlkIH1cclxuXHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0PFRleHRDb250cm9sXHJcblx0XHRcdFx0XHRcdFx0a2V5PXsgdHlwZSArIGlkIH1cclxuXHRcdFx0XHRcdFx0XHRsYWJlbD17IG1lc3NhZ2VzKCB0eXBlICkubGFiZWwgfVxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlPXsgZ2V0TWVzc2FnZSggdHlwZSApIH1cclxuXHRcdFx0XHRcdFx0XHRvbkNoYW5nZT17IG5ld1ZhbHVlID0+IHNldE1lc3NhZ2UoIG5ld1ZhbHVlLCB0eXBlICkgfVxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0PC9kaXY+LFxyXG5cdFx0XHRcdCkgfVxyXG5cclxuXHRcdDwvZGl2PlxyXG5cdDwvQmFzZUNvbnRyb2w+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBY3Rpb25NZXNzYWdlczsiLCJmdW5jdGlvbiBIb3Jpem9udGFsTGluZSggcHJvcHMgKSB7XHJcblx0cmV0dXJuIDxociBzdHlsZT17IHsgLi4ucHJvcHMgfSB9Lz47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhvcml6b250YWxMaW5lOyIsImltcG9ydCBSZXF1ZXN0QnV0dG9uIGZyb20gXCIuL3JlcXVlc3QtYnV0dG9uXCI7XHJcbmltcG9ydCB7IHVzZVN0YXRlTG9hZGluZ0NsYXNzZXMgfSBmcm9tIFwiLi4vaGVscGVycy9ob29rcy9ob29rcy1oZWxwZXJcIjtcclxuXHJcbmZ1bmN0aW9uIFJlcXVlc3RMb2FkaW5nQnV0dG9uKCB7XHJcblx0XHRcdFx0XHRcdFx0XHQgICBsYWJlbCxcclxuXHRcdFx0XHRcdFx0XHRcdCAgIGFqYXhBcmdzID0ge30sXHJcblx0XHRcdFx0XHRcdFx0XHQgICBvblN1Y2Nlc3NSZXF1ZXN0ID0gKCkgPT4ge30sXHJcblx0XHRcdFx0XHRcdFx0XHQgICBvbkZhaWxSZXF1ZXN0ID0gKCkgPT4ge30sXHJcblx0XHRcdFx0XHRcdFx0ICAgfSApIHtcclxuXHJcblx0Y29uc3QgW1xyXG5cdFx0Y2xhc3NOYW1lLFxyXG5cdFx0c2V0TG9hZGluZ0NsYXNzLFxyXG5cdFx0Y2xlYXJMb2FkaW5nQ2xhc3NcclxuXHRdID0gdXNlU3RhdGVMb2FkaW5nQ2xhc3NlcygpO1xyXG5cclxuXHRyZXR1cm4gPFJlcXVlc3RCdXR0b25cclxuXHRcdGFqYXhBcmdzPXsgYWpheEFyZ3MgfVxyXG5cdFx0bGFiZWw9eyBsYWJlbCB9XHJcblx0XHRvbkxvYWRpbmc9eyBzZXRMb2FkaW5nQ2xhc3MgfVxyXG5cdFx0b25TdWNjZXNzUmVxdWVzdD17IHJlc3BvbnNlID0+IHtcclxuXHRcdFx0Y2xlYXJMb2FkaW5nQ2xhc3MoKTtcclxuXHRcdFx0b25TdWNjZXNzUmVxdWVzdCggcmVzcG9uc2UgKVxyXG5cdFx0fSB9XHJcblx0XHRvbkZhaWxSZXF1ZXN0PXsgKCkgPT4ge1xyXG5cdFx0XHRjbGVhckxvYWRpbmdDbGFzcygpO1xyXG5cdFx0XHRvbkZhaWxSZXF1ZXN0KCk7XHJcblx0XHR9IH1cclxuXHRcdGNsYXNzTmFtZT17IGNsYXNzTmFtZSB9XHJcblx0PlxyXG5cdFx0PGkgY2xhc3NOYW1lPVwiZGFzaGljb25zXCIvPlxyXG5cdDwvUmVxdWVzdEJ1dHRvbj47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlcXVlc3RMb2FkaW5nQnV0dG9uOyIsImltcG9ydCB7XHJcblx0RmllbGRDb250cm9sLFxyXG5cdGZpbHRlckZpZWxkQ29udHJvbHMsXHJcbn0gZnJvbSAnLi9maWVsZC1jb250cm9sJztcclxuXHJcbmNvbnN0IHsgX18gfSA9IHdwLmkxOG47XHJcbmNvbnN0IHsgUGFuZWxCb2R5IH0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRmllbGRTZXR0aW5nc1dyYXBwZXIoIHByb3BzICkge1xyXG5cdGNvbnN0IHtcclxuXHRcdFx0ICB0aXRsZSxcclxuXHRcdFx0ICBjaGlsZHJlbixcclxuXHRcdFx0ICBlZGl0UHJvcHM6IHsgdW5pcUtleSA9IHZhbCA9PiB2YWwgfSxcclxuXHRcdCAgfSA9IHByb3BzO1xyXG5cclxuXHRjb25zdCBmaWVsZENvbnRyb2xzID0gZmlsdGVyRmllbGRDb250cm9scyggeyAuLi5wcm9wcywgdHlwZTogJ2N1c3RvbV9zZXR0aW5ncycgfSApO1xyXG5cclxuXHRyZXR1cm4gQm9vbGVhbiggZmllbGRDb250cm9scy5sZW5ndGggfHwgY2hpbGRyZW4gKSAmJiA8UGFuZWxCb2R5XHJcblx0XHR0aXRsZT17IHRpdGxlIHx8IF9fKCAnRmllbGQgU2V0dGluZ3MnICkgfVxyXG5cdD5cclxuXHRcdHsgY2hpbGRyZW4gfVxyXG5cdFx0PEZpZWxkQ29udHJvbFxyXG5cdFx0XHR0eXBlPSdjdXN0b21fc2V0dGluZ3MnXHJcblx0XHRcdGZpZWxkQ29udHJvbHM9eyBmaWVsZENvbnRyb2xzIH1cclxuXHRcdFx0a2V5PXsgdW5pcUtleSggJ2N1c3RvbVNldHRpbmdzRmllbGRzJyApIH1cclxuXHRcdFx0eyAuLi5wcm9wcyB9XHJcblx0XHQvPlxyXG5cdDwvUGFuZWxCb2R5PjtcclxufSIsImZ1bmN0aW9uIEJhc2VIZWxwKCB7XHJcblx0XHRcdFx0XHQgICBjaGlsZHJlbixcclxuXHRcdFx0XHRcdCAgIHN0eWxlID0ge30sXHJcblx0XHRcdFx0ICAgfSApIHtcclxuXHRyZXR1cm4gPHBcclxuXHRcdGNsYXNzTmFtZT17ICdqZXQtZmItYmFzZS1jb250cm9sX19oZWxwJyB9XHJcblx0XHRzdHlsZT17IHtcclxuXHRcdFx0Zm9udFNpemU6ICcxMnB4JyxcclxuXHRcdFx0Zm9udFN0eWxlOiAnbm9ybWFsJyxcclxuXHRcdFx0Y29sb3I6ICdyZ2IoMTE3LCAxMTcsIDExNyknLFxyXG5cdFx0XHRtYXJnaW5Ub3A6ICcwcHgnLFxyXG5cdFx0XHQuLi5zdHlsZSxcclxuXHRcdH0gfVxyXG5cdD5cclxuXHRcdHsgY2hpbGRyZW4gfVxyXG5cdDwvcD47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJhc2VIZWxwOyIsImltcG9ydCBSZXF1ZXN0QnV0dG9uIGZyb20gJy4vcmVxdWVzdC1idXR0b24nO1xyXG5pbXBvcnQgeyB3aXRoRGlzcGF0Y2hBY3Rpb25Mb2FkaW5nLCB3aXRoU2VsZWN0QWN0aW9uTG9hZGluZyB9IGZyb20gJy4uL2hlbHBlcnMvaG9va3MvaG9va3MtaGVscGVyJztcclxuXHJcbmNvbnN0IHsgY29tcG9zZSB9ID0gd3AuY29tcG9zZTtcclxuXHJcbmNvbnN0IHtcclxuXHR3aXRoU2VsZWN0LFxyXG5cdHdpdGhEaXNwYXRjaCxcclxufSA9IHdwLmRhdGE7XHJcblxyXG5cclxuZnVuY3Rpb24gRmV0Y2hBamF4QnV0dG9uKCB7XHJcblx0aW5pdGlhbExhYmVsID0gJ1ZhbGlkJyxcclxuXHRsYWJlbCA9ICdJblZhbGlkJyxcclxuXHRhamF4QXJncyA9IHt9LFxyXG5cdGxvYWRpbmdTdGF0ZSxcclxuXHRzZXRMb2FkaW5nLFxyXG5cdGlkLFxyXG5cdHNldFJlc3VsdFN1Y2Nlc3MsXHJcblx0c2V0UmVzdWx0RmFpbCxcclxufSApIHtcclxuXHJcblx0Y29uc3QgZ2V0TGFiZWwgPSAoKSA9PiB7XHJcblx0XHRpZiAoIC0gMSA9PT0gbG9hZGluZ1N0YXRlLmlkICYmIGluaXRpYWxMYWJlbCApIHtcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxMYWJlbDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbGFiZWw7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIDxSZXF1ZXN0QnV0dG9uXHJcblx0XHRkaXNhYmxlZD17IGxvYWRpbmdTdGF0ZS5sb2FkaW5nIH1cclxuXHRcdGFqYXhBcmdzPXsgYWpheEFyZ3MgfVxyXG5cdFx0bGFiZWw9eyBnZXRMYWJlbCgpIH1cclxuXHRcdG9uTG9hZGluZz17ICgpID0+IHtcclxuXHRcdFx0c2V0TG9hZGluZyggaWQgKTtcclxuXHRcdH0gfVxyXG5cdFx0b25TdWNjZXNzUmVxdWVzdD17IHJlc3BvbnNlID0+IHtcclxuXHRcdFx0c2V0UmVzdWx0U3VjY2VzcyggaWQsIHJlc3BvbnNlICk7XHJcblx0XHR9IH1cclxuXHRcdG9uRmFpbFJlcXVlc3Q9eyAoKSA9PiBzZXRSZXN1bHRGYWlsKCBpZCApIH1cclxuXHRcdGNsYXNzTmFtZT17IGxvYWRpbmdTdGF0ZS5idXR0b25DbGFzc05hbWUgfVxyXG5cdD5cclxuXHRcdDxpIGNsYXNzTmFtZT1cImRhc2hpY29uc1wiLz5cclxuXHQ8L1JlcXVlc3RCdXR0b24+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb21wb3NlKFxyXG5cdHdpdGhTZWxlY3QoIHdpdGhTZWxlY3RBY3Rpb25Mb2FkaW5nICksXHJcblx0d2l0aERpc3BhdGNoKCB3aXRoRGlzcGF0Y2hBY3Rpb25Mb2FkaW5nICksXHJcbikoIEZldGNoQWpheEJ1dHRvbiApOyIsImltcG9ydCB7IHdpdGhDdXJyZW50QWN0aW9uIH0gZnJvbSAnLi4vaGVscGVycy9ob29rcy9ob29rcy1oZWxwZXInO1xyXG5pbXBvcnQgRmV0Y2hBamF4QnV0dG9uIGZyb20gJy4vZmV0Y2gtYWpheC1idXR0b24nO1xyXG5cclxuY29uc3QgeyBjb21wb3NlIH0gPSB3cC5jb21wb3NlO1xyXG5cclxuY29uc3Qge1xyXG5cdHdpdGhTZWxlY3QsXHJcblx0d2l0aERpc3BhdGNoLFxyXG59ID0gd3AuZGF0YTtcclxuXHJcblxyXG5mdW5jdGlvbiBWYWxpZGF0ZUJ1dHRvbldpdGhTdG9yZSgge1xyXG5cdGN1cnJlbnRBY3Rpb24sXHJcblx0Li4ucHJvcHNcclxufSApIHtcclxuXHJcblx0cmV0dXJuIDxGZXRjaEFqYXhCdXR0b25cclxuXHRcdGlkPXsgY3VycmVudEFjdGlvbi5pZCB9XHJcblx0XHR7IC4uLnByb3BzIH1cclxuXHQvPjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZShcclxuXHR3aXRoU2VsZWN0KCB3aXRoQ3VycmVudEFjdGlvbiApLFxyXG4pKCBWYWxpZGF0ZUJ1dHRvbldpdGhTdG9yZSApOyIsImltcG9ydCBSZXF1ZXN0QnV0dG9uIGZyb20gJy4vcmVxdWVzdC1idXR0b24nO1xyXG5pbXBvcnQgeyB3aXRoRGlzcGF0Y2hBY3Rpb25Mb2FkaW5nLCB3aXRoU2VsZWN0QWN0aW9uTG9hZGluZyB9IGZyb20gJy4uL2hlbHBlcnMvaG9va3MvaG9va3MtaGVscGVyJztcclxuXHJcbmNvbnN0IHsgY29tcG9zZSB9ID0gd3AuY29tcG9zZTtcclxuXHJcbmNvbnN0IHtcclxuXHR3aXRoU2VsZWN0LFxyXG5cdHdpdGhEaXNwYXRjaCxcclxufSA9IHdwLmRhdGE7XHJcblxyXG5jb25zdCB7IGFwaUZldGNoIH0gPSB3cDtcclxuXHJcblxyXG5mdW5jdGlvbiBGZXRjaEFwaUJ1dHRvbigge1xyXG5cdGluaXRpYWxMYWJlbCA9ICdWYWxpZCcsXHJcblx0bGFiZWwgPSAnSW5WYWxpZCcsXHJcblx0YXBpQXJncyA9IHt9LFxyXG5cdGxvYWRpbmdTdGF0ZSxcclxuXHRzZXRMb2FkaW5nLFxyXG5cdGlkLFxyXG5cdHNldFJlc3VsdFN1Y2Nlc3MsXHJcblx0c2V0UmVzdWx0RmFpbCxcclxuXHRvbkxvYWRpbmcgPSAoKSA9PiB7fSxcclxuXHRvblN1Y2Nlc3MgPSAoKSA9PiB7fSxcclxuXHRvbkZhaWwgPSAoKSA9PiB7fSxcclxuXHRpc0hpZGRlbiA9IGZhbHNlLFxyXG59ICkge1xyXG5cclxuXHRjb25zdCBnZXRMYWJlbCA9ICgpID0+IHtcclxuXHRcdGlmICggKCAtIDEgPT09IGxvYWRpbmdTdGF0ZS5pZCB8fCBsb2FkaW5nU3RhdGUubG9hZGluZyApICYmIGluaXRpYWxMYWJlbCApIHtcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxMYWJlbDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbGFiZWw7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIDxSZXF1ZXN0QnV0dG9uXHJcblx0XHRkaXNhYmxlZD17IGxvYWRpbmdTdGF0ZS5sb2FkaW5nIH1cclxuXHRcdGhhc0ZldGNoZWQ9eyBsb2FkaW5nU3RhdGUuaWQgfVxyXG5cdFx0bGFiZWw9eyBnZXRMYWJlbCgpIH1cclxuXHRcdGNsYXNzTmFtZT17IGxvYWRpbmdTdGF0ZS5idXR0b25DbGFzc05hbWUgfVxyXG5cdFx0aXNIaWRkZW49eyBpc0hpZGRlbiB9XHJcblx0XHRjdXN0b21SZXF1ZXN0PXsgKCkgPT4ge1xyXG5cdFx0XHRzZXRMb2FkaW5nKCBpZCApO1xyXG5cdFx0XHRvbkxvYWRpbmcoKTtcclxuXHJcblx0XHRcdGFwaUZldGNoKCBhcGlBcmdzICkudGhlbiggcmVzcG9uc2UgPT4ge1xyXG5cdFx0XHRcdHNldFJlc3VsdFN1Y2Nlc3MoIGlkLCByZXNwb25zZSApO1xyXG5cdFx0XHRcdG9uU3VjY2VzcyggcmVzcG9uc2UgKTtcclxuXHRcdFx0fSApLmNhdGNoKCBlcnJvciA9PiB7XHJcblx0XHRcdFx0c2V0UmVzdWx0RmFpbCggaWQgKTtcclxuXHRcdFx0XHRvbkZhaWwoIGVycm9yICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH0gfVxyXG5cdD5cclxuXHRcdDxpIGNsYXNzTmFtZT1cImRhc2hpY29uc1wiLz5cclxuXHQ8L1JlcXVlc3RCdXR0b24+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb21wb3NlKFxyXG5cdHdpdGhEaXNwYXRjaCggd2l0aERpc3BhdGNoQWN0aW9uTG9hZGluZyApXHJcbikoIEZldGNoQXBpQnV0dG9uICk7IiwiaW1wb3J0IEZldGNoQXBpQnV0dG9uIGZyb20gJy4vZmV0Y2gtYXBpLWJ1dHRvbic7XHJcbmltcG9ydCB7IHdpdGhTZWxlY3RHYXRld2F5cyB9IGZyb20gJy4uL2hlbHBlcnMvaG9va3MvaG9va3MtaGVscGVyJztcclxuXHJcbmNvbnN0IHsgY29tcG9zZSB9ID0gd3AuY29tcG9zZTtcclxuXHJcbmNvbnN0IHtcclxuXHR3aXRoU2VsZWN0LFxyXG59ID0gd3AuZGF0YTtcclxuXHJcbmZ1bmN0aW9uIEdhdGV3YXlGZXRjaEJ1dHRvbigge1xyXG5cdGluaXRpYWxMYWJlbCA9ICdWYWxpZCcsXHJcblx0bGFiZWwgPSAnSW5WYWxpZCcsXHJcblx0YXBpQXJncyA9IHt9LFxyXG5cdGdhdGV3YXlSZXF1ZXN0SWQsXHJcblx0bG9hZGluZ0dhdGV3YXksXHJcblx0b25Mb2FkaW5nID0gKCkgPT4ge30sXHJcblx0b25TdWNjZXNzID0gKCkgPT4ge30sXHJcblx0b25GYWlsID0gKCkgPT4ge30sXHJcblx0aXNIaWRkZW4gPSBmYWxzZSxcclxufSApIHtcclxuXHJcblx0cmV0dXJuIDxGZXRjaEFwaUJ1dHRvblxyXG5cdFx0aWQ9eyBnYXRld2F5UmVxdWVzdElkIH1cclxuXHRcdGxvYWRpbmdTdGF0ZT17IGxvYWRpbmdHYXRld2F5IH1cclxuXHRcdGluaXRpYWxMYWJlbD17IGluaXRpYWxMYWJlbCB9XHJcblx0XHRsYWJlbD17IGxhYmVsIH1cclxuXHRcdGFwaUFyZ3M9eyBhcGlBcmdzIH1cclxuXHRcdG9uRmFpbD17IG9uRmFpbCB9XHJcblx0XHRvbkxvYWRpbmc9eyBvbkxvYWRpbmcgfVxyXG5cdFx0b25TdWNjZXNzPXsgb25TdWNjZXNzIH1cclxuXHRcdGlzSGlkZGVuPXsgaXNIaWRkZW4gfVxyXG5cdC8+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb21wb3NlKFxyXG5cdHdpdGhTZWxlY3QoIHdpdGhTZWxlY3RHYXRld2F5cyApLFxyXG4pKCBHYXRld2F5RmV0Y2hCdXR0b24gKTsiLCJleHBvcnQgZGVmYXVsdCB7XHJcblx0c2V0Q3VycmVudEFjdGlvbjogJ1NFVF9DVVJSRU5UX0FDVElPTicsXHJcblx0c2V0TG9hZGluZzogJ1NFVF9MT0FESU5HJyxcclxuXHRzZXRMb2FkaW5nUmVzdWx0OiAnU0VUX0xPQURJTkcnLFxyXG5cdHVwZGF0ZUN1cnJlbnRTZXR0aW5nczogJ1VQREFURV9BQ1RJT05fU0VUVElOR1MnLFxyXG5cdHVwZGF0ZUN1cnJlbnRDb25kaXRpb25zOiAnVVBEQVRFX0FDVElPTl9DT05ESVRJT05TJyxcclxuXHRhZGRDYWxsYmFjazogJ0FERF9DQUxMQkFDSycsXHJcblx0c2V0TWV0YTogJ1NFVF9DVVJSRU5UX01FVEEnLFxyXG5cdGNsZWFyQ3VycmVudDogJ0NMRUFSX0NVUlJFTlQnLFxyXG59IiwiaW1wb3J0IHsgaW5pdENsYXNzZXMgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2hvb2tzL2hvb2tzLWhlbHBlcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0aWQ6IC0gMSxcclxuXHRzdGF0ZTogJycsXHJcblx0c3VjY2VzczogZmFsc2UsXHJcblx0cmVzcG9uc2U6IHt9LFxyXG5cdGxvYWRpbmc6IGZhbHNlLFxyXG5cdGJ1dHRvbkNsYXNzTmFtZTogWyAuLi5pbml0Q2xhc3NlcyBdLFxyXG59OyIsImltcG9ydCBERUZBVUxUX0xPQURJTkdfU1RBVEUgZnJvbSAnLi9sb2FkaW5nLnN0YXRlJztcclxuXHJcbmNvbnN0IHNlbGYgPSB7XHJcblx0Z2V0TG9hZGluZ0luZGV4KCBzdGF0ZSwgYWN0aW9uSWQgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUubG9hZGluZ1N0YXRlLmZpbmRJbmRleCggYWN0aW9uID0+IGFjdGlvbi5pZCA9PT0gYWN0aW9uSWQgKTtcclxuXHR9LFxyXG5cdGdldExvYWRpbmcoIHN0YXRlLCBhY3Rpb25JZCApIHtcclxuXHRcdGNvbnN0IGFjdGlvbkluZGV4ID0gc2VsZi5nZXRMb2FkaW5nSW5kZXgoIHN0YXRlLCBhY3Rpb25JZCApO1xyXG5cclxuXHRcdHJldHVybiAtIDEgIT09IGFjdGlvbkluZGV4ID8gc3RhdGUubG9hZGluZ1N0YXRlWyBhY3Rpb25JbmRleCBdIDogeyAuLi5ERUZBVUxUX0xPQURJTkdfU1RBVEUgfTtcclxuXHR9LFxyXG5cdGdldENhbGxiYWNrKCBzdGF0ZSwgYWN0aW9uVHlwZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jYWxsYmFja3NbIGFjdGlvblR5cGUgXTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0Li4uc2VsZixcclxuXHRpc1NldHRpbmdzTW9kYWwoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuICdzZXR0aW5ncycgPT09IHN0YXRlLm1ldGE/Lm1vZGFsVHlwZTtcclxuXHR9LFxyXG5cdGlzQ29uZGl0aW9uYWxNb2RhbCggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gJ2NvbmRpdGlvbnMnID09PSBzdGF0ZS5tZXRhPy5tb2RhbFR5cGU7XHJcblx0fSxcclxuXHRnZXRNZXRhSW5kZXgoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLm1ldGE/LmluZGV4O1xyXG5cdH0sXHJcblx0Z2V0Q3VycmVudEFjdGlvbiggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuY3VycmVudEFjdGlvbjtcclxuXHR9LFxyXG5cdGdldEN1cnJlbnRDYWxsYmFjayggc3RhdGUgKSB7XHJcblx0XHRjb25zdCB0eXBlID0gc3RhdGUuY3VycmVudEFjdGlvbj8udHlwZSA/PyBmYWxzZTtcclxuXHJcblx0XHRyZXR1cm4gc2VsZi5nZXRDYWxsYmFjayggc3RhdGUsIHR5cGUgKTtcclxuXHR9LFxyXG5cdGdldEN1cnJlbnRTZXR0aW5ncyggc3RhdGUgKSB7XHJcblx0XHRjb25zdCBzZXR0aW5ncyA9IHN0YXRlLmN1cnJlbnRBY3Rpb24/LnNldHRpbmdzID8/IHt9O1xyXG5cdFx0Y29uc3QgdHlwZSA9IHN0YXRlLmN1cnJlbnRBY3Rpb24/LnR5cGUgPz8gZmFsc2U7XHJcblxyXG5cdFx0cmV0dXJuIHNldHRpbmdzWyB0eXBlIF0gPz8ge307XHJcblx0fSxcclxuXHRnZXRDdXJyZW50TG9hZGluZyggc3RhdGUgKSB7XHJcblx0XHRjb25zdCBhY3Rpb25JZCA9IHN0YXRlLmN1cnJlbnRBY3Rpb24/LmlkO1xyXG5cclxuXHRcdHJldHVybiBzZWxmLmdldExvYWRpbmcoIHN0YXRlLCBhY3Rpb25JZCApO1xyXG5cdH0sXHJcblx0ZGFuZ2VyR2V0QWxsTG9hZGluZyggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUubG9hZGluZ1N0YXRlO1xyXG5cdH0sXHJcbn0iLCJpbXBvcnQgREVGQVVMVF9MT0FESU5HX1NUQVRFIGZyb20gJy4vbG9hZGluZy5zdGF0ZSc7XHJcbmltcG9ydCB7IGluaXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vaGVscGVycy9ob29rcy9ob29rcy1oZWxwZXInO1xyXG5cclxuY29uc3QgZ2V0TG9hZGluZ0l0ZW0gPSAoIGFkZGl0aW9uYWwgPSB7fSApID0+IHtcclxuXHRjb25zdCBpdGVtID0geyAuLi5ERUZBVUxUX0xPQURJTkdfU1RBVEUgfTtcclxuXHRpZiAoIGFkZGl0aW9uYWwuc3RhdGUgKSB7XHJcblx0XHRpdGVtLmJ1dHRvbkNsYXNzTmFtZSA9IFsgLi4uaW5pdENsYXNzZXMsIGFkZGl0aW9uYWwuc3RhdGUgXTtcclxuXHR9XHJcblx0cmV0dXJuIHsgLi4uaXRlbSwgLi4uYWRkaXRpb25hbCB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyBnZXRMb2FkaW5nSXRlbSB9OyIsImltcG9ydCB7IGZyb21Mb2NhbGl6ZUhlbHBlciB9IGZyb20gXCIuL2FjdGlvbi1oZWxwZXJcIjtcclxuXHJcbmNvbnN0IHsgYXBwbHlGaWx0ZXJzIH0gPSB3cC5ob29rcztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdpdGhBY3Rpb25Mb2NhbGl6ZVNjcmlwdCggYWN0aW9uVHlwZSwgQWN0aW9uSW5zdGFuY2UgKSB7XHJcblx0Y29uc3QgbG9jYWxpemVkRGF0YSA9IGZyb21Mb2NhbGl6ZUhlbHBlciggJ2dldExvY2FsaXplZEZ1bGxQYWNrJyApKCBhY3Rpb25UeXBlICk7XHJcblxyXG5cdHJldHVybiBwcm9wcyA9PiB7XHJcblx0XHRjb25zdCBvbkNoYW5nZVNldHRpbmcgPSAoIHZhbHVlLCBrZXkgKSA9PiB7XHJcblx0XHRcdHByb3BzLm9uQ2hhbmdlKCB7XHJcblx0XHRcdFx0Li4ucHJvcHMuc2V0dGluZ3MsXHJcblx0XHRcdFx0WyBrZXkgXTogdmFsdWUsXHJcblx0XHRcdH0gKTtcclxuXHRcdH07XHJcblxyXG5cdFx0Y29uc3Qgb25DaGFuZ2VTZXR0aW5nT2JqID0gKCB2YWx1ZSApID0+IHtcclxuXHRcdFx0cHJvcHMub25DaGFuZ2UoIHtcclxuXHRcdFx0XHQuLi5wcm9wcy5zZXR0aW5ncyxcclxuXHRcdFx0XHQuLi52YWx1ZSxcclxuXHRcdFx0fSApO1xyXG5cdFx0fTtcclxuXHJcblx0XHRjb25zdCBnZXRNYXBGaWVsZCA9ICggeyBzb3VyY2UgPSAnZmllbGRzX21hcCcsIG5hbWUgfSApID0+IHtcclxuXHRcdFx0Y29uc3Qgc2V0dGluZ3MgPSBwcm9wcy5zZXR0aW5ncztcclxuXHJcblx0XHRcdGlmICggdHlwZW9mIHNldHRpbmdzWyBzb3VyY2UgXSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHNldHRpbmdzWyBzb3VyY2UgXVsgbmFtZSBdICE9PSAndW5kZWZpbmVkJyApIHtcclxuXHRcdFx0XHRyZXR1cm4gc2V0dGluZ3NbIHNvdXJjZSBdWyBuYW1lIF07XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuICcnO1xyXG5cdFx0fTtcclxuXHJcblx0XHRjb25zdCBzZXRNYXBGaWVsZCA9ICggeyBzb3VyY2UgPSAnZmllbGRzX21hcCcsIG5hbWVGaWVsZCwgdmFsdWUgfSApID0+IHtcclxuXHRcdFx0Y29uc3QgZmllbGRzTWFwID0ge1xyXG5cdFx0XHRcdC4uLnByb3BzLnNldHRpbmdzWyBzb3VyY2UgXSxcclxuXHRcdFx0XHRbIG5hbWVGaWVsZCBdOiB2YWx1ZSxcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdHByb3BzLm9uQ2hhbmdlKCB7XHJcblx0XHRcdFx0Li4ucHJvcHMuc2V0dGluZ3MsXHJcblx0XHRcdFx0WyBzb3VyY2UgXTogZmllbGRzTWFwLFxyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Y29uc3QgYWRkaXRpb25hbFByb3BzID0geyBvbkNoYW5nZVNldHRpbmcsIGdldE1hcEZpZWxkLCBzZXRNYXBGaWVsZCwgb25DaGFuZ2VTZXR0aW5nT2JqIH07XHJcblx0XHRjb25zdCByZXN1bHRQcm9wcyA9IHsgLi4ucHJvcHMsIC4uLmxvY2FsaXplZERhdGEsIC4uLmFkZGl0aW9uYWxQcm9wcyB9O1xyXG5cclxuXHRcdHJldHVybiA8PlxyXG5cdFx0XHQ8QWN0aW9uSW5zdGFuY2UgeyAuLi5yZXN1bHRQcm9wcyB9IC8+XHJcblx0XHRcdHsgYXBwbHlGaWx0ZXJzKCBgamV0LmZiLnJlbmRlci5hY3Rpb24uJHsgYWN0aW9uVHlwZSB9YCwgPD48Lz4sIHJlc3VsdFByb3BzICkgfVxyXG5cdFx0PC8+XHJcblx0fTtcclxufSIsImltcG9ydCBjb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgc2VsZWN0b3JzIGZyb20gJy4vc2VsZWN0b3JzJztcclxuaW1wb3J0IGZ1bmN0aW9ucyBmcm9tICcuL2Z1bmN0aW9ucyc7XHJcbmltcG9ydCB3aXRoQWN0aW9uTG9jYWxpemVTY3JpcHQgZnJvbSAnLi4vLi4vaGVscGVycy9hY3Rpb25zL2FjdGlvbi13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRbIGNvbnN0YW50cy5zZXRDdXJyZW50QWN0aW9uIF06ICggc3RhdGUsIGFjdGlvbiApID0+IHtcclxuXHRcdGNvbnN0IHVwZGF0ZSA9IHt9O1xyXG5cclxuXHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGFjdGlvbi5pdGVtICkge1xyXG5cdFx0XHR1cGRhdGUuY3VycmVudEFjdGlvbiA9IGFjdGlvbi5pdGVtKCBzdGF0ZS5jdXJyZW50QWN0aW9uICk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR1cGRhdGUuY3VycmVudEFjdGlvbiA9IGFjdGlvbi5pdGVtO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHQuLi51cGRhdGUsXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0WyBjb25zdGFudHMuc2V0TWV0YSBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiAoXHJcblx0XHR7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRtZXRhOiB7XHJcblx0XHRcdFx0Li4uYWN0aW9uLml0ZW0sXHJcblx0XHRcdH0sXHJcblx0XHR9XHJcblx0KSxcclxuXHRbIGNvbnN0YW50cy5jbGVhckN1cnJlbnQgXTogKCBzdGF0ZSApID0+IChcclxuXHRcdHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdGN1cnJlbnRBY3Rpb246IHt9LFxyXG5cdFx0XHRtZXRhOiB7fSxcclxuXHRcdH1cclxuXHQpLFxyXG5cdFsgY29uc3RhbnRzLnNldExvYWRpbmcgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4ge1xyXG5cdFx0Y29uc3QgYWN0aW9uSW5kZXggPSBzZWxlY3RvcnMuZ2V0TG9hZGluZ0luZGV4KCBzdGF0ZSwgYWN0aW9uLnN0YXRlLmlkICk7XHJcblx0XHRjb25zdCBsb2FkaW5nID0gWyAuLi5zdGF0ZS5sb2FkaW5nU3RhdGUgXTtcclxuXHJcblx0XHRpZiAoIC0gMSAhPT0gYWN0aW9uSW5kZXggKSB7XHJcblx0XHRcdGxvYWRpbmdbIGFjdGlvbkluZGV4IF0gPSBmdW5jdGlvbnMuZ2V0TG9hZGluZ0l0ZW0oIGFjdGlvbi5zdGF0ZSApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0bG9hZGluZy5wdXNoKCBmdW5jdGlvbnMuZ2V0TG9hZGluZ0l0ZW0oIGFjdGlvbi5zdGF0ZSApICk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdGxvYWRpbmdTdGF0ZTogbG9hZGluZyxcclxuXHRcdH07XHJcblx0fSxcclxuXHRbIGNvbnN0YW50cy51cGRhdGVDdXJyZW50U2V0dGluZ3MgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4ge1xyXG5cdFx0Y29uc3QgeyBzZXR0aW5ncywgdHlwZSB9ID0gc3RhdGUuY3VycmVudEFjdGlvbjtcclxuXHJcblx0XHRjb25zdCB1cGRhdGVTZXR0aW5ncyA9IHtcclxuXHRcdFx0Li4uc2VsZWN0b3JzLmdldEN1cnJlbnRTZXR0aW5ncyggc3RhdGUgKSxcclxuXHRcdFx0Li4uYWN0aW9uLml0ZW0sXHJcblx0XHR9O1xyXG5cclxuXHRcdHJldHVybiB7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRjdXJyZW50QWN0aW9uOiB7XHJcblx0XHRcdFx0Li4uc3RhdGUuY3VycmVudEFjdGlvbixcclxuXHRcdFx0XHRzZXR0aW5nczoge1xyXG5cdFx0XHRcdFx0Li4uc2V0dGluZ3MsXHJcblx0XHRcdFx0XHRbIHR5cGUgXTogdXBkYXRlU2V0dGluZ3MsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0fSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRbIGNvbnN0YW50cy51cGRhdGVDdXJyZW50Q29uZGl0aW9ucyBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiB7XHJcblx0XHRjb25zdCB7IGNvbmRpdGlvbnMgPSBbXSB9ID0gc3RhdGUuY3VycmVudEFjdGlvbjtcclxuXHJcblx0XHRjb25zdCB1cGRhdGUgPSAnZnVuY3Rpb24nID09PSB0eXBlb2YgYWN0aW9uLml0ZW0gPyBhY3Rpb24uaXRlbSggY29uZGl0aW9ucyApIDogYWN0aW9uLml0ZW07XHJcblxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdGN1cnJlbnRBY3Rpb246IHtcclxuXHRcdFx0XHQuLi5zdGF0ZS5jdXJyZW50QWN0aW9uLFxyXG5cdFx0XHRcdGNvbmRpdGlvbnM6IHVwZGF0ZSxcclxuXHRcdFx0fSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRbIGNvbnN0YW50cy5hZGRDYWxsYmFjayBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiAoXHJcblx0XHR7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRjYWxsYmFja3M6IHtcclxuXHRcdFx0XHQuLi5zdGF0ZS5jYWxsYmFja3MsXHJcblx0XHRcdFx0WyBhY3Rpb24uYWN0aW9uVHlwZSBdOiB3aXRoQWN0aW9uTG9jYWxpemVTY3JpcHQoIGFjdGlvbi5hY3Rpb25UeXBlLCBhY3Rpb24uY2FsbGJhY2sgKSxcclxuXHRcdFx0fSxcclxuXHRcdH1cclxuXHQpLFxyXG5cclxufTsiLCJpbXBvcnQgRnVuY3Rpb25zIGZyb20gJy4vZnVuY3Rpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRjdXJyZW50QWN0aW9uOiB7fSxcclxuXHRjYWxsYmFja3M6IHt9LFxyXG5cdG1ldGE6IHt9LFxyXG5cdGxvYWRpbmdTdGF0ZTogW1xyXG5cdFx0RnVuY3Rpb25zLmdldExvYWRpbmdJdGVtKCksXHJcblx0XSxcclxufTsiLCJpbXBvcnQgZGlzcGF0Y2hlcnMgZnJvbSAnLi9kaXNwYXRjaGVycyc7XHJcbmltcG9ydCBERUZBVUxUX1NUQVRFIGZyb20gJy4vZGVmYXVsdC5zdGF0ZSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoIHN0YXRlID0gREVGQVVMVF9TVEFURSwgYWN0aW9uICkge1xyXG5cdGNvbnN0IGNhbGxiYWNrID0gZGlzcGF0Y2hlcnNbIGFjdGlvbj8udHlwZSBdO1xyXG5cclxuXHRpZiAoIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIGNhbGxiYWNrKCBzdGF0ZSwgYWN0aW9uICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gc3RhdGU7XHJcbn0iLCJpbXBvcnQgY29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRzZXRDdXJyZW50QWN0aW9uKCBpdGVtID0ge30gKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMuc2V0Q3VycmVudEFjdGlvbixcclxuXHRcdFx0aXRlbSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRzZXRNZXRhKCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnNldE1ldGEsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0Y2xlYXJDdXJyZW50KCkge1xyXG5cdFx0cmV0dXJuIHsgdHlwZTogY29uc3RhbnRzLmNsZWFyQ3VycmVudCB9O1xyXG5cdH0sXHJcblx0c2V0TG9hZGluZyggaXRlbSApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy5zZXRMb2FkaW5nLFxyXG5cdFx0XHRzdGF0ZToge1xyXG5cdFx0XHRcdGlkOiBpdGVtLmFjdGlvbklkLFxyXG5cdFx0XHRcdHN0YXRlOiAnbG9hZGluZycsXHJcblx0XHRcdFx0bG9hZGluZzogdHJ1ZSxcclxuXHRcdFx0fSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRzZXRMb2FkaW5nUmVzdWx0KCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnNldExvYWRpbmdSZXN1bHQsXHJcblx0XHRcdHN0YXRlOiB7XHJcblx0XHRcdFx0aWQ6IGl0ZW0uYWN0aW9uSWQsXHJcblx0XHRcdFx0c3RhdGU6IGl0ZW0uc3VjY2VzcyA/ICdpcy12YWxpZCcgOiAnaXMtaW52YWxpZCcsXHJcblx0XHRcdFx0c3VjY2VzczogaXRlbS5zdWNjZXNzLFxyXG5cdFx0XHRcdHJlc3BvbnNlOiBpdGVtLnJlc3BvbnNlLFxyXG5cdFx0XHRcdGxvYWRpbmc6IGZhbHNlLFxyXG5cdFx0XHR9LFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdHVwZGF0ZUN1cnJlbnRTZXR0aW5ncyggaXRlbSApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy51cGRhdGVDdXJyZW50U2V0dGluZ3MsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0dXBkYXRlQ3VycmVudENvbmRpdGlvbnMoIGl0ZW0gKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMudXBkYXRlQ3VycmVudENvbmRpdGlvbnMsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0YWRkQ2FsbGJhY2soIGFjdGlvblR5cGUsIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLmFkZENhbGxiYWNrLFxyXG5cdFx0XHRhY3Rpb25UeXBlLFxyXG5cdFx0XHRjYWxsYmFjayxcclxuXHRcdH07XHJcblx0fSxcclxufTsiLCJpbXBvcnQgcmVkdWNlciBmcm9tICcuL3JlZHVjZXInO1xyXG5pbXBvcnQgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xyXG5pbXBvcnQgc2VsZWN0b3JzIGZyb20gJy4vc2VsZWN0b3JzJztcclxuXHJcbmNvbnN0IHsgY3JlYXRlUmVkdXhTdG9yZSB9ID0gd3AuZGF0YTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVJlZHV4U3RvcmUoICdqZXQtZm9ybXMvYWN0aW9ucycsIHtcclxuXHRyZWR1Y2VyLFxyXG5cdGFjdGlvbnMsXHJcblx0c2VsZWN0b3JzLFxyXG59ICk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IHtcclxuXHRjbGVhckdhdGV3YXk6ICdDTEVBUl9HQVRFV0FZJyxcclxuXHRjbGVhclNjZW5hcmlvOiAnQ0xFQVJfU0NFTkFSSU8nLFxyXG5cdHNldFNjZW5hcmlvOiAnU0VUX0NVUlJFTlRfR0FURVdBWV9TQ0VOQVJJTycsXHJcblx0c2V0R2F0ZXdheTogJ1NFVF9DVVJSRU5UX0dBVEVXQVknLFxyXG5cdHNldEdhdGV3YXlTcGVjaWZpYzogJ1NFVF9DVVJSRU5UX0dBVEVXQVlfU1BFQ0lGSUMnLFxyXG5cdHNldEdhdGV3YXlJbm5lcjogJ1NFVF9DVVJSRU5UX0dBVEVXQVlfSU5ORVInLFxyXG5cdHNldFJlcXVlc3Q6ICdTRVRfQ1VSUkVOVF9SRVFVRVNUJyxcclxuXHRzZXRDdXJyZW50U2NlbmFyaW86ICdTRVRfQ1VSUkVOVF9TQ0VOQVJJTycsXHJcblx0cmVnaXN0ZXJFdmVudFR5cGU6ICdSRUdJU1RFUl9FVkVOVF9UWVBFJyxcclxuXHRoYXJkU2V0R2F0ZXdheTogJ0hBUkRfU0VUX0NVUlJFTlRfR0FURVdBWScsXHJcblx0aGFyZFNldEdhdGV3YXlTcGVjaWZpYzogJ0hBUkRfU0VUX0NVUlJFTlRfR0FURVdBWV9TUEVDSUZJQydcclxufVxyXG5cclxuXHJcbiIsImNvbnN0IHNlbGVjdG9ycyA9IHtcclxuXHRnZXRDdXJyZW50UmVxdWVzdElkKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXJyZW50UmVxdWVzdC5pZDtcclxuXHR9LFxyXG5cdGdldEN1cnJlbnRSZXF1ZXN0KCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXJyZW50UmVxdWVzdDtcclxuXHR9LFxyXG5cdGdldFNjZW5hcmlvKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXJyZW50U2NlbmFyaW87XHJcblx0fSxcclxuXHRnZXRTY2VuYXJpb0lkKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXJyZW50U2NlbmFyaW8/LmlkO1xyXG5cdH0sXHJcblx0Z2V0R2F0ZXdheUlkKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXJyZW50R2F0ZXdheT8uZ2F0ZXdheTtcclxuXHR9LFxyXG5cdGdldEdhdGV3YXkoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLmN1cnJlbnRHYXRld2F5O1xyXG5cdH0sXHJcblx0Z2V0RXZlbnRUeXBlcyggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuZXZlbnRUeXBlcztcclxuXHR9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdC4uLnNlbGVjdG9ycyxcclxuXHRnZXRHYXRld2F5U3BlY2lmaWMoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLmN1cnJlbnRHYXRld2F5WyBzZWxlY3RvcnMuZ2V0R2F0ZXdheUlkKCBzdGF0ZSApIF0gfHwge307XHJcblx0fSxcclxufSIsImltcG9ydCBjb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgc2VsZWN0b3JzIGZyb20gJy4vc2VsZWN0b3JzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRbIGNvbnN0YW50cy5jbGVhckdhdGV3YXkgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4gKFxyXG5cdFx0e1xyXG5cdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0Y3VycmVudEdhdGV3YXk6IHt9LFxyXG5cdFx0fVxyXG5cdCksXHJcblx0WyBjb25zdGFudHMuY2xlYXJTY2VuYXJpbyBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiAoXHJcblx0XHR7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRjdXJyZW50U2NlbmFyaW86IHt9LFxyXG5cdFx0fVxyXG5cdCksXHJcblx0WyBjb25zdGFudHMuc2V0U2NlbmFyaW8gXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4gKFxyXG5cdFx0e1xyXG5cdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0Y3VycmVudFNjZW5hcmlvOiB7XHJcblx0XHRcdFx0Li4uc3RhdGUuY3VycmVudFNjZW5hcmlvLFxyXG5cdFx0XHRcdC4uLihcclxuXHRcdFx0XHRcdGFjdGlvbi5pdGVtIHx8IHt9XHJcblx0XHRcdFx0KSxcclxuXHRcdFx0fSxcclxuXHRcdH1cclxuXHQpLFxyXG5cdFsgY29uc3RhbnRzLnNldEdhdGV3YXkgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4gKFxyXG5cdFx0e1xyXG5cdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0Y3VycmVudEdhdGV3YXk6IHtcclxuXHRcdFx0XHQuLi5zdGF0ZS5jdXJyZW50R2F0ZXdheSxcclxuXHRcdFx0XHQuLi5hY3Rpb24uaXRlbSxcclxuXHRcdFx0fSxcclxuXHRcdH1cclxuXHQpLFxyXG5cdFsgY29uc3RhbnRzLnNldEdhdGV3YXlTcGVjaWZpYyBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiAoXHJcblx0XHR7XHJcblx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRjdXJyZW50R2F0ZXdheToge1xyXG5cdFx0XHRcdC4uLnN0YXRlLmN1cnJlbnRHYXRld2F5LFxyXG5cdFx0XHRcdFsgc3RhdGUuY3VycmVudEdhdGV3YXkuZ2F0ZXdheSBdOiB7XHJcblx0XHRcdFx0XHQuLi5zZWxlY3RvcnMuZ2V0R2F0ZXdheVNwZWNpZmljKCBzdGF0ZSApLFxyXG5cdFx0XHRcdFx0Li4uYWN0aW9uLml0ZW0sXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0fSxcclxuXHRcdH1cclxuXHQpLFxyXG5cdFsgY29uc3RhbnRzLnNldEdhdGV3YXlJbm5lciBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiB7XHJcblx0XHRjb25zdCB7IGtleSwgdmFsdWUgfSA9IGFjdGlvbi5pdGVtO1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdGN1cnJlbnRHYXRld2F5OiB7XHJcblx0XHRcdFx0Li4uc3RhdGUuY3VycmVudEdhdGV3YXksXHJcblx0XHRcdFx0WyBrZXkgXToge1xyXG5cdFx0XHRcdFx0Li4uKFxyXG5cdFx0XHRcdFx0XHRzdGF0ZS5jdXJyZW50R2F0ZXdheVsga2V5IF0gfHwge31cclxuXHRcdFx0XHRcdCksXHJcblx0XHRcdFx0XHQuLi52YWx1ZSxcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHR9LFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdFsgY29uc3RhbnRzLnNldFJlcXVlc3QgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4ge1xyXG5cdFx0Y29uc3QgaXRlbXMgPSBbIHNlbGVjdG9ycy5nZXRHYXRld2F5SWQoIHN0YXRlICksIGFjdGlvbi5pdGVtPy5pZCBdLmZpbHRlciggdmFsdWUgPT4gdmFsdWUgKTtcclxuXHRcdGFjdGlvbi5pdGVtLmlkID0gaXRlbXMuam9pbiggJy8nICk7XHJcblxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdGN1cnJlbnRSZXF1ZXN0OiBhY3Rpb24uaXRlbSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRbIGNvbnN0YW50cy5zZXRDdXJyZW50U2NlbmFyaW8gXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4gKFxyXG5cdFx0e1xyXG5cdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0Y3VycmVudFNjZW5hcmlvOiB7XHJcblx0XHRcdFx0Li4uc3RhdGUuY3VycmVudFNjZW5hcmlvLFxyXG5cdFx0XHRcdFsgc3RhdGUuY3VycmVudFNjZW5hcmlvPy5pZCBdOiB7XHJcblx0XHRcdFx0XHQuLi4oXHJcblx0XHRcdFx0XHRcdHN0YXRlLmN1cnJlbnRTY2VuYXJpb1sgc3RhdGUuY3VycmVudFNjZW5hcmlvPy5pZCBdIHx8IHt9XHJcblx0XHRcdFx0XHQpLFxyXG5cdFx0XHRcdFx0Li4uKFxyXG5cdFx0XHRcdFx0XHRhY3Rpb24uaXRlbSB8fCB7fVxyXG5cdFx0XHRcdFx0KSxcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHR9LFxyXG5cdFx0fVxyXG5cdCksXHJcblx0WyBjb25zdGFudHMuaGFyZFNldEdhdGV3YXkgXTogKCBzdGF0ZSwgYWN0aW9uICkgPT4ge1xyXG5cdFx0aWYgKCBhY3Rpb24uaXRlbSApIHtcclxuXHRcdFx0c3RhdGUuY3VycmVudEdhdGV3YXlbIGFjdGlvbi5pdGVtIF0gPSBhY3Rpb24udmFsdWU7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Li4uc3RhdGUsXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0WyBjb25zdGFudHMuaGFyZFNldEdhdGV3YXlTcGVjaWZpYyBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiB7XHJcblx0XHRpZiAoIGFjdGlvbi5pdGVtICYmIHN0YXRlLmN1cnJlbnRHYXRld2F5Py5nYXRld2F5ICkge1xyXG5cdFx0XHRzdGF0ZS5jdXJyZW50R2F0ZXdheVsgc3RhdGUuY3VycmVudEdhdGV3YXk/LmdhdGV3YXkgXSA9IHt9O1xyXG5cdFx0XHRzdGF0ZS5jdXJyZW50R2F0ZXdheVsgc3RhdGUuY3VycmVudEdhdGV3YXk/LmdhdGV3YXkgXVsgYWN0aW9uLml0ZW0gXSA9IGFjdGlvbi52YWx1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHQuLi5zdGF0ZSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRbIGNvbnN0YW50cy5yZWdpc3RlckV2ZW50VHlwZSBdOiAoIHN0YXRlLCBhY3Rpb24gKSA9PiB7XHJcblx0XHRjb25zdCBldmVudCA9IHtcclxuXHRcdFx0Li4uYWN0aW9uLml0ZW0sXHJcblx0XHRcdGdhdGV3YXk6IGFjdGlvbi5pdGVtPy5nYXRld2F5ID8/IHN0YXRlLmN1cnJlbnRHYXRld2F5Py5nYXRld2F5LFxyXG5cdFx0XHRzY2VuYXJpbzogYWN0aW9uLml0ZW0/LnNjZW5hcmlvID8/IHN0YXRlLmN1cnJlbnRTY2VuYXJpbz8uaWQsXHJcblx0XHR9O1xyXG5cclxuXHRcdHN0YXRlLmV2ZW50VHlwZXMucHVzaCggZXZlbnQgKTtcclxuXHJcblx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fSxcclxufTsiLCJpbXBvcnQgZGlzcGF0Y2hlcnMgZnJvbSAnLi9kaXNwYXRjaGVycyc7XHJcblxyXG5jb25zdCBERUZBVUxUX1NUQVRFID0ge1xyXG5cdGN1cnJlbnRSZXF1ZXN0OiB7XHJcblx0XHRpZDogLSAxLFxyXG5cdH0sXHJcblx0Y3VycmVudEdhdGV3YXk6IHt9LFxyXG5cdGN1cnJlbnRTY2VuYXJpbzoge30sXHJcblx0ZXZlbnRUeXBlczogW10sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoIHN0YXRlID0gREVGQVVMVF9TVEFURSwgYWN0aW9uICkge1xyXG5cdGNvbnN0IGNhbGxiYWNrID0gZGlzcGF0Y2hlcnNbIGFjdGlvbj8udHlwZSBdO1xyXG5cclxuXHRpZiAoIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIGNhbGxiYWNrKCBzdGF0ZSwgYWN0aW9uICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gc3RhdGU7XHJcbn0iLCJpbXBvcnQgY29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRjbGVhckdhdGV3YXkoKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMuY2xlYXJHYXRld2F5LFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdGNsZWFyU2NlbmFyaW8oKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMuY2xlYXJTY2VuYXJpbyxcclxuXHRcdH07XHJcblx0fSxcclxuXHRzZXRSZXF1ZXN0KCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnNldFJlcXVlc3QsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0c2V0R2F0ZXdheSggaXRlbSApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy5zZXRHYXRld2F5LFxyXG5cdFx0XHRpdGVtLFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdHNldEdhdGV3YXlJbm5lciggaXRlbSApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy5zZXRHYXRld2F5SW5uZXIsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0c2V0R2F0ZXdheVNwZWNpZmljKCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnNldEdhdGV3YXlTcGVjaWZpYyxcclxuXHRcdFx0aXRlbSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRzZXRTY2VuYXJpbyggaXRlbSApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy5zZXRTY2VuYXJpbyxcclxuXHRcdFx0aXRlbSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRzZXRDdXJyZW50U2NlbmFyaW8oIGl0ZW0gKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMuc2V0Q3VycmVudFNjZW5hcmlvLFxyXG5cdFx0XHRpdGVtLFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdHJlZ2lzdGVyRXZlbnRUeXBlKCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnJlZ2lzdGVyRXZlbnRUeXBlLFxyXG5cdFx0XHRpdGVtLFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdGhhcmRTZXRHYXRld2F5KCBpdGVtLCB2YWx1ZSA9ICcnICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLmhhcmRTZXRHYXRld2F5LFxyXG5cdFx0XHRpdGVtLFxyXG5cdFx0XHR2YWx1ZSxcclxuXHRcdH07XHJcblx0fSxcclxuXHRoYXJkU2V0R2F0ZXdheVNwZWNpZmljKCBpdGVtLCB2YWx1ZSA9ICcnICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLmhhcmRTZXRHYXRld2F5U3BlY2lmaWMsXHJcblx0XHRcdGl0ZW0sXHJcblx0XHRcdHZhbHVlLFxyXG5cdFx0fTtcclxuXHR9LFxyXG59IiwiaW1wb3J0IHJlZHVjZXIgZnJvbSAnLi9yZWR1Y2VyJztcclxuaW1wb3J0IGFjdGlvbnMgZnJvbSAnLi9hY3Rpb25zJztcclxuaW1wb3J0IHNlbGVjdG9ycyBmcm9tICcuL3NlbGVjdG9ycyc7XHJcblxyXG5jb25zdCB7IGNyZWF0ZVJlZHV4U3RvcmUgfSA9IHdwLmRhdGE7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVSZWR1eFN0b3JlKCAnamV0LWZvcm1zL2dhdGV3YXlzJywge1xyXG5cdHJlZHVjZXIsXHJcblx0YWN0aW9ucyxcclxuXHRzZWxlY3RvcnMsXHJcbn0gKTtcclxuXHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCB7XHJcblx0cmVnaXN0ZXI6ICdSRUdJU1RFUicsXHJcblx0bG9ja0FjdGlvbnM6ICdMT0NLX0FDVElPTlMnLFxyXG59XHJcblxyXG5cclxuIiwiY29uc3Qgc2VsZWN0b3JzID0ge1xyXG5cdGdldFR5cGVJbmRleCggc3RhdGUsIHNsdWcgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUudHlwZXMuZmluZEluZGV4KCBldmVudCA9PiBldmVudC52YWx1ZSA9PT0gc2x1ZyApO1xyXG5cdH0sXHJcblx0Z2V0VHlwZXMoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLnR5cGVzO1xyXG5cdH0sXHJcblx0Z2V0R2F0ZXdheVR5cGVzKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS50eXBlcy5maWx0ZXIoIGV2ZW50ID0+IChcclxuXHRcdFx0J2dhdGV3YXknIGluIGV2ZW50XHJcblx0XHQpICk7XHJcblx0fSxcclxuXHRnZXRBbHdheXNUeXBlcyggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUudHlwZXMuZmlsdGVyKCBldmVudCA9PiAoXHJcblx0XHRcdCdhbHdheXMnIGluIGV2ZW50XHJcblx0XHQpICk7XHJcblx0fSxcclxuXHRnZXRUeXBlKCBzdGF0ZSwgc2x1ZyApIHtcclxuXHRcdGNvbnN0IGluZGV4ID0gc2VsZWN0b3JzLmdldFR5cGVJbmRleCggc3RhdGUsIHNsdWcgKTtcclxuXHJcblx0XHRyZXR1cm4gc3RhdGUudHlwZXNbIGluZGV4IF07XHJcblx0fSxcclxuXHRnZXRVbnN1cHBvcnRlZCggc3RhdGUsIGFjdGlvbklkICkge1xyXG5cdFx0Y29uc3QgYWN0aW9uID0gc3RhdGUubG9ja2VkQWN0aW9uc1sgYWN0aW9uSWQgXSA/PyBmYWxzZTtcclxuXHJcblx0XHRpZiAoIGZhbHNlID09PSBhY3Rpb24gKSB7XHJcblx0XHRcdHJldHVybiBbXTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gYWN0aW9uLnVuc3VwcG9ydGVkO1xyXG5cdH0sXHJcblx0Z2V0U3VwcG9ydGVkKCBzdGF0ZSwgYWN0aW9uSWQgKSB7XHJcblx0XHRjb25zdCBhY3Rpb24gPSBzdGF0ZS5sb2NrZWRBY3Rpb25zWyBhY3Rpb25JZCBdID8/IGZhbHNlO1xyXG5cclxuXHRcdGlmICggZmFsc2UgPT09IGFjdGlvbiApIHtcclxuXHRcdFx0cmV0dXJuIFtdO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBhY3Rpb24uc3VwcG9ydGVkO1xyXG5cdH0sXHJcblx0aXNWYWxpZCggc3RhdGUsIGFjdGlvbklkLCBldmVudFNsdWcgKSB7XHJcblx0XHRjb25zdCB1bnN1cHBvcnRlZCA9IHNlbGVjdG9ycy5nZXRVbnN1cHBvcnRlZCggc3RhdGUsIGFjdGlvbklkICk7XHJcblxyXG5cdFx0aWYgKCB1bnN1cHBvcnRlZC5sZW5ndGggJiYgdW5zdXBwb3J0ZWQuaW5jbHVkZXMoIGV2ZW50U2x1ZyApICkge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Y29uc3Qgc3VwcG9ydGVkID0gc2VsZWN0b3JzLmdldFN1cHBvcnRlZCggc3RhdGUsIGFjdGlvbklkICk7XHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0IXN1cHBvcnRlZC5sZW5ndGggfHwgc3VwcG9ydGVkLmluY2x1ZGVzKCBldmVudFNsdWcgKVxyXG5cdFx0KTtcclxuXHR9LFxyXG5cdGZpbHRlckxpc3QoIHN0YXRlLCBhY3Rpb25JZCwgZXZlbnRMaXN0ICkge1xyXG5cdFx0cmV0dXJuIGV2ZW50TGlzdC5maWx0ZXIoXHJcblx0XHRcdGN1cnJlbnQgPT4gc2VsZWN0b3JzLmlzVmFsaWQoIHN0YXRlLCBhY3Rpb25JZCwgY3VycmVudCApICk7XHJcblx0fSxcclxuXHRnZXRIZWxwTWFwKCBzdGF0ZSApIHtcclxuXHRcdGNvbnN0IG1hcCA9IHt9O1xyXG5cclxuXHRcdGZvciAoIGNvbnN0IHsgdmFsdWUsIGhlbHAgfSBvZiBzdGF0ZS50eXBlcyApIHtcclxuXHRcdFx0bWFwWyB2YWx1ZSBdID0gaGVscDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbWFwO1xyXG5cdH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0Li4uc2VsZWN0b3JzLFxyXG59OyIsImltcG9ydCBjb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgc2VsZWN0b3JzIGZyb20gJy4vc2VsZWN0b3JzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRbIGNvbnN0YW50cy5yZWdpc3RlciBdKCBzdGF0ZSwgYWN0aW9uICkge1xyXG5cdFx0Zm9yICggY29uc3QgaXRlbSBvZiBhY3Rpb24uaXRlbXMgKSB7XHJcblx0XHRcdGl0ZW0udGl0bGUgPSBpdGVtLmxhYmVsO1xyXG5cclxuXHRcdFx0Y29uc3QgaXNzZXRJbmRleCA9IHNlbGVjdG9ycy5nZXRUeXBlSW5kZXgoIHN0YXRlLCBpdGVtLnZhbHVlICk7XHJcblxyXG5cdFx0XHQvLyBpcyBuZXcgZXZlbnQgdHlwZVxyXG5cdFx0XHRpZiAoIC0gMSA9PT0gaXNzZXRJbmRleCApIHtcclxuXHRcdFx0XHRzdGF0ZS50eXBlcy5wdXNoKCB7IC4uLml0ZW0gfSApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHN0YXRlLnR5cGVzWyBpc3NldEluZGV4IF0gPSB7IC4uLml0ZW0gfTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBzdGF0ZTtcclxuXHR9LFxyXG5cdFsgY29uc3RhbnRzLmxvY2tBY3Rpb25zIF0oIHN0YXRlLCBhY3Rpb24gKSB7XHJcblx0XHRmb3IgKCBjb25zdCB7IGlkLCBzZWxmOiBhY3Rpb25TZWxmIH0gb2Ygd2luZG93LmpldEZvcm1BY3Rpb25UeXBlcyApIHtcclxuXHRcdFx0Y29uc3QgY3VycmVudCA9IHdpbmRvd1sgYWN0aW9uU2VsZiBdID8/IGZhbHNlO1xyXG5cclxuXHRcdFx0aWYgKCBmYWxzZSA9PT0gY3VycmVudCApIHtcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Y29uc3Qge1xyXG5cdFx0XHRcdF9fdW5zdXBwb3J0ZWRfZXZlbnRzOiB1blN1cCxcclxuXHRcdFx0XHRfX3N1cHBvcnRlZF9ldmVudHM6IHN1cCxcclxuXHRcdFx0fSA9IGN1cnJlbnQ7XHJcblxyXG5cdFx0XHRjb25zdCBhY3Rpb24gPSB7XHJcblx0XHRcdFx0dW5zdXBwb3J0ZWQ6IHN0YXRlLnR5cGVzLmZpbHRlciggKCB7IHNlbGYgfSApID0+IHVuU3VwLmluY2x1ZGVzKCBzZWxmICkgKS5tYXAoICggeyB2YWx1ZSB9ICkgPT4gdmFsdWUgKSxcclxuXHRcdFx0XHRzdXBwb3J0ZWQ6IHN0YXRlLnR5cGVzLmZpbHRlciggKCB7IHNlbGYgfSApID0+IHN1cC5pbmNsdWRlcyggc2VsZiApICkubWFwKCAoIHsgdmFsdWUgfSApID0+IHZhbHVlICksXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRpZiAoICEgYWN0aW9uLnN1cHBvcnRlZC5sZW5ndGggJiYgISBhY3Rpb24udW5zdXBwb3J0ZWQubGVuZ3RoICkge1xyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzdGF0ZS5sb2NrZWRBY3Rpb25zWyBpZCBdID0gYWN0aW9uO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBzdGF0ZTtcclxuXHR9LFxyXG59OyIsImltcG9ydCBkaXNwYXRjaGVycyBmcm9tICcuL2Rpc3BhdGNoZXJzJztcclxuXHJcbmNvbnN0IERFRkFVTFRfU1RBVEUgPSB7XHJcblx0dHlwZXM6IFtdLFxyXG5cdGxhYmVsczoge30sXHJcblx0bG9ja2VkQWN0aW9uczoge30sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoIHN0YXRlID0gREVGQVVMVF9TVEFURSwgYWN0aW9uICkge1xyXG5cdGNvbnN0IGNhbGxiYWNrID0gZGlzcGF0Y2hlcnNbIGFjdGlvbj8udHlwZSBdO1xyXG5cclxuXHRpZiAoIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIGNhbGxiYWNrKCBzdGF0ZSwgYWN0aW9uICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gc3RhdGU7XHJcbn0iLCJpbXBvcnQgY29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRyZWdpc3RlciggaXRlbXMgKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHR0eXBlOiBjb25zdGFudHMucmVnaXN0ZXIsXHJcblx0XHRcdGl0ZW1zLFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cdGxvY2tBY3Rpb25zKCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLmxvY2tBY3Rpb25zLFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cclxufSIsImltcG9ydCByZWR1Y2VyIGZyb20gJy4vcmVkdWNlcic7XHJcbmltcG9ydCBhY3Rpb25zIGZyb20gJy4vYWN0aW9ucyc7XHJcbmltcG9ydCBzZWxlY3RvcnMgZnJvbSAnLi9zZWxlY3RvcnMnO1xyXG5cclxuY29uc3QgeyBjcmVhdGVSZWR1eFN0b3JlIH0gPSB3cC5kYXRhO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlUmVkdXhTdG9yZSggJ2pldC1mb3Jtcy9ldmVudHMnLCB7XHJcblx0cmVkdWNlcixcclxuXHRhY3Rpb25zLFxyXG5cdHNlbGVjdG9ycyxcclxufSApO1xyXG4iLCJleHBvcnQgZGVmYXVsdCB7XHJcblx0cmVnaXN0ZXI6ICdSRUdJU1RFUicsXHJcblx0cmVnaXN0ZXJGdW5jdGlvbnNGaWx0ZXJzOiAnUkVHSVNURVJfRlVOQ1RJT05fRklMVEVSUycsXHJcbn1cclxuXHJcblxyXG4iLCJpbXBvcnQgY29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRbIGNvbnN0YW50cy5yZWdpc3RlciBdKCBzdGF0ZSwgYWN0aW9uICkge1xyXG5cdFx0Y29uc3QgeyBvcGVyYXRvcnMsIGZ1bmN0aW9ucywgcmVuZGVyX3N0YXRlcyB9ID0gYWN0aW9uLml0ZW1zO1xyXG5cclxuXHRcdHN0YXRlLm9wZXJhdG9ycyA9IFsgLi4ub3BlcmF0b3JzIF07XHJcblx0XHRzdGF0ZS5mdW5jdGlvbnMgPSBbIC4uLmZ1bmN0aW9ucyBdO1xyXG5cdFx0c3RhdGUucmVuZGVyU3RhdGVzID0gWyAuLi5yZW5kZXJfc3RhdGVzIF07XHJcblxyXG5cdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH0sXHJcblx0WyBjb25zdGFudHMucmVnaXN0ZXJGdW5jdGlvbnNGaWx0ZXJzIF0oIHN0YXRlLCBhY3Rpb24gKSB7XHJcblx0XHRzdGF0ZS5mdW5jdGlvbkZpbHRlcnMgPSB7XHJcblx0XHRcdC4uLnN0YXRlLmZ1bmN0aW9uRmlsdGVycyxcclxuXHRcdFx0Li4uYWN0aW9uLml0ZW0sXHJcblx0XHR9O1xyXG5cclxuXHRcdHJldHVybiBzdGF0ZTtcclxuXHR9LFxyXG59OyIsImltcG9ydCBkaXNwYXRjaGVycyBmcm9tICcuL2Rpc3BhdGNoZXJzJztcclxuaW1wb3J0IHsgZ2V0SW5uZXJCbG9ja3MgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2Jsb2Nrcy9ibG9ja3MtaGVscGVyJztcclxuXHJcblxyXG5jb25zdCBERUZBVUxUX1NUQVRFID0ge1xyXG5cdGZ1bmN0aW9uczogW10sXHJcblx0b3BlcmF0b3JzOiBbXSxcclxuXHRyZW5kZXJTdGF0ZXM6IFtdLFxyXG5cdGZ1bmN0aW9uRmlsdGVyczoge1xyXG5cdFx0c2V0X3ZhbHVlKCBpdGVtLCBibG9ja1Byb3BzICkge1xyXG5cdFx0XHRjb25zdCB7IFsgJ2RhdGEtYmxvY2snIF06IGNsaWVudElkIH0gPSBibG9ja1Byb3BzO1xyXG5cclxuXHRcdFx0cmV0dXJuIDEgPT09IGdldElubmVyQmxvY2tzKCBjbGllbnRJZCApLmxlbmd0aDtcclxuXHRcdH0sXHJcblx0fSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICggc3RhdGUgPSBERUZBVUxUX1NUQVRFLCBhY3Rpb24gKSB7XHJcblx0Y29uc3QgY2FsbGJhY2sgPSBkaXNwYXRjaGVyc1sgYWN0aW9uPy50eXBlIF07XHJcblxyXG5cdGlmICggY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4gY2FsbGJhY2soIHN0YXRlLCBhY3Rpb24gKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBzdGF0ZTtcclxufSIsImltcG9ydCBjb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdHJlZ2lzdGVyKCBpdGVtcyApIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHR5cGU6IGNvbnN0YW50cy5yZWdpc3RlcixcclxuXHRcdFx0aXRlbXMsXHJcblx0XHR9O1xyXG5cdH0sXHJcblx0cmVnaXN0ZXJGdW5jdGlvbnNGaWx0ZXJzKCBpdGVtICkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogY29uc3RhbnRzLnJlZ2lzdGVyRnVuY3Rpb25zRmlsdGVycyxcclxuXHRcdFx0aXRlbSxcclxuXHRcdH07XHJcblx0fSxcclxuXHJcbn0iLCJjb25zdCBzZWxlY3RvcnMgPSB7XHJcblx0Z2V0RnVuY3Rpb25zKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5mdW5jdGlvbnM7XHJcblx0fSxcclxuXHRnZXRPcGVyYXRvcnMoIHN0YXRlICkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLm9wZXJhdG9ycztcclxuXHR9LFxyXG5cdGdldEZ1bmN0aW9uRmlsdGVycyggc3RhdGUgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuZnVuY3Rpb25GaWx0ZXJzO1xyXG5cdH0sXHJcblx0Z2V0UmVuZGVyU3RhdGVzKCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5yZW5kZXJTdGF0ZXM7XHJcblx0fSxcclxuXHRnZXRSZW5kZXJTdGF0ZXNMaXN0KCBzdGF0ZSApIHtcclxuXHRcdHJldHVybiBzdGF0ZS5yZW5kZXJTdGF0ZXMubWFwKCAoIHsgdmFsdWUgfSApID0+IHZhbHVlICk7XHJcblx0fSxcclxuXHRnZXRGaWx0ZXJlZEZ1bmN0aW9ucyggc3RhdGUsIGJsb2NrUHJvcHMgKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuZnVuY3Rpb25zLmZpbHRlciggaXRlbSA9PiB7XHJcblx0XHRcdGNvbnN0IGNhbGxiYWNrID0gc3RhdGUuZnVuY3Rpb25GaWx0ZXJzWyBpdGVtLnZhbHVlIF0gPz8gZmFsc2U7XHJcblxyXG5cdFx0XHRpZiAoIGZhbHNlID09PSBjYWxsYmFjayApIHtcclxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIGNhbGxiYWNrKCBpdGVtLCBibG9ja1Byb3BzICk7XHJcblx0XHR9ICk7XHJcblx0fSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHQuLi5zZWxlY3RvcnMsXHJcbn07IiwiaW1wb3J0IHJlZHVjZXIgZnJvbSAnLi9yZWR1Y2VyJztcclxuaW1wb3J0IGFjdGlvbnMgZnJvbSAnLi9hY3Rpb25zJztcclxuaW1wb3J0IHNlbGVjdG9ycyBmcm9tICcuL3NlbGVjdG9ycyc7XHJcblxyXG5jb25zdCB7IGNyZWF0ZVJlZHV4U3RvcmUgfSA9IHdwLmRhdGE7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVSZWR1eFN0b3JlKCAnamV0LWZvcm1zL2Jsb2NrLWNvbmRpdGlvbnMnLCB7XHJcblx0cmVkdWNlcixcclxuXHRhY3Rpb25zLFxyXG5cdHNlbGVjdG9ycyxcclxufSApO1xyXG4iLCJpbXBvcnQgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xyXG5pbXBvcnQgZ2F0ZXdheXMgZnJvbSAnLi9nYXRld2F5cyc7XHJcbmltcG9ydCBldmVudHMgZnJvbSAnLi9ldmVudHMnO1xyXG5pbXBvcnQgYmxvY2tDb25kaXRpb25zIGZyb20gJy4vYmxvY2stY29uZGl0aW9ucyc7XHJcbmltcG9ydCAnLi9zdWJzY3JpYmVycy9taWdyYXRlLWdhdGV3YXlzLXNldHRpbmdzJztcclxuXHJcbmNvbnN0IHsgcmVnaXN0ZXIsIGRpc3BhdGNoIH0gPSB3cC5kYXRhO1xyXG5cclxucmVnaXN0ZXIoIGdhdGV3YXlzICk7XHJcbnJlZ2lzdGVyKCBldmVudHMgKTtcclxucmVnaXN0ZXIoIGFjdGlvbnMgKTtcclxucmVnaXN0ZXIoIGJsb2NrQ29uZGl0aW9ucyApO1xyXG5cclxuZGlzcGF0Y2goICdqZXQtZm9ybXMvYmxvY2stY29uZGl0aW9ucycgKS5yZWdpc3Rlciggd2luZG93LmpldEZvcm1CbG9ja0NvbmRpdGlvbnMgKTtcclxuZGlzcGF0Y2goICdqZXQtZm9ybXMvZXZlbnRzJyApLnJlZ2lzdGVyKCB3aW5kb3cuamV0Rm9ybUV2ZW50cy50eXBlcyApO1xyXG5kaXNwYXRjaCggJ2pldC1mb3Jtcy9ldmVudHMnICkubG9ja0FjdGlvbnMoKTsiLCJjb25zdCB7IGNyZWF0ZUNvbnRleHQgfSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb250ZXh0KCBmYWxzZSApOyIsImNvbnN0IHsgY3JlYXRlQ29udGV4dCB9ID0gd3AuZWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNvbnRleHQoIHtcclxuXHRjdXJyZW50SXRlbToge30sXHJcblx0Y2hhbmdlQ3VycmVudEl0ZW06ICgpID0+IHt9LFxyXG5cdGN1cnJlbnRJbmRleDogLTEsXHJcbn0gKTsiLCJjb25zdCB7IGNyZWF0ZUNvbnRleHQgfSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb250ZXh0KCB7XHJcblx0aW5kZXg6IC0gMSxcclxuXHRhY3Rpb246IHt9LFxyXG59ICk7IiwiaW1wb3J0IFNhZmVEZWxldGVDb250ZXh0IGZyb20gJy4uLy4uL2NvbnRleHQvc2FmZS5kZWxldGUnO1xyXG5cclxuY29uc3QgeyBUb2dnbGVDb250cm9sIH0gPSB3cC5jb21wb25lbnRzO1xyXG5jb25zdCB7IF9fIH0gPSB3cC5pMThuO1xyXG5jb25zdCB7IHVzZVN0YXRlIH0gPSB3cC5lbGVtZW50O1xyXG5cclxuZnVuY3Rpb24gU2FmZURlbGV0ZVRvZ2dsZSggcHJvcHMgKSB7XHJcblx0Y29uc3QgWyBpc1NhZmVEZWxldGluZywgc2V0U2FmZURlbGV0aW5nIF0gPSB1c2VTdGF0ZSggdHJ1ZSApO1xyXG5cclxuXHRyZXR1cm4gPD5cclxuXHRcdDxUb2dnbGVDb250cm9sXHJcblx0XHRcdGxhYmVsPXsgX18oICdTYWZlIGRlbGV0aW5nJywgJ2pldC1mb3JtLWJ1aWxkZXInICkgfVxyXG5cdFx0XHRjaGVja2VkPXsgaXNTYWZlRGVsZXRpbmcgfVxyXG5cdFx0XHRvbkNoYW5nZT17IHNldFNhZmVEZWxldGluZyB9XHJcblx0XHQvPlxyXG5cdFx0PFNhZmVEZWxldGVDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXsgaXNTYWZlRGVsZXRpbmcgfT5cclxuXHRcdFx0eyBwcm9wcy5jaGlsZHJlbiB9XHJcblx0XHQ8L1NhZmVEZWxldGVDb250ZXh0LlByb3ZpZGVyPlxyXG5cdDwvPjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2FmZURlbGV0ZVRvZ2dsZTsiLCJpbXBvcnQgU2FmZURlbGV0ZUNvbnRleHQgZnJvbSAnLi4vLi4vY29udGV4dC9zYWZlLmRlbGV0ZSc7XHJcblxyXG5jb25zdCB7XHJcblx0dXNlQ29udGV4dCxcclxufSA9IHdwLmVsZW1lbnQ7XHJcblxyXG5jb25zdCB7IF9fIH0gPSB3cC5pMThuO1xyXG5cclxuY29uc3Qgb25TYXZlRGVsZXRpbmcgPSBpbmRleCA9PiB7XHJcblx0cmV0dXJuIGNvbmZpcm0oIF9fKCBgQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSBpdGVtICR7IGluZGV4ICsgMSB9P2AsICdqZXQtZm9ybS1idWlsZGVyJyApICk7XHJcbn07XHJcblxyXG4vKipcclxuICpcclxuICogQHBhcmFtIHNldEl0ZW1zRGF0YVxyXG4gKiBAcmV0dXJucyB7e1xyXG4gKiBjbG9uZUl0ZW06IGZ1bmN0aW9uLFxyXG4gKiBhZGROZXdJdGVtOiBmdW5jdGlvbixcclxuICogY2hhbmdlQ3VycmVudEl0ZW06IGZ1bmN0aW9uLFxyXG4gKiB0b2dnbGVWaXNpYmxlOiBmdW5jdGlvbixcclxuICogbW92ZURvd246IGZ1bmN0aW9uLFxyXG4gKiBtb3ZlVXA6IGZ1bmN0aW9uLFxyXG4gKiByZW1vdmVPcHRpb246IGZ1bmN0aW9uXHJcbiAqIH19XHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VSZXBlYXRlclN0YXRlKCBzZXRJdGVtc0RhdGEgKSB7XHJcblx0Y29uc3QgaXNTYWZlRGVsZXRpbmcgPSB1c2VDb250ZXh0KCBTYWZlRGVsZXRlQ29udGV4dCApO1xyXG5cclxuXHRjb25zdCBjaGFuZ2VDdXJyZW50SXRlbSA9IGZ1bmN0aW9uICggdmFsdWVUb1NldCwgaW5kZXggKSB7XHJcblx0XHRzZXRJdGVtc0RhdGEoIHByZXYgPT4ge1xyXG5cdFx0XHRjb25zdCBwcmV2Q2xvbmUgPSBKU09OLnBhcnNlKCBKU09OLnN0cmluZ2lmeSggcHJldiApICk7XHJcblxyXG5cdFx0XHRwcmV2Q2xvbmVbIGluZGV4IF0gPSB7XHJcblx0XHRcdFx0Li4ucHJldlsgaW5kZXggXSxcclxuXHRcdFx0XHQuLi52YWx1ZVRvU2V0LFxyXG5cdFx0XHR9O1xyXG5cdFx0XHRyZXR1cm4gcHJldkNsb25lO1xyXG5cdFx0fSApO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IHJlbW92ZU9wdGlvbiA9IGZ1bmN0aW9uICggaW5kZXggKSB7XHJcblx0XHRpZiAoIGlzU2FmZURlbGV0aW5nICYmICEgb25TYXZlRGVsZXRpbmcoIGluZGV4ICkgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRzZXRJdGVtc0RhdGEoIHByZXYgPT4ge1xyXG5cdFx0XHRjb25zdCBwcmV2Q2xvbmUgPSBKU09OLnBhcnNlKCBKU09OLnN0cmluZ2lmeSggcHJldiApICk7XHJcblx0XHRcdHByZXZDbG9uZS5zcGxpY2UoIGluZGV4LCAxICk7XHJcblxyXG5cdFx0XHRyZXR1cm4gcHJldkNsb25lO1xyXG5cdFx0fSApO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IGFkZE5ld0l0ZW0gPSBmdW5jdGlvbiAoIHZhbHVlICkge1xyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IFtcclxuXHRcdFx0Li4ucHJldiwge1xyXG5cdFx0XHRcdC4uLnZhbHVlLFxyXG5cdFx0XHRcdF9fdmlzaWJsZTogdHJ1ZSxcclxuXHRcdFx0fSxcclxuXHRcdF0gKTtcclxuXHR9O1xyXG5cclxuXHRjb25zdCBjbG9uZUl0ZW0gPSBmdW5jdGlvbiAoIGluZGV4ICkge1xyXG5cdFx0c2V0SXRlbXNEYXRhKCBwcmV2ID0+IHtcclxuXHRcdFx0Y29uc3QgcHJldkNsb25lID0gSlNPTi5wYXJzZSggSlNPTi5zdHJpbmdpZnkoIHByZXYgKSApO1xyXG5cdFx0XHRjb25zdCBbIGJlZm9yZSwgYWZ0ZXIgXSA9IFsgcHJldkNsb25lLnNsaWNlKCAwLCBpbmRleCArIDEgKSwgcHJldkNsb25lLnNsaWNlKCBpbmRleCArIDEgKSBdO1xyXG5cclxuXHRcdFx0cmV0dXJuIFsgLi4uYmVmb3JlLCBwcmV2Q2xvbmVbIGluZGV4IF0sIC4uLmFmdGVyIF07XHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0Y29uc3QgbW92ZVJlcGVhdGVySXRlbSA9IGZ1bmN0aW9uICggeyBvbGRJbmRleCwgbmV3SW5kZXggfSApIHtcclxuXHRcdHNldEl0ZW1zRGF0YSggcHJldiA9PiB7XHJcblx0XHRcdGNvbnN0IHByZXZDbG9uZSA9IEpTT04ucGFyc2UoIEpTT04uc3RyaW5naWZ5KCBwcmV2ICkgKTtcclxuXHJcblx0XHRcdFsgcHJldkNsb25lWyBuZXdJbmRleCBdLCBwcmV2Q2xvbmVbIG9sZEluZGV4IF0gXSA9IFsgcHJldkNsb25lWyBvbGRJbmRleCBdLCBwcmV2Q2xvbmVbIG5ld0luZGV4IF0gXTtcclxuXHJcblx0XHRcdHJldHVybiBwcmV2Q2xvbmU7XHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0Y29uc3QgbW92ZVVwID0gZnVuY3Rpb24gKCBpbmRleCApIHtcclxuXHRcdG1vdmVSZXBlYXRlckl0ZW0oIHsgb2xkSW5kZXg6IGluZGV4LCBuZXdJbmRleDogaW5kZXggLSAxIH0gKTtcclxuXHR9O1xyXG5cdGNvbnN0IG1vdmVEb3duID0gZnVuY3Rpb24gKCBpbmRleCApIHtcclxuXHRcdG1vdmVSZXBlYXRlckl0ZW0oIHsgb2xkSW5kZXg6IGluZGV4LCBuZXdJbmRleDogaW5kZXggKyAxIH0gKTtcclxuXHR9O1xyXG5cclxuXHRjb25zdCB0b2dnbGVWaXNpYmxlID0gZnVuY3Rpb24gKCBpbmRleCApIHtcclxuXHRcdHNldEl0ZW1zRGF0YSggcHJldiA9PiB7XHJcblx0XHRcdGNvbnN0IHByZXZDbG9uZSA9IEpTT04ucGFyc2UoIEpTT04uc3RyaW5naWZ5KCBwcmV2ICkgKTtcclxuXHRcdFx0cHJldkNsb25lWyBpbmRleCBdLl9fdmlzaWJsZSA9ICEgKFxyXG5cdFx0XHRcdHByZXZDbG9uZVsgaW5kZXggXS5fX3Zpc2libGVcclxuXHRcdFx0KTtcclxuXHJcblx0XHRcdHJldHVybiBwcmV2Q2xvbmU7XHJcblx0XHR9ICk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIHtcclxuXHRcdGNoYW5nZUN1cnJlbnRJdGVtLFxyXG5cdFx0dG9nZ2xlVmlzaWJsZSxcclxuXHRcdG1vdmVEb3duLFxyXG5cdFx0bW92ZVVwLFxyXG5cdFx0Y2xvbmVJdGVtLFxyXG5cdFx0YWRkTmV3SXRlbSxcclxuXHRcdHJlbW92ZU9wdGlvbixcclxuXHR9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1c2VSZXBlYXRlclN0YXRlOyIsImltcG9ydCB1c2VSZXBlYXRlclN0YXRlIGZyb20gJy4uLy4uL2hlbHBlcnMvaG9va3MvdXNlUmVwZWF0ZXJTdGF0ZSc7XHJcblxyXG5jb25zdCB7IEJ1dHRvbiB9ID0gd3AuY29tcG9uZW50cztcclxuXHJcbmZ1bmN0aW9uIFJlcGVhdGVyQWRkTmV3KCBwcm9wcyApIHtcclxuXHRjb25zdCB7XHJcblx0XHRpdGVtLFxyXG5cdFx0b25TZXRTdGF0ZSxcclxuXHRcdGZ1bmN0aW9ucyxcclxuXHRcdGNoaWxkcmVuXHJcblx0fSA9IHByb3BzO1xyXG5cclxuXHRjb25zdCB7IGFkZE5ld0l0ZW0gfSA9IGZ1bmN0aW9ucyA/PyB1c2VSZXBlYXRlclN0YXRlKCBvblNldFN0YXRlICk7XHJcblxyXG5cdHJldHVybiA8QnV0dG9uXHJcblx0XHRpc1NlY29uZGFyeVxyXG5cdFx0b25DbGljaz17ICgpID0+IGFkZE5ld0l0ZW0oIGl0ZW0gKSB9XHJcblx0PlxyXG5cdFx0eyBjaGlsZHJlbiB9XHJcblx0PC9CdXR0b24+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXBlYXRlckFkZE5ldzsiLCJpbXBvcnQgdXNlUmVwZWF0ZXJTdGF0ZSBmcm9tICcuLi8uLi9oZWxwZXJzL2hvb2tzL3VzZVJlcGVhdGVyU3RhdGUnO1xyXG5pbXBvcnQgUmVwZWF0ZXJJdGVtQ29udGV4dCBmcm9tICcuLi8uLi9jb250ZXh0L3JlcGVhdGVyLml0ZW0nO1xyXG5cclxuY29uc3Qge1xyXG5cdENhcmQsXHJcblx0QnV0dG9uR3JvdXAsXHJcblx0QnV0dG9uLFxyXG5cdENhcmRIZWFkZXIsXHJcblx0Q2FyZEJvZHksXHJcbn0gPSB3cC5jb21wb25lbnRzO1xyXG5cclxuY29uc3QgeyBfXyB9ID0gd3AuaTE4bjtcclxuXHJcbmZ1bmN0aW9uIFJlcGVhdGVyKCBwcm9wcyApIHtcclxuXHRjb25zdCB7XHJcblx0XHRpdGVtcyxcclxuXHRcdG9uU2V0U3RhdGUsXHJcblx0XHRmdW5jdGlvbnMsXHJcblx0XHRjaGlsZHJlbixcclxuXHR9ID0gcHJvcHM7XHJcblxyXG5cdGNvbnN0IHtcclxuXHRcdGNsb25lSXRlbSxcclxuXHRcdG1vdmVVcCxcclxuXHRcdG1vdmVEb3duLFxyXG5cdFx0dG9nZ2xlVmlzaWJsZSxcclxuXHRcdGNoYW5nZUN1cnJlbnRJdGVtLFxyXG5cdFx0cmVtb3ZlT3B0aW9uLFxyXG5cdH0gPSBmdW5jdGlvbnMgPz8gdXNlUmVwZWF0ZXJTdGF0ZSggb25TZXRTdGF0ZSApO1xyXG5cclxuXHRyZXR1cm4gPGRpdlxyXG5cdFx0Y2xhc3NOYW1lPXsgJ2pldC1mb3JtLWJ1aWxkZXJfX3JlcGVhdGVyLWNvbXBvbmVudCcgfVxyXG5cdFx0a2V5PXsgJ2pldC1mb3JtLWJ1aWxkZXItcmVwZWF0ZXInIH1cclxuXHQ+XHJcblx0XHR7IGl0ZW1zLm1hcCggKCBjdXJyZW50SXRlbSwgaW5kZXggKSA9PiA8Q2FyZFxyXG5cdFx0XHRpc0VsZXZhdGVkPXsgdHJ1ZSB9XHJcblx0XHRcdGNsYXNzTmFtZT17ICdqZXQtZm9ybS1idWlsZGVyX19yZXBlYXRlci1jb21wb25lbnQtaXRlbScgfVxyXG5cdFx0XHRrZXk9eyBgamV0LWZvcm0tYnVpbGRlcl9fcmVwZWF0ZXItY29tcG9uZW50LWl0ZW0tJHsgaW5kZXggfWAgfVxyXG5cdFx0PlxyXG5cdFx0XHQ8Q2FyZEhlYWRlciBjbGFzc05hbWU9eyAncmVwZWF0ZXJfX2l0ZW1fX2hlYWRlcicgfT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ncmVwZWF0ZXItaXRlbV9fbGVmdC1oZWFkaW5nJz5cclxuXHRcdFx0XHRcdDxCdXR0b25Hcm91cCBjbGFzc05hbWU9eyAncmVwZWF0ZXItYWN0aW9uLWJ1dHRvbnMnIH0+XHJcblx0XHRcdFx0XHRcdDxCdXR0b25cclxuXHRcdFx0XHRcdFx0XHRpc1NtYWxsXHJcblx0XHRcdFx0XHRcdFx0aWNvbj17IGN1cnJlbnRJdGVtLl9fdmlzaWJsZSA/ICduby1hbHQnIDogJ2VkaXQnIH1cclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXsgKCkgPT4gdG9nZ2xlVmlzaWJsZSggaW5kZXggKSB9XHJcblx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPXsgJ3JlcGVhdGVyLWFjdGlvbi1idXR0b24nIH1cclxuXHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdFx0XHRcdGlzU21hbGxcclxuXHRcdFx0XHRcdFx0XHRpc1NlY29uZGFyeVxyXG5cdFx0XHRcdFx0XHRcdGRpc2FibGVkPXsgISBCb29sZWFuKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRpY29uPXsgJ2Fycm93LXVwLWFsdDInIH1cclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXsgKCkgPT4gbW92ZVVwKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9eyAncmVwZWF0ZXItYWN0aW9uLWJ1dHRvbicgfVxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8QnV0dG9uXHJcblx0XHRcdFx0XHRcdFx0aXNTbWFsbFxyXG5cdFx0XHRcdFx0XHRcdGlzU2Vjb25kYXJ5XHJcblx0XHRcdFx0XHRcdFx0ZGlzYWJsZWQ9eyAhIChcclxuXHRcdFx0XHRcdFx0XHRcdGluZGV4IDwgaXRlbXMubGVuZ3RoIC0gMVxyXG5cdFx0XHRcdFx0XHRcdCkgfVxyXG5cdFx0XHRcdFx0XHRcdGljb249eyAnYXJyb3ctZG93bi1hbHQyJyB9XHJcblx0XHRcdFx0XHRcdFx0b25DbGljaz17ICgpID0+IG1vdmVEb3duKCBpbmRleCApIH1cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9eyAncmVwZWF0ZXItYWN0aW9uLWJ1dHRvbicgfVxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0PC9CdXR0b25Hcm91cD5cclxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT17ICdyZXBlYXRlci1pdGVtLXRpdGxlJyB9PnsgYCMkeyBpbmRleCArIDEgfWAgfTwvc3Bhbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8QnV0dG9uR3JvdXA+XHJcblx0XHRcdFx0XHQ8QnV0dG9uXHJcblx0XHRcdFx0XHRcdGlzU21hbGxcclxuXHRcdFx0XHRcdFx0aXNTZWNvbmRhcnlcclxuXHRcdFx0XHRcdFx0b25DbGljaz17ICgpID0+IGNsb25lSXRlbSggaW5kZXggKSB9XHJcblx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdHsgX18oICdDbG9uZScsICdqZXQtZm9ybS1idWlsZGVyJyApIH1cclxuXHRcdFx0XHRcdDwvQnV0dG9uPlxyXG5cdFx0XHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdFx0XHRpc1NtYWxsXHJcblx0XHRcdFx0XHRcdGlzU2Vjb25kYXJ5XHJcblx0XHRcdFx0XHRcdGlzRGVzdHJ1Y3RpdmVcclxuXHRcdFx0XHRcdFx0b25DbGljaz17ICgpID0+IHJlbW92ZU9wdGlvbiggaW5kZXggKSB9XHJcblx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdHsgX18oICdEZWxldGUnLCAnamV0LWZvcm0tYnVpbGRlcicgKSB9XHJcblx0XHRcdFx0XHQ8L0J1dHRvbj5cclxuXHRcdFx0XHQ8L0J1dHRvbkdyb3VwPlxyXG5cdFx0XHQ8L0NhcmRIZWFkZXI+XHJcblx0XHRcdHsgY3VycmVudEl0ZW0uX192aXNpYmxlICYmIDxDYXJkQm9keVxyXG5cdFx0XHRcdGNsYXNzTmFtZT17ICdyZXBlYXRlci1pdGVtX19jb250ZW50JyB9XHJcblx0XHRcdD5cclxuXHRcdFx0XHQ8UmVwZWF0ZXJJdGVtQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17IHtcclxuXHRcdFx0XHRcdGN1cnJlbnRJdGVtLFxyXG5cdFx0XHRcdFx0Y2hhbmdlQ3VycmVudEl0ZW06IGRhdGEgPT4gY2hhbmdlQ3VycmVudEl0ZW0oIGRhdGEsIGluZGV4ICksXHJcblx0XHRcdFx0XHRjdXJyZW50SW5kZXg6IGluZGV4LFxyXG5cdFx0XHRcdH0gfT5cclxuXHRcdFx0XHRcdHsgY2hpbGRyZW4gJiYgY2hpbGRyZW4gfVxyXG5cdFx0XHRcdFx0eyAhIGNoaWxkcmVuICYmICdTZXQgdXAgeW91ciBSZXBlYXRlciBUZW1wbGF0ZSwgcGxlYXNlLicgfVxyXG5cdFx0XHRcdDwvUmVwZWF0ZXJJdGVtQ29udGV4dC5Qcm92aWRlcj5cclxuXHRcdFx0PC9DYXJkQm9keT4gfVxyXG5cdFx0PC9DYXJkPiApIH1cclxuXHQ8L2Rpdj47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlcGVhdGVyOyIsImltcG9ydCBBY3Rpb25GaWVsZHNNYXAgZnJvbSAnLi9jb21wb25lbnRzL2FjdGlvbi1maWVsZHMtbWFwJztcclxuaW1wb3J0IEFjdGlvbk1vZGFsIGZyb20gJy4vY29tcG9uZW50cy9hY3Rpb24tbW9kYWwnO1xyXG5pbXBvcnQgV3JhcHBlclJlcXVpcmVkQ29udHJvbCBmcm9tICcuL2NvbXBvbmVudHMvd3JhcHBlci1yZXF1aXJlZC1jb250cm9sJztcclxuaW1wb3J0IFJlcXVlc3RCdXR0b24gZnJvbSAnLi9jb21wb25lbnRzL3JlcXVlc3QtYnV0dG9uJztcclxuaW1wb3J0IFZhbGlkYXRlQnV0dG9uIGZyb20gJy4vY29tcG9uZW50cy92YWxpZGF0ZS1idXR0b24nO1xyXG5pbXBvcnQgYWRkQWN0aW9uIGZyb20gJy4vaGVscGVycy9hY3Rpb25zL2FjdGlvbi1tYW5hZ2VyJztcclxuaW1wb3J0IFRvb2xzLCB7XHJcblx0Y2xhc3NuYW1lcyxcclxuXHRldmVudCxcclxuXHRnZXRDb252ZXJ0ZWROYW1lLFxyXG5cdGxpc3RlbixcclxuXHRtYXliZUN5clRvTGF0aW4sXHJcblx0dmVyc2lvbkNvbXBhcmUsXHJcblx0Y29udmVydE9iamVjdFRvT3B0aW9uc0xpc3QsXHJcbn0gZnJvbSAnLi9oZWxwZXJzL3Rvb2xzJztcclxuaW1wb3J0IER5bmFtaWNQcmVzZXQgZnJvbSAnLi9jb21wb25lbnRzL3ByZXNldHMvZHluYW1pYy1wcmVzZXQnO1xyXG5pbXBvcnQgSmV0RmllbGRzTWFwQ29udHJvbCBmcm9tICcuLi9lZGl0b3IvYmxvY2tzL2NvbnRyb2xzL2ZpZWxkcy1tYXAnO1xyXG5pbXBvcnQgRmllbGRXaXRoUHJlc2V0IGZyb20gJy4vY29tcG9uZW50cy9maWVsZHMvZmllbGQtd2l0aC1wcmVzZXQnO1xyXG5pbXBvcnQge1xyXG5cdEdsb2JhbEZpZWxkLFxyXG5cdEF2YWlsYWJsZU1hcEZpZWxkLFxyXG5cdE1hcEZpZWxkLFxyXG59IGZyb20gJy4vY29tcG9uZW50cy9wcmVzZXRzL3ByZXNldC1yZW5kZXInO1xyXG5cclxuaW1wb3J0IHtcclxuXHRnZXRBdmFpbGFibGVGaWVsZHMsXHJcblx0Z2V0QXZhaWxhYmxlRmllbGRzU3RyaW5nLFxyXG5cdGdldEJsb2Nrc0J5TmFtZSxcclxuXHRnZXRGaWVsZHNXaXRob3V0Q3VycmVudCxcclxuXHRnZXRGb3JtRmllbGRzQmxvY2tzLFxyXG5cdGdldEZvcm1GaWVsZHNCeUJsb2NrLFxyXG5cdGdldElubmVyQmxvY2tzLFxyXG5cdGFwcGVuZEZpZWxkLFxyXG59IGZyb20gJy4vaGVscGVycy9ibG9ja3MvYmxvY2tzLWhlbHBlcic7XHJcbmltcG9ydCB7XHJcblx0Z2F0ZXdheUF0dHIsXHJcblx0Z2F0ZXdheUxhYmVsLFxyXG5cdHJlZ2lzdGVyR2F0ZXdheSxcclxuXHRyZW5kZXJHYXRld2F5LFxyXG5cdHJlbmRlckdhdGV3YXlXaXRoUGxhY2Vob2xkZXIsXHJcbn0gZnJvbSAnLi9oZWxwZXJzL2dhdGV3YXlzL2dhdGV3YXktaGVscGVyJztcclxuaW1wb3J0IHtcclxuXHR1c2VBY3Rpb25zLFxyXG5cdHVzZU1ldGFTdGF0ZSxcclxuXHR1c2VTdGF0ZVZhbGlkQ2xhc3NlcyxcclxuXHR1c2VTdGF0ZUxvYWRpbmdDbGFzc2VzLFxyXG5cdHVzZVN1Y2Nlc3NOb3RpY2UsXHJcblx0dXNlUmVxdWVzdEZpZWxkcyxcclxuXHR1c2VTZWxlY3RQb3N0TWV0YSxcclxuXHR3aXRoUmVxdWVzdEZpZWxkcyxcclxuXHR3aXRoU2VsZWN0QWN0aW9uTG9hZGluZyxcclxuXHR3aXRoRGlzcGF0Y2hNZXRhLFxyXG5cdHdpdGhTZWxlY3RNZXRhLFxyXG5cdHdpdGhEaXNwYXRjaE5vdGljZSxcclxuXHR3aXRoU2VsZWN0Rm9ybUZpZWxkcyxcclxuXHR3aXRoU2VsZWN0R2F0ZXdheXMsXHJcblx0d2l0aERpc3BhdGNoR2F0ZXdheXMsXHJcblx0d2l0aFNlbGVjdEFjdGlvbnNCeVR5cGUsXHJcbn0gZnJvbSAnLi9oZWxwZXJzL2hvb2tzL2hvb2tzLWhlbHBlcic7XHJcbmltcG9ydCB7XHJcblx0dXNlUmVxdWVzdEV2ZW50cyxcclxufSBmcm9tICcuL2hlbHBlcnMvaG9va3MvZXZlbnQtdHlwZXMnO1xyXG5pbXBvcnQge1xyXG5cdHVzZUJsb2NrQ29uZGl0aW9ucyxcclxufSBmcm9tICcuL2hlbHBlcnMvaG9va3MvYmxvY2stY29uZGl0aW9ucyc7XHJcbmltcG9ydCB7XHJcblx0dXNlVW5pcUtleSxcclxufSBmcm9tICcuL2hlbHBlcnMvaG9va3MvYmxvY2tzJztcclxuaW1wb3J0IEZpZWxkV3JhcHBlciBmcm9tICcuL2NvbXBvbmVudHMvZmllbGRzL2ZpZWxkLXdyYXBwZXInO1xyXG5pbXBvcnQgTWFjcm9zSW5zZXJ0ZXIgZnJvbSAnLi9jb21wb25lbnRzL2ZpZWxkcy9tYWNyb3MtaW5zZXJ0ZXInO1xyXG5pbXBvcnQgUmVwZWF0ZXJXaXRoU3RhdGUgZnJvbSAnLi9jb21wb25lbnRzL2ZpZWxkcy9yZXBlYXRlci13aXRoLXN0YXRlJztcclxuaW1wb3J0IHdpdGhQcmVzZXQgZnJvbSAnLi9jb21wb25lbnRzL3ByZXNldHMvcHJlc2V0LWVkaXRvcic7XHJcbmltcG9ydCB7XHJcblx0QWR2YW5jZWRGaWVsZHMsXHJcblx0R2VuZXJhbEZpZWxkcyxcclxuXHRUb29sQmFyRmllbGRzLFxyXG5cdEZpZWxkQ29udHJvbCxcclxufSBmcm9tICcuL2NvbXBvbmVudHMvZmllbGRzL2ZpZWxkLWNvbnRyb2wnO1xyXG5pbXBvcnQgUGxhY2Vob2xkZXJNZXNzYWdlIGZyb20gJy4vY29tcG9uZW50cy9hY3Rpb25zL3BsYWNlaG9sZGVyLW1lc3NhZ2UnO1xyXG5pbXBvcnQgQWN0aW9uTWVzc2FnZXMgZnJvbSAnLi9jb21wb25lbnRzL2FjdGlvbnMvYWN0aW9uLW1lc3NhZ2VzJztcclxuaW1wb3J0IEhvcml6b250YWxMaW5lIGZyb20gJy4vY29tcG9uZW50cy9ob3Jpem9udGFsLWxpbmUnO1xyXG5pbXBvcnQgUmVxdWVzdExvYWRpbmdCdXR0b24gZnJvbSAnLi9jb21wb25lbnRzL3JlcXVlc3QtbG9hZGluZy1idXR0b24nO1xyXG5pbXBvcnQge1xyXG5cdGFjdGlvbkJ5VHlwZUxpc3QsXHJcblx0Y29udmVydExpc3RUb0ZpZWxkc01hcCxcclxuXHRmcm9tTG9jYWxpemVIZWxwZXIsXHJcblx0Z2V0QWN0aW9uU2V0dGluZ3MsIHByZXBhcmVBY3Rpb25zTGlzdEJ5VHlwZSxcclxufSBmcm9tICcuL2hlbHBlcnMvYWN0aW9ucy9hY3Rpb24taGVscGVyJztcclxuaW1wb3J0IGdhdGV3YXlBY3Rpb25BdHRyaWJ1dGVzIGZyb20gJy4vaGVscGVycy9nYXRld2F5cy9nYXRld2F5LWFjdGlvbi1hdHRydWJpdGVzJztcclxuaW1wb3J0IHsgZ2xvYmFsVGFiIH0gZnJvbSAnLi9oZWxwZXJzL3NldHRpbmdzL2hlbHBlcic7XHJcbmltcG9ydCBGaWVsZFNldHRpbmdzV3JhcHBlciBmcm9tICcuL2NvbXBvbmVudHMvZmllbGRzL2ZpZWxkLXNldHRpbmdzLXdyYXBwZXInO1xyXG5pbXBvcnQgR3JvdXBlZFNlbGVjdENvbnRyb2wgZnJvbSAnLi9jb21wb25lbnRzL2dyb3VwZWQtc2VsZWN0LWNvbnRyb2wnO1xyXG5pbXBvcnQge1xyXG5cdGdldEJsb2NrQ29udHJvbHMsXHJcbn0gZnJvbSAnLi9jb21wb25lbnRzL2ZpZWxkcy9jb250cm9scyc7XHJcbmltcG9ydCBCYXNlSGVscCBmcm9tICcuL2NvbXBvbmVudHMvY29udHJvbHMvYmFzZS1oZWxwJztcclxuaW1wb3J0IFZhbGlkYXRlQnV0dG9uV2l0aFN0b3JlIGZyb20gJy4vY29tcG9uZW50cy92YWxpZGF0ZS1idXR0b24td2l0aC1zdG9yZSc7XHJcbmltcG9ydCBHYXRld2F5RmV0Y2hCdXR0b24gZnJvbSAnLi9jb21wb25lbnRzL2dhdGV3YXktZmV0Y2gtYnV0dG9uJztcclxuaW1wb3J0ICcuL3N0b3Jlcy9tYW5hZ2VyJztcclxuaW1wb3J0IEFjdGlvbk1vZGFsQ29udGV4dCBmcm9tICcuL2NvbnRleHQvYWN0aW9uLm1vZGFsJztcclxuaW1wb3J0IFNhZmVEZWxldGVDb250ZXh0IGZyb20gJy4vY29udGV4dC9zYWZlLmRlbGV0ZSc7XHJcbmltcG9ydCBSZXBlYXRlckl0ZW1Db250ZXh0IGZyb20gJy4vY29udGV4dC9yZXBlYXRlci5pdGVtJztcclxuaW1wb3J0IEFjdGlvbkxpc3RJdGVtQ29udGV4dCBmcm9tICcuL2NvbnRleHQvYWN0aW9uLmxpc3QuaXRlbSc7XHJcbmltcG9ydCBTYWZlRGVsZXRlVG9nZ2xlIGZyb20gJy4vY29tcG9uZW50cy9maWVsZHMvc2FmZS5kZWxldGUudG9nZ2xlJztcclxuaW1wb3J0IFJlcGVhdGVyQWRkTmV3IGZyb20gJy4vY29tcG9uZW50cy9maWVsZHMvcmVwZWF0ZXIuYWRkLm5ldyc7XHJcbmltcG9ydCBSZXBlYXRlciBmcm9tICcuL2NvbXBvbmVudHMvZmllbGRzL3JlcGVhdGVyJztcclxuXHJcbi8vIEpGQkNvbXBvbmVudHNcclxud2luZG93LkpldEZCQ29tcG9uZW50cyA9IHtcclxuXHRBY3Rpb25GaWVsZHNNYXAsXHJcblx0QWN0aW9uTW9kYWwsXHJcblx0QWN0aW9uTW9kYWxDb250ZXh0LFxyXG5cdFNhZmVEZWxldGVDb250ZXh0LFxyXG5cdFJlcGVhdGVySXRlbUNvbnRleHQsXHJcblx0QWN0aW9uTGlzdEl0ZW1Db250ZXh0LFxyXG5cdFNhZmVEZWxldGVUb2dnbGUsXHJcblx0UmVwZWF0ZXJBZGROZXcsXHJcblx0UmVwZWF0ZXIsXHJcblx0UmVxdWVzdEJ1dHRvbixcclxuXHRWYWxpZGF0ZUJ1dHRvbixcclxuXHRSZXF1ZXN0TG9hZGluZ0J1dHRvbixcclxuXHRXcmFwcGVyUmVxdWlyZWRDb250cm9sLFxyXG5cdER5bmFtaWNQcmVzZXQsXHJcblx0SmV0RmllbGRzTWFwQ29udHJvbCxcclxuXHRGaWVsZFdpdGhQcmVzZXQsXHJcblx0R2xvYmFsRmllbGQsXHJcblx0QXZhaWxhYmxlTWFwRmllbGQsXHJcblx0TWFwRmllbGQsXHJcblx0RmllbGRXcmFwcGVyLFxyXG5cdE1hY3Jvc0luc2VydGVyLFxyXG5cdFJlcGVhdGVyV2l0aFN0YXRlLFxyXG5cdEFkdmFuY2VkRmllbGRzLFxyXG5cdEdlbmVyYWxGaWVsZHMsXHJcblx0VG9vbEJhckZpZWxkcyxcclxuXHRGaWVsZENvbnRyb2wsXHJcblx0UGxhY2Vob2xkZXJNZXNzYWdlLFxyXG5cdEhvcml6b250YWxMaW5lLFxyXG5cdEZpZWxkU2V0dGluZ3NXcmFwcGVyLFxyXG5cdEFjdGlvbk1lc3NhZ2VzLFxyXG5cdEdyb3VwZWRTZWxlY3RDb250cm9sLFxyXG5cdEJhc2VIZWxwLFxyXG5cdFZhbGlkYXRlQnV0dG9uV2l0aFN0b3JlLFxyXG5cdEdhdGV3YXlGZXRjaEJ1dHRvbixcclxufTtcclxuXHJcbi8vIEpGQkZ1bmN0aW9uc1xyXG53aW5kb3cuSmV0RkJBY3Rpb25zID0ge1xyXG5cdGFkZEFjdGlvbixcclxuXHR3aXRoUHJlc2V0LFxyXG5cdGdldEZvcm1GaWVsZHNCeUJsb2NrLFxyXG5cdGdldElubmVyQmxvY2tzLFxyXG5cdGdldEF2YWlsYWJsZUZpZWxkc1N0cmluZyxcclxuXHRnZXRBdmFpbGFibGVGaWVsZHMsXHJcblx0Z2V0Rm9ybUZpZWxkc0Jsb2NrcyxcclxuXHRnZXRGaWVsZHNXaXRob3V0Q3VycmVudCxcclxuXHRnYXRld2F5QXR0cixcclxuXHRnYXRld2F5TGFiZWwsXHJcblx0cmVnaXN0ZXJHYXRld2F5LFxyXG5cdFRvb2xzLFxyXG5cdGV2ZW50LFxyXG5cdGxpc3RlbixcclxuXHRhY3Rpb25CeVR5cGVMaXN0LFxyXG5cdGdldEFjdGlvblNldHRpbmdzLFxyXG5cdGZyb21Mb2NhbGl6ZUhlbHBlcixcclxuXHRyZW5kZXJHYXRld2F5LFxyXG5cdHJlbmRlckdhdGV3YXlXaXRoUGxhY2Vob2xkZXIsXHJcblx0Z2F0ZXdheUFjdGlvbkF0dHJpYnV0ZXMsXHJcblx0Z2xvYmFsVGFiLFxyXG5cdHZlcnNpb25Db21wYXJlLFxyXG5cdGNvbnZlcnRMaXN0VG9GaWVsZHNNYXAsXHJcblx0bWF5YmVDeXJUb0xhdGluLFxyXG5cdGdldENvbnZlcnRlZE5hbWUsXHJcblx0Z2V0QmxvY2tDb250cm9scyxcclxuXHRjbGFzc25hbWVzLFxyXG5cdGdldEJsb2Nrc0J5TmFtZSxcclxuXHRjb252ZXJ0T2JqZWN0VG9PcHRpb25zTGlzdCxcclxuXHRwcmVwYXJlQWN0aW9uc0xpc3RCeVR5cGUsXHJcblx0YXBwZW5kRmllbGQsXHJcbn07XHJcblxyXG4vLyBKRkJIb29rc1xyXG53aW5kb3cuSmV0RkJIb29rcyA9IHtcclxuXHR1c2VBY3Rpb25zLFxyXG5cdHVzZU1ldGFTdGF0ZSxcclxuXHR1c2VTZWxlY3RQb3N0TWV0YSxcclxuXHR1c2VTdGF0ZVZhbGlkQ2xhc3NlcyxcclxuXHR1c2VTdGF0ZUxvYWRpbmdDbGFzc2VzLFxyXG5cdHVzZVN1Y2Nlc3NOb3RpY2UsXHJcblx0dXNlUmVxdWVzdEV2ZW50cyxcclxuXHR1c2VCbG9ja0NvbmRpdGlvbnMsXHJcblx0dXNlVW5pcUtleSxcclxuXHR3aXRoUmVxdWVzdEZpZWxkcyxcclxuXHR1c2VSZXF1ZXN0RmllbGRzLFxyXG5cdHdpdGhTZWxlY3RBY3Rpb25Mb2FkaW5nLFxyXG5cdHdpdGhEaXNwYXRjaE1ldGEsXHJcblx0d2l0aFNlbGVjdE1ldGEsXHJcblx0d2l0aERpc3BhdGNoTm90aWNlLFxyXG5cdHdpdGhTZWxlY3RGb3JtRmllbGRzLFxyXG5cdHdpdGhTZWxlY3RHYXRld2F5cyxcclxuXHR3aXRoRGlzcGF0Y2hHYXRld2F5cyxcclxuXHR3aXRoU2VsZWN0QWN0aW9uc0J5VHlwZSxcclxufTtcclxuXHJcbiJdLCJuYW1lcyI6WyJCYXNlQ29udHJvbCIsIndwIiwiY29tcG9uZW50cyIsIkFjdGlvbkZpZWxkc01hcCIsImZpZWxkcyIsImxhYmVsIiwiY2hpbGRyZW4iLCJwbGFpbkhlbHAiLCJjdXN0b21IZWxwIiwiQm9vbGVhbiIsImxlbmd0aCIsIm1hcCIsImluZGV4IiwiZmllbGRJZCIsImZpZWxkRGF0YSIsImNyZWF0ZUNvbnRleHQiLCJlbGVtZW50IiwiYWN0aW9uQ2xpY2siLCJvblJlcXVlc3RDbG9zZSIsIkFjdGlvbk1vZGFsQ29udGV4dCIsIkJ1dHRvbiIsIkJ1dHRvbkdyb3VwIiwiTW9kYWwiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkFjdGlvbk1vZGFsIiwidGl0bGUiLCJjbGFzc05hbWVzIiwib25VcGRhdGVDbGljayIsIm9uQ2FuY2VsQ2xpY2siLCJ1cGRhdGVCdG5MYWJlbCIsInVwZGF0ZUJ0blByb3BzIiwiY2FuY2VsQnRuUHJvcHMiLCJjYW5jZWxCdG5MYWJlbCIsImZpeGVkSGVpZ2h0IiwibW9kYWxDbGFzc2VzIiwic2V0QWN0aW9uQ2xpY2siLCJ1cGRhdGVDbGljayIsImNhbmNlbENsaWNrIiwic3R5bGUiLCJoZWlnaHQiLCJwdXNoIiwiam9pbiIsIm1hcmdpbiIsIlJhd0hUTUwiLCJXcmFwcGVyUmVxdWlyZWRDb250cm9sIiwiZmllbGQiLCJsYWJlbEtleSIsInJlcXVpcmVkS2V5IiwiaGVscEtleSIsIm5hbWUiLCJkYXRhIiwiaGFzT3duUHJvcGVydHkiLCJjb2xvciIsIl9fIiwiaTE4biIsIlJlcXVlc3RCdXR0b24iLCJhamF4QXJncyIsIm9uU3VjY2Vzc1JlcXVlc3QiLCJvbkZhaWxSZXF1ZXN0Iiwib25Mb2FkaW5nIiwiY2xhc3NOYW1lIiwiZGlzYWJsZWQiLCJjdXN0b21SZXF1ZXN0IiwiaXNIaWRkZW4iLCJoYXNGZXRjaGVkIiwiZGVmYXVsdFJlcXVlc3QiLCJqUXVlcnkiLCJhamF4IiwidXJsIiwiYWpheHVybCIsInR5cGUiLCJkb25lIiwicmVzcG9uc2UiLCJzdWNjZXNzIiwiZmFpbCIsInJlcXVlc3QiLCJmcm9tTG9jYWxpemVIZWxwZXIiLCJnZXRBY3Rpb25TZXR0aW5ncyIsImdhdGV3YXlBY3Rpb25BdHRyaWJ1dGVzIiwiYWN0aW9uIiwiZ2F0ZXdheUF0dHJzIiwiYWN0aW9uU2V0dGluZ3MiLCJpZCIsInZhbHVlIiwiYXR0ciIsImxhYmVsV2l0aEF0dHJzIiwidXNlQWN0aW9ucyIsImdldEFjdGlvbnNCeVR5cGUiLCJhY3Rpb25zIiwiZmlsdGVyIiwid2luZG93IiwiSmV0RkJMb2NhbGl6ZUhlbHBlciIsImFjdGlvbkJ5VHlwZUxpc3QiLCJhY3Rpb25UeXBlIiwid2l0aERlc2MiLCJwcmVwYXJlQWN0aW9uc0xpc3RCeVR5cGUiLCJzb3VyY2UiLCJuZXdBY3Rpb24iLCJhY3Rpb25JZCIsImZpbmQiLCJzZXR0aW5ncyIsImNvbnZlcnRMaXN0VG9GaWVsZHNNYXAiLCJzb3VyY2VzIiwiaXRlbSIsImdsb2JhbFRhYiIsInNsdWciLCJlbXB0eSIsImdsb2JhbCIsIkpldEZvcm1FZGl0b3JEYXRhIiwiZ2xvYmFsX3NldHRpbmdzIiwiZ2F0ZXdheUF0dHIiLCJpc0VtcHR5IiwiZ2F0ZXdheXMiLCJnYXRld2F5TGFiZWwiLCJyZWdpc3RlckdhdGV3YXkiLCJjYWxsYmFjayIsImZvcldoYXQiLCJKZXRGQkdhdGV3YXlzTGlzdCIsImlzc2V0UmVuZGVyR2F0ZXdheSIsIndoYXQiLCJyZW5kZXJHYXRld2F5IiwicHJvcHMiLCJHYXRld2F5Q29tcG9uZW50IiwicmVuZGVyR2F0ZXdheVdpdGhQbGFjZWhvbGRlciIsIlBsYWNlaG9sZGVyIiwidXNlU2VsZWN0IiwidXNlRGlzcGF0Y2giLCJhcHBseUZpbHRlcnMiLCJob29rcyIsInVzZU1ldGFTdGF0ZSIsImtleSIsImlmRW1wdHkiLCJtZXRhIiwic2VsZWN0IiwiZ2V0RWRpdGVkUG9zdEF0dHJpYnV0ZSIsImVkaXRQb3N0IiwibWV0YVN0YXRlVmFsdWUiLCJKU09OIiwicGFyc2UiLCJzZXRNZXRhU3RhdGVWYWx1ZSIsImNhbGxhYmxlIiwic3RyaW5naWZ5IiwiaW5pdENsYXNzZXMiLCJ1c2VTdGF0ZVZhbGlkQ2xhc3NlcyIsImluaXRpYWxWYWxpZCIsInZhbGlkQ2xhc3MiLCJpbnZhbGlkQ2xhc3MiLCJpbml0U3RhdGVDbGFzc2VzIiwiY2xhc3NlcyIsInNldENsYXNzZXMiLCJzZXRWYWxpZENsYXNzIiwic2V0SW52YWxpZENsYXNzIiwic2V0TG9hZGluZ0NsYXNzIiwidXNlU3RhdGVMb2FkaW5nQ2xhc3NlcyIsImNsZWFyTG9hZGluZ0NsYXNzIiwidXNlU3VjY2Vzc05vdGljZSIsInRleHQiLCJvcHRpb25zIiwiaGFzQ29waWVkIiwic2V0SGFzQ29waWVkIiwibm90aWNlU3RvcmUiLCJub3RpY2VzIiwic3RvcmUiLCJjcmVhdGVXYXJuaW5nTm90aWNlIiwid2l0aERpc3BhdGNoTm90aWNlIiwiZGlzcGF0Y2giLCJjcmVhdGVOb3RpY2UiLCJzdGF0dXMiLCJnZXRSZXF1ZXN0RmllbGRzIiwicmVxdWVzdEZpZWxkcyIsImN1cnJlbnQiLCJyZXF1ZXN0RmllbGQiLCJmaW5kSW5kZXgiLCJmcm9tIiwiaGVscCIsInVzZVJlcXVlc3RGaWVsZHMiLCJfamZfYWN0aW9ucyIsInNlbGVjdFBvc3RNZXRhIiwic2VsZWN0UGFyc2VkUG9zdE1ldGEiLCJhbGxNZXRhIiwidXNlU2VsZWN0UG9zdE1ldGEiLCJ3aXRoQ3VycmVudEFjdGlvbiIsImN1cnJlbnRBY3Rpb24iLCJnZXRDdXJyZW50QWN0aW9uIiwid2l0aFJlcXVlc3RGaWVsZHMiLCJzcGxpY2UiLCJ3aXRoU2VsZWN0QWN0aW9uTG9hZGluZyIsImxvYWRpbmdTdGF0ZSIsImdldEN1cnJlbnRMb2FkaW5nIiwid2l0aERpc3BhdGNoQWN0aW9uTG9hZGluZyIsInNldExvYWRpbmciLCJzZXRSZXN1bHRTdWNjZXNzIiwic2V0TG9hZGluZ1Jlc3VsdCIsInNldFJlc3VsdEZhaWwiLCJ3aXRoRGlzcGF0Y2hNZXRhIiwibWV0YVNsdWciLCJjYWxsYmFja05hbWUiLCJvd25Qcm9wcyIsImNoYW5nZSIsIm5ld1N0YXRlIiwid2l0aFNlbGVjdE1ldGEiLCJ3aXRoU2VsZWN0R2F0ZXdheXMiLCJnYXRld2F5UmVxdWVzdElkIiwiZ2V0Q3VycmVudFJlcXVlc3RJZCIsImdhdGV3YXlTcGVjaWZpYyIsImdldEdhdGV3YXlTcGVjaWZpYyIsInNjZW5hcmlvIiwiZ2V0U2NlbmFyaW8iLCJDVVJSRU5UX0dBVEVXQVkiLCJnZXRHYXRld2F5SWQiLCJDVVJSRU5UX1NDRU5BUklPIiwidXNlX2dsb2JhbCIsImN1cnJlbnRUYWIiLCJnZXRTcGVjaWZpY09yR2xvYmFsIiwiY2FsbGFibGVHYXRld2F5IiwiYWRkaXRpb25hbFNvdXJjZUdhdGV3YXkiLCJsb2FkaW5nR2F0ZXdheSIsImdldExvYWRpbmciLCJnbG9iYWxHYXRld2F5TGFiZWwiLCJzcGVjaWZpY0dhdGV3YXlMYWJlbCIsImN1c3RvbUdhdGV3YXlMYWJlbCIsInNjZW5hcmlvTGFiZWwiLCJnYXRld2F5R2VuZXJhbCIsImdldEdhdGV3YXkiLCJnYXRld2F5UmVxdWVzdCIsImdldEN1cnJlbnRSZXF1ZXN0Iiwic2NlbmFyaW9Tb3VyY2UiLCJjdXJyZW50U2NlbmFyaW8iLCJnYXRld2F5U2NlbmFyaW8iLCJ3aXRoRGlzcGF0Y2hHYXRld2F5cyIsInNldEdhdGV3YXlSZXF1ZXN0Iiwic2V0UmVxdWVzdCIsInNldEdhdGV3YXlTY2VuYXJpbyIsInNldFNjZW5hcmlvIiwic2V0Q3VycmVudFNjZW5hcmlvIiwic2V0R2F0ZXdheSIsInNldEdhdGV3YXlJbm5lciIsInNldEdhdGV3YXlTcGVjaWZpYyIsImNsZWFyR2F0ZXdheSIsImNsZWFyU2NlbmFyaW8iLCJnZXRGb3JtRmllbGRzIiwiYmxvY2tQYXJzZXJGdW5jIiwiYmxvY2tzIiwiYmxvY2siLCJpbm5lckJsb2NrcyIsIndpdGhTZWxlY3RGb3JtRmllbGRzIiwiZXhjbHVkZSIsInBsYWNlaG9sZGVyIiwic3VwcHJlc3NGaWx0ZXIiLCJmb3JtRmllbGRzIiwic2tpcEZpZWxkcyIsImluY2x1ZGVzIiwiYXR0cmlidXRlcyIsImJsb2NrTmFtZSIsImdldEJsb2NrcyIsIndpdGhTZWxlY3RBY3Rpb25zQnlUeXBlIiwiVmFsaWRhdGVCdXR0b24iLCJvblZhbGlkIiwib25JbnZhbGlkIiwic2V0VmFsaWQiLCJzZXRJbnZhbGlkIiwiYWRkQWN0aW9uIiwiYWN0aW9uSW5zdGFuY2UiLCJhZGRDYWxsYmFjayIsInNlbXZlckd0IiwicmVxdWlyZSIsInNlbXZlckx0Iiwic2VtdmVyR3RlIiwic2VtdmVyTHRlIiwiVG9vbHMiLCJvYmplY3QiLCJPYmplY3QiLCJrZXlzIiwiZXZlbnQiLCJpbml0aWFsaXplQ2FsbGJhY2tzRXZlbnQiLCJFdmVudCIsImRvY3VtZW50IiwiZGlzcGF0Y2hFdmVudCIsImxpc3RlbiIsImZ1bmMiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0U2VtVmVyRnVuYyIsIm9wZXJhdG9yIiwidmVyc2lvbkNvbXBhcmUiLCJ2ZXJzaW9uMSIsInZlcnNpb24yIiwidGUiLCJjb252ZXJ0U3ltYm9scyIsImNoZWNrQ3lyUmVnZXgiLCJjeXJSZWdleCIsImNoYXJzTWFwIiwibWF5YmVDeXJUb0xhdGluIiwic3RyIiwidGVzdCIsInJlcGxhY2UiLCJtYXRjaCIsInVuZGVmaW5lZCIsImdldENvbnZlcnRlZE5hbWUiLCJ2YWx1ZVRvQ2hhbmdlIiwicmVnZXgiLCJ0b0xvd2VyQ2FzZSIsIm5vcm1hbGl6ZSIsInN1YnN0ciIsInNsaWNlIiwiY2xhc3NuYW1lcyIsInJlc3VsdCIsInBhcnNlVmFsdWVzIiwiZm9yRWFjaCIsIml0ZW1DbGFzcyIsIkFycmF5IiwiaXNBcnJheSIsInRyaW0iLCJpdGVtQ2xhc3NLZXkiLCJhZGRpdGlvbmFsIiwiY29udmVydE9iamVjdFRvT3B0aW9uc0xpc3QiLCJlbnRyaWVzIiwidXNlUGxhY2Vob2xkZXIiLCJ3aXRoUHJlc2V0IiwiV3JhcHBlZENvbXBvbmVudCIsIkpldEZvcm1QcmVzZXRFZGl0b3IiLCJwYXJzZVZhbHVlIiwidmFsIiwiRXJyb3IiLCJleGNlcHRpb24iLCJqZXRfcHJlc2V0IiwiaXNWaXNpYmxlIiwiY3VycmVudFN0YXRlIiwicG9zaXRpb24iLCJpc0dsb2JhbFZpc2libGUiLCJjb25kaXRpb24iLCJjdXN0b21fY29uZGl0aW9uIiwicG9zdF9mcm9tIiwidXNlcl9mcm9tIiwiaXNDdXJyZW50RmllbGRWaXNpYmxlIiwicGFyZW50X2NvbmRpdGlvbiIsImlzTWFwRmllbGRWaXNpYmxlIiwiZmllbGRzX21hcCIsImV4Y2x1ZGVPcHRpb25zIiwic2VsZWN0T3B0aW9ucyIsIm9wdGlvbiIsImV4Y2x1ZGVTb3VyY2VzIiwibG9kYXNoIiwid2l0aEluc3RhbmNlSWQiLCJjb21wb3NlIiwiR3JvdXBlZFNlbGVjdENvbnRyb2wiLCJpbnN0YW5jZUlkIiwibXVsdGlwbGUiLCJvbkNoYW5nZSIsImhpZGVMYWJlbEZyb21WaXNpb24iLCJvbkNoYW5nZVZhbHVlIiwidGFyZ2V0Iiwib3B0R3JvdXAiLCJncm91cEluZGV4IiwidmFsdWVzIiwiVGV4dENvbnRyb2wiLCJTZWxlY3RDb250cm9sIiwiQ3VzdG9tU2VsZWN0Q29udHJvbCIsIkNhcmQiLCJDYXJkQm9keSIsIkNhcmRIZWFkZXIiLCJHbG9iYWxGaWVsZCIsIm5ld1ZhbCIsIkF2YWlsYWJsZU1hcEZpZWxkIiwiZmllbGRzTWFwIiwiY3VycmVudFZhbCIsIkF2YWlsYWJsZUZpZWxkV3JhcHBlciIsImZJbmRleCIsIm1hcmdpbkJvdHRvbSIsIkF2YWlsYWJsZUZpZWxkV3JhcHBlckZ1bmMiLCJwcmVzZXRDb25maWciLCJtYXBfZmllbGRzIiwidW5pcUtleSIsInNlbGVjdGVkSXRlbSIsIk1hcEZpZWxkIiwiRHluYW1pY1ByZXNldCIsImlzU2F2ZUFjdGlvbiIsIm9uU2F2ZVByZXNldCIsIm9uVW5Nb3VudCIsInN0YXRlVmFsdWUiLCJzZXRWYWx1ZSIsIm5ld1ZhbHVlIiwicHJldiIsImdsb2JhbF9maWVsZHMiLCJKZXRGaWVsZHNNYXBDb250cm9sIiwiZmllbGRUeXBlcyIsInRheG9ub21pZXNMaXN0IiwibWV0YVByb3AiLCJ0ZXJtc1Byb3AiLCJpbml0IiwiYmluZEZ1bmN0aW9ucyIsInN0YXRlIiwiZ2V0RmllbGRUeXBlIiwiZmllbGRWYWx1ZSIsIm9uQ2hhbmdlVHlwZSIsImJpbmQiLCJwcmVwYXJlZFRheGVzIiwidGF4UHJlZml4IiwiaSIsImZpZWxkVHlwZSIsImZpZWxkTmFtZSIsInNldFN0YXRlIiwiaXNUZXJtT3JNZXRhIiwid2lkdGgiLCJDb21wb25lbnQiLCJQYXRoIiwiU1ZHIiwiRmllbGRXaXRoUHJlc2V0IiwiTW9kYWxFZGl0b3IiLCJ0cmlnZ2VyQ2xhc3NlcyIsImJhc2VDb250cm9sUHJvcHMiLCJtb2RhbFN0YXRlIiwic2V0TW9kYWxTdGF0ZSIsImNoYW5nZU1vZGFsU3RhdGUiLCJtb2RhbFByb3BzIiwiYWRkRmlsdGVyIiwiYmxvY2tzU3RvcmUiLCJsb29wQmxvY2tzIiwiZ2V0QmxvY2siLCJjbGllbnRJZCIsImdldFRyZWUiLCJfX3Vuc3RhYmxlR2V0Q2xpZW50SWRzVHJlZSIsImJsb2Nrc1JlY3Vyc2l2ZUl0ZXJhdG9yIiwiZ2V0Rm9ybUZpZWxkc0Jsb2NrcyIsImNvbnRleHQiLCJnZXRGaWVsZHNXaXRob3V0Q3VycmVudCIsImdldFNlbGVjdGVkQmxvY2siLCJnZXRBdmFpbGFibGVGaWVsZHMiLCJnZXRBdmFpbGFibGVGaWVsZHNTdHJpbmciLCJmaWVsZHNTdHJpbmciLCJnZXRJbm5lckJsb2NrcyIsImdldEZvcm1GaWVsZHNCeUJsb2NrIiwiYmxvY2tFeGNsdWRlIiwiZ2V0QmxvY2tzQnlOYW1lIiwiYmxvY2tOYW1lcyIsImFwcGVuZEZpZWxkIiwiZmllbGROYW1lcyIsInVzZVJlcXVlc3RFdmVudHMiLCJsaXN0IiwidXNlRGVmYXVsdEV2ZW50cyIsInVzZUV2ZW50c0Zyb21HYXRld2F5cyIsInVzZUV2ZW50c0Zyb21BY3Rpb25zIiwiZmlsdGVyTGlzdCIsImV2ZW50c09iamVjdHMiLCJnZXRBbHdheXNUeXBlcyIsImV2ZW50cyIsIlNldCIsImdhdGV3YXkiLCJnZXRHYXRld2F5VHlwZXMiLCJjb3JyZWN0R2F0ZXdheSIsImNvcnJlY3RTY2VuYXJpbyIsInByb3ZpZGVFdmVudHMiLCJ1c2VCbG9ja1Byb3BzIiwiYmxvY2tFZGl0b3IiLCJ1c2VCbG9ja0NvbmRpdGlvbnMiLCJibG9ja1Byb3BzIiwiZ2V0T3BlcmF0b3JzIiwiZ2V0RnVuY3Rpb25zIiwib3BlcmF0b3JzIiwiZnVuY3Rpb25zIiwiZmlsdGVyZWRGdW5jdGlvbnMiLCJnZXRGaWx0ZXJlZEZ1bmN0aW9ucyIsInVzZVVuaXFLZXkiLCJ1c2VCbG9ja0F0dHJpYnV0ZXMiLCJnZXRTZWxlY3RlZEJsb2NrQ2xpZW50SWQiLCJnZXRCbG9ja0F0dHJpYnV0ZXMiLCJ1cGRhdGVCbG9jayIsInVwZGF0ZUF0dHJpYnV0ZXMiLCJ3aXRoU2VsZWN0IiwiUmljaFRleHQiLCJSaWNoRGVzY3JpcHRpb24iLCJjb250ZW50Iiwid2hpdGVTcGFjZSIsInBhZGRpbmciLCJGaWVsZFdyYXBwZXIiLCJlZGl0UHJvcHMiLCJ3cmFwQ2xhc3NlcyIsInZhbHVlSWZFbXB0eUxhYmVsIiwic2V0QXR0cmlidXRlcyIsImNoaWxkcmVuUG9zaXRpb24iLCJfamZfYXJncyIsInNldER5bmFtaWNOYW1lIiwicmVuZGVyTGFiZWwiLCJuZXdMYWJlbCIsInJlcXVpcmVkIiwicmVxdWlyZWRfbWFyayIsInJlbmRlckRlc2NyaXB0aW9uIiwiZGVzYyIsIm1hcmdpblRvcCIsImZpZWxkc19sYXlvdXQiLCJQb3BvdmVyIiwiUGFuZWxCb2R5IiwiTWFjcm9zSW5zZXJ0ZXIiLCJvbkZpZWxkQ2xpY2siLCJjdXN0b21NYWNyb3MiLCJ6SW5kZXgiLCJwb3BvdmVyUHJvcHMiLCJzaG93UG9wb3ZlciIsInNldFBvcG92ZXJTdGF0ZSIsIm1hY3JvcyIsIlRvZ2dsZUNvbnRyb2wiLCJGbGV4IiwiRmxleEl0ZW0iLCJSZXBlYXRlcldpdGhTdGF0ZSIsIkl0ZW1IZWFkaW5nIiwicmVwZWF0ZXJDbGFzc2VzIiwicmVwZWF0ZXJJdGVtQ2xhc3NlcyIsIm5ld0l0ZW0iLCJhZGROZXdCdXR0b25MYWJlbCIsIml0ZW1zIiwib25TYXZlSXRlbXMiLCJvbkFkZE5ld0l0ZW0iLCJvblJlbW92ZUl0ZW0iLCJoZWxwU291cmNlIiwiaGVscFZpc2libGUiLCJhZGRpdGlvbmFsQ29udHJvbHMiLCJpdGVtQ2xhc3NOYW1lcyIsInBhcnNlZEl0ZW1zIiwiX192aXNpYmxlIiwiaXRlbXNEYXRhIiwic2V0SXRlbXNEYXRhIiwiaXNTYWZlRGVsZXRpbmciLCJzZXRTYWZlRGVsZXRpbmciLCJjaGFuZ2VDdXJyZW50SXRlbSIsInZhbHVlVG9TZXQiLCJwcmV2Q2xvbmUiLCJvblNhdmVEZWxldGluZyIsImNvbmZpcm0iLCJyZW1vdmVPcHRpb24iLCJhZGROZXdJdGVtIiwiY2xvbmVJdGVtIiwiYmVmb3JlIiwiYWZ0ZXIiLCJtb3ZlUmVwZWF0ZXJJdGVtIiwib2xkSW5kZXgiLCJuZXdJbmRleCIsIm1vdmVVcCIsIm1vdmVEb3duIiwiaXNEaXNhYmxlZEVuZCIsInRvZ2dsZVZpc2libGUiLCJpdGVtc0RhdGFLZXkiLCJpdGVtS2V5Iiwic3RhcnRzV2l0aCIsImdldFJlcGVhdGVySXRlbUlkIiwiaXNWaXNpYmxlSGVscCIsImZsZXgiLCJjdXJyZW50SXRlbSIsImN1cnJlbnRJbmRleCIsIkNvbnRyb2xzU2V0dGluZ3MiLCJhdHRycyIsImdldEJsb2NrQ29udHJvbHMiLCJjb250cm9scyIsImVkaXRvciIsIkJsb2NrQ29udHJvbHMiLCJUb29sYmFyR3JvdXAiLCJfX2V4cGVyaW1lbnRhbE51bWJlckNvbnRyb2wiLCJDbGlwYm9hcmRCdXR0b24iLCJTbmFja2JhciIsIk51bWJlckNvbnRyb2wiLCJmaWx0ZXJGaWVsZENvbnRyb2xzIiwiYXR0cnNTZXR0aW5ncyIsImF0dHJIZWxwIiwiY3VycmVudENvbnRyb2wiLCJpc1ZhbGlkQ29uZGl0aW9uIiwib2JqZWN0Tm90TWF0Y2giLCJhdHRyVG9Db21wYXJlIiwidmFsdWVDb21wYXJlIiwiYXR0ck5hbWUiLCJpc1JlZ2lzdGVyQXR0cmlidXRlIiwidmFsaWRDb25kaXRpb24iLCJzaG93IiwiRmllbGRDb250cm9sIiwiZmllbGRDb250cm9scyIsImF1dG9Db21wbGV0ZUxhYmVsIiwiTnVtYmVyIiwiR2VuZXJhbEZpZWxkcyIsImdlbmVyYWwiLCJBZHZhbmNlZEZpZWxkcyIsImFkdmFuY2VkIiwiVG9vbEJhckZpZWxkcyIsImRpc3BsYXlOYW1lIiwiZGlzcGxheU5vdGljZSIsIlBsYWNlaG9sZGVyTWVzc2FnZSIsInByb3BTdHlsZSIsImZvbnRTaXplIiwidGV4dEFsaWduIiwiYmFja2dyb3VuZENvbG9yIiwiQWN0aW9uTWVzc2FnZXMiLCJnZXRNYXBGaWVsZCIsInNldE1hcEZpZWxkIiwibWVzc2FnZXMiLCJvbkNoYW5nZVNldHRpbmciLCJvbGRNZXNzYWdlcyIsIl9fbWVzc2FnZXMiLCJzZXRNZXNzYWdlIiwibmFtZUZpZWxkIiwiZ2V0TWVzc2FnZSIsIkhvcml6b250YWxMaW5lIiwiUmVxdWVzdExvYWRpbmdCdXR0b24iLCJGaWVsZFNldHRpbmdzV3JhcHBlciIsIkJhc2VIZWxwIiwiZm9udFN0eWxlIiwid2l0aERpc3BhdGNoIiwiRmV0Y2hBamF4QnV0dG9uIiwiaW5pdGlhbExhYmVsIiwiZ2V0TGFiZWwiLCJsb2FkaW5nIiwiYnV0dG9uQ2xhc3NOYW1lIiwiVmFsaWRhdGVCdXR0b25XaXRoU3RvcmUiLCJhcGlGZXRjaCIsIkZldGNoQXBpQnV0dG9uIiwiYXBpQXJncyIsIm9uU3VjY2VzcyIsIm9uRmFpbCIsInRoZW4iLCJjYXRjaCIsImVycm9yIiwiR2F0ZXdheUZldGNoQnV0dG9uIiwic2V0Q3VycmVudEFjdGlvbiIsInVwZGF0ZUN1cnJlbnRTZXR0aW5ncyIsInVwZGF0ZUN1cnJlbnRDb25kaXRpb25zIiwic2V0TWV0YSIsImNsZWFyQ3VycmVudCIsIkRFRkFVTFRfTE9BRElOR19TVEFURSIsInNlbGYiLCJnZXRMb2FkaW5nSW5kZXgiLCJhY3Rpb25JbmRleCIsImdldENhbGxiYWNrIiwiY2FsbGJhY2tzIiwiaXNTZXR0aW5nc01vZGFsIiwibW9kYWxUeXBlIiwiaXNDb25kaXRpb25hbE1vZGFsIiwiZ2V0TWV0YUluZGV4IiwiZ2V0Q3VycmVudENhbGxiYWNrIiwiZ2V0Q3VycmVudFNldHRpbmdzIiwiZGFuZ2VyR2V0QWxsTG9hZGluZyIsImdldExvYWRpbmdJdGVtIiwid2l0aEFjdGlvbkxvY2FsaXplU2NyaXB0IiwiQWN0aW9uSW5zdGFuY2UiLCJsb2NhbGl6ZWREYXRhIiwib25DaGFuZ2VTZXR0aW5nT2JqIiwiYWRkaXRpb25hbFByb3BzIiwicmVzdWx0UHJvcHMiLCJjb25zdGFudHMiLCJzZWxlY3RvcnMiLCJ1cGRhdGUiLCJ1cGRhdGVTZXR0aW5ncyIsImNvbmRpdGlvbnMiLCJGdW5jdGlvbnMiLCJkaXNwYXRjaGVycyIsIkRFRkFVTFRfU1RBVEUiLCJyZWR1Y2VyIiwiY3JlYXRlUmVkdXhTdG9yZSIsInJlZ2lzdGVyRXZlbnRUeXBlIiwiaGFyZFNldEdhdGV3YXkiLCJoYXJkU2V0R2F0ZXdheVNwZWNpZmljIiwiY3VycmVudFJlcXVlc3QiLCJnZXRTY2VuYXJpb0lkIiwiY3VycmVudEdhdGV3YXkiLCJnZXRFdmVudFR5cGVzIiwiZXZlbnRUeXBlcyIsInJlZ2lzdGVyIiwibG9ja0FjdGlvbnMiLCJnZXRUeXBlSW5kZXgiLCJ0eXBlcyIsImdldFR5cGVzIiwiZ2V0VHlwZSIsImdldFVuc3VwcG9ydGVkIiwibG9ja2VkQWN0aW9ucyIsInVuc3VwcG9ydGVkIiwiZ2V0U3VwcG9ydGVkIiwic3VwcG9ydGVkIiwiaXNWYWxpZCIsImV2ZW50U2x1ZyIsImV2ZW50TGlzdCIsImdldEhlbHBNYXAiLCJpc3NldEluZGV4IiwiamV0Rm9ybUFjdGlvblR5cGVzIiwiYWN0aW9uU2VsZiIsInVuU3VwIiwiX191bnN1cHBvcnRlZF9ldmVudHMiLCJzdXAiLCJfX3N1cHBvcnRlZF9ldmVudHMiLCJsYWJlbHMiLCJyZWdpc3RlckZ1bmN0aW9uc0ZpbHRlcnMiLCJyZW5kZXJfc3RhdGVzIiwicmVuZGVyU3RhdGVzIiwiZnVuY3Rpb25GaWx0ZXJzIiwic2V0X3ZhbHVlIiwiZ2V0RnVuY3Rpb25GaWx0ZXJzIiwiZ2V0UmVuZGVyU3RhdGVzIiwiZ2V0UmVuZGVyU3RhdGVzTGlzdCIsImJsb2NrQ29uZGl0aW9ucyIsImpldEZvcm1CbG9ja0NvbmRpdGlvbnMiLCJqZXRGb3JtRXZlbnRzIiwiU2FmZURlbGV0ZUNvbnRleHQiLCJTYWZlRGVsZXRlVG9nZ2xlIiwidXNlQ29udGV4dCIsInVzZVJlcGVhdGVyU3RhdGUiLCJSZXBlYXRlckFkZE5ldyIsIm9uU2V0U3RhdGUiLCJSZXBlYXRlckl0ZW1Db250ZXh0IiwiUmVwZWF0ZXIiLCJBY3Rpb25MaXN0SXRlbUNvbnRleHQiLCJKZXRGQkNvbXBvbmVudHMiLCJKZXRGQkFjdGlvbnMiLCJKZXRGQkhvb2tzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8165\n')},6089:()=>{eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getMeta = function getMeta() {\n  var select = wp.data.select;\n  return select('core/editor').getEditedPostAttribute('meta');\n};\n\nvar editMeta = function editMeta(name, objectValue) {\n  var dispatch = wp.data.dispatch;\n\n  var _dispatch = dispatch('core/editor'),\n      editPost = _dispatch.editPost;\n\n  var formBuilderMeta = getMeta();\n  editPost({\n    meta: _objectSpread(_objectSpread({}, formBuilderMeta), {}, _defineProperty({}, name, JSON.stringify(objectValue)))\n  });\n};\n\nvar getActiveActions = function getActiveActions(actions) {\n  var response = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(actions); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        action_id = _Object$entries$_i[0],\n        _Object$entries$_i$1$ = _Object$entries$_i[1].active,\n        active = _Object$entries$_i$1$ === void 0 ? false : _Object$entries$_i$1$;\n\n    if (!active) {\n      continue;\n    }\n\n    response.push(+action_id);\n  }\n\n  return response;\n};\n\nvar getGatewaysActions = function getGatewaysActions() {\n  var formBuilderMeta = getMeta();\n  var gateways = {},\n      actions = [];\n\n  try {\n    gateways = JSON.parse(formBuilderMeta['_jf_gateways']);\n  } catch (error) {\n    return [];\n  }\n\n  if (1 === gateways.last_migrate) {\n    throw 'migrated';\n  }\n\n  try {\n    actions = JSON.parse(formBuilderMeta['_jf_actions']);\n  } catch (error) {\n    return [gateways];\n  }\n\n  return [gateways, actions];\n};\n\nvar migrate = function migrate(gateways, actions) {\n  var _gateways$notificatio, _gateways$notificatio2, _gateways$notificatio3, _gateways$use_success;\n\n  var on_success = getActiveActions((_gateways$notificatio = gateways['notifications_success']) !== null && _gateways$notificatio !== void 0 ? _gateways$notificatio : {});\n  var on_failed = getActiveActions((_gateways$notificatio2 = gateways['notifications_failed']) !== null && _gateways$notificatio2 !== void 0 ? _gateways$notificatio2 : {});\n  var on_before = getActiveActions((_gateways$notificatio3 = gateways['notifications_before']) !== null && _gateways$notificatio3 !== void 0 ? _gateways$notificatio3 : {});\n  var use_redirect = (_gateways$use_success = gateways['use_success_redirect']) !== null && _gateways$use_success !== void 0 ? _gateways$use_success : false;\n  var has_redirect = false;\n\n  if (!on_success.length && !on_failed.length && !on_before.length && !use_redirect) {\n    throw 'nothing_to_migrate';\n  }\n\n  return actions.map(function (action) {\n    var _action$events;\n\n    action.events = (_action$events = action.events) !== null && _action$events !== void 0 ? _action$events : [];\n\n    if (on_success.includes(action.id)) {\n      action.events.push('GATEWAY.SUCCESS');\n    }\n\n    if (on_failed.includes(action.id)) {\n      action.events.push('GATEWAY.FAILED');\n    }\n\n    if (on_before.includes(action.id)) {\n      action.events.push('DEFAULT.PROCESS');\n    }\n\n    if (use_redirect && !has_redirect && 'redirect_to_page' === action.type) {\n      action.events.push('GATEWAY.SUCCESS');\n      has_redirect = true;\n    }\n\n    return action;\n  });\n};\n\nvar runEvent = function runEvent() {\n  var gateways = {},\n      actions = [];\n\n  try {\n    var _getGatewaysActions = getGatewaysActions();\n\n    var _getGatewaysActions2 = _slicedToArray(_getGatewaysActions, 2);\n\n    var _getGatewaysActions2$ = _getGatewaysActions2[0];\n    gateways = _getGatewaysActions2$ === void 0 ? {} : _getGatewaysActions2$;\n    var _getGatewaysActions2$2 = _getGatewaysActions2[1];\n    actions = _getGatewaysActions2$2 === void 0 ? [] : _getGatewaysActions2$2;\n  } catch (error) {\n    return;\n  }\n\n  gateways.last_migrate = 1;\n  editMeta('_jf_gateways', gateways);\n  var withConditions = [];\n\n  try {\n    withConditions.push.apply(withConditions, _toConsumableArray(migrate(gateways, actions)));\n  } catch (error) {\n    return;\n  }\n\n  editMeta('_jf_actions', withConditions);\n};\n\nwp.domReady(function () {\n  return setTimeout(runEvent, 0);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6089\n")},9510:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const debug = __webpack_require__(6830)\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(39)\nconst { re, t } = __webpack_require__(9022)\n\nconst parseOptions = __webpack_require__(8716)\nconst { compareIdentifiers } = __webpack_require__(8822)\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9510\n")},3992:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const SemVer = __webpack_require__(9510)\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk5Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsSUFBbUI7QUFDMUM7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jb21wYXJlLmpzP2M1OWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgY29tcGFyZSA9IChhLCBiLCBsb29zZSkgPT5cbiAgbmV3IFNlbVZlcihhLCBsb29zZSkuY29tcGFyZShuZXcgU2VtVmVyKGIsIGxvb3NlKSlcblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3992\n")},2260:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI2MC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3QuanM/OWZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IGd0ID0gKGEsIGIsIGxvb3NlKSA9PiBjb21wYXJlKGEsIGIsIGxvb3NlKSA+IDBcbm1vZHVsZS5leHBvcnRzID0gZ3RcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2260\n")},6579:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU3OS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3RlLmpzPzJlNzAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBndGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpID49IDBcbm1vZHVsZS5leHBvcnRzID0gZ3RlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6579\n")},290:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkwLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLElBQVc7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9sdC5qcz9hOTg4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgbHQgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDwgMFxubW9kdWxlLmV4cG9ydHMgPSBsdFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///290\n")},5891:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const compare = __webpack_require__(3992)\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5MS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyxJQUFXO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbHRlLmpzP2FhMjIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBsdGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDw9IDBcbm1vZHVsZS5leHBvcnRzID0gbHRlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5891\n")},39:module=>{eval("// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2NvbnN0YW50cy5qcz83NjVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IHRoaXMgaXMgdGhlIHNlbXZlci5vcmcgdmVyc2lvbiBvZiB0aGUgc3BlYyB0aGF0IGl0IGltcGxlbWVudHNcbi8vIE5vdCBuZWNlc3NhcmlseSB0aGUgcGFja2FnZSB2ZXJzaW9uIG9mIHRoaXMgY29kZS5cbmNvbnN0IFNFTVZFUl9TUEVDX1ZFUlNJT04gPSAnMi4wLjAnXG5cbmNvbnN0IE1BWF9MRU5HVEggPSAyNTZcbmNvbnN0IE1BWF9TQUZFX0lOVEVHRVIgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB8fFxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyA5MDA3MTk5MjU0NzQwOTkxXG5cbi8vIE1heCBzYWZlIHNlZ21lbnQgbGVuZ3RoIGZvciBjb2VyY2lvbi5cbmNvbnN0IE1BWF9TQUZFX0NPTVBPTkVOVF9MRU5HVEggPSAxNlxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgU0VNVkVSX1NQRUNfVkVSU0lPTixcbiAgTUFYX0xFTkdUSCxcbiAgTUFYX1NBRkVfSU5URUdFUixcbiAgTUFYX1NBRkVfQ09NUE9ORU5UX0xFTkdUSFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n")},6830:module=>{eval("const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjgzMC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2RlYnVnLmpzPzE4MzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVidWcgPSAoXG4gIHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJlxuICBwcm9jZXNzLmVudiAmJlxuICBwcm9jZXNzLmVudi5OT0RFX0RFQlVHICYmXG4gIC9cXGJzZW12ZXJcXGIvaS50ZXN0KHByb2Nlc3MuZW52Lk5PREVfREVCVUcpXG4pID8gKC4uLmFyZ3MpID0+IGNvbnNvbGUuZXJyb3IoJ1NFTVZFUicsIC4uLmFyZ3MpXG4gIDogKCkgPT4ge31cblxubW9kdWxlLmV4cG9ydHMgPSBkZWJ1Z1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6830\n")},8822:module=>{eval("const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODgyMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9pZGVudGlmaWVycy5qcz9hYjE1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG51bWVyaWMgPSAvXlswLTldKyQvXG5jb25zdCBjb21wYXJlSWRlbnRpZmllcnMgPSAoYSwgYikgPT4ge1xuICBjb25zdCBhbnVtID0gbnVtZXJpYy50ZXN0KGEpXG4gIGNvbnN0IGJudW0gPSBudW1lcmljLnRlc3QoYilcblxuICBpZiAoYW51bSAmJiBibnVtKSB7XG4gICAgYSA9ICthXG4gICAgYiA9ICtiXG4gIH1cblxuICByZXR1cm4gYSA9PT0gYiA/IDBcbiAgICA6IChhbnVtICYmICFibnVtKSA/IC0xXG4gICAgOiAoYm51bSAmJiAhYW51bSkgPyAxXG4gICAgOiBhIDwgYiA/IC0xXG4gICAgOiAxXG59XG5cbmNvbnN0IHJjb21wYXJlSWRlbnRpZmllcnMgPSAoYSwgYikgPT4gY29tcGFyZUlkZW50aWZpZXJzKGIsIGEpXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjb21wYXJlSWRlbnRpZmllcnMsXG4gIHJjb21wYXJlSWRlbnRpZmllcnNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8822\n")},8716:module=>{eval("// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcxNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvcGFyc2Utb3B0aW9ucy5qcz9lYTU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhcnNlIG91dCBqdXN0IHRoZSBvcHRpb25zIHdlIGNhcmUgYWJvdXQgc28gd2UgYWx3YXlzIGdldCBhIGNvbnNpc3RlbnRcbi8vIG9iaiB3aXRoIGtleXMgaW4gYSBjb25zaXN0ZW50IG9yZGVyLlxuY29uc3Qgb3B0cyA9IFsnaW5jbHVkZVByZXJlbGVhc2UnLCAnbG9vc2UnLCAncnRsJ11cbmNvbnN0IHBhcnNlT3B0aW9ucyA9IG9wdGlvbnMgPT5cbiAgIW9wdGlvbnMgPyB7fVxuICA6IHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0JyA/IHsgbG9vc2U6IHRydWUgfVxuICA6IG9wdHMuZmlsdGVyKGsgPT4gb3B0aW9uc1trXSkucmVkdWNlKChvcHRpb25zLCBrKSA9PiB7XG4gICAgb3B0aW9uc1trXSA9IHRydWVcbiAgICByZXR1cm4gb3B0aW9uc1xuICB9LCB7fSlcbm1vZHVsZS5leHBvcnRzID0gcGFyc2VPcHRpb25zXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8716\n")},9022:(module,exports,__webpack_require__)=>{eval("const { MAX_SAFE_COMPONENT_LENGTH } = __webpack_require__(39)\nconst debug = __webpack_require__(6830)\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9022\n")}},__webpack_module_cache__={};function __webpack_require__(e){var F=__webpack_module_cache__[e];if(void 0!==F)return F.exports;var Q=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](Q,Q.exports,__webpack_require__),Q.exports}var __webpack_exports__=__webpack_require__(8165)})();