(()=>{"use strict";var __webpack_modules__={4927:()=>{eval("\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./admin/pages/jfb-payments-single/SinglePayment.vue?vue&type=template&id=263e5547&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"FormBuilderPage\", [_c(\"PostBoxGrid\")], 1)\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./admin/pages/jfb-payments-single/SinglePayment.vue?vue&type=template&id=263e5547&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./admin/pages/jfb-payments-single/SinglePayment.vue?vue&type=script&lang=js&\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\nvar _JetFBComponents = JetFBComponents,\n    PostBoxGrid = _JetFBComponents.PostBoxGrid,\n    FormBuilderPage = _JetFBComponents.FormBuilderPage;\nvar _Vuex = Vuex,\n    mapGetters = _Vuex.mapGetters,\n    mapMutations = _Vuex.mapMutations,\n    mapActions = _Vuex.mapActions;\n/* harmony default export */ const SinglePaymentvue_type_script_lang_js_ = ({\n  name: 'jfb-payments-single',\n  components: {\n    PostBoxGrid: PostBoxGrid,\n    FormBuilderPage: FormBuilderPage\n  },\n  created: function created() {\n    var _this = this;\n\n    jfbEventBus.$on('payment-details-delete', function () {\n      _this['scope-payment-details/actions/defaultDelete']();\n    });\n  },\n  methods: _objectSpread({}, mapActions(['scope-payment-details/actions/defaultDelete']))\n});\n;// CONCATENATED MODULE: ./admin/pages/jfb-payments-single/SinglePayment.vue?vue&type=script&lang=js&\n /* harmony default export */ const jfb_payments_single_SinglePaymentvue_type_script_lang_js_ = (SinglePaymentvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n;// CONCATENATED MODULE: ./admin/pages/jfb-payments-single/SinglePayment.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = normalizeComponent(\n  jfb_payments_single_SinglePaymentvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"admin/pages/jfb-payments-single/SinglePayment.vue\"\n/* harmony default export */ const SinglePayment = (component.exports);\n;// CONCATENATED MODULE: ./admin/pages/jfb-payments-single/index.js\nfunction jfb_payments_single_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction jfb_payments_single_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { jfb_payments_single_ownKeys(Object(source), true).forEach(function (key) { jfb_payments_single_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { jfb_payments_single_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction jfb_payments_single_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar _JetFBStore = JetFBStore,\n    BaseStore = _JetFBStore.BaseStore,\n    SingleMetaBoxesPlugin = _JetFBStore.SingleMetaBoxesPlugin;\nvar renderCurrentPage = window.JetFBActions.renderCurrentPage;\nvar store = new Vuex.Store(jfb_payments_single_objectSpread(jfb_payments_single_objectSpread({}, BaseStore), {}, {\n  plugins: [SingleMetaBoxesPlugin]\n}));\nrenderCurrentPage(SinglePayment, {\n  store: store\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4927\n")}},__webpack_exports__={};__webpack_modules__[4927]()})();