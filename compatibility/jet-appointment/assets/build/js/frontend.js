/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./frontend/jet-appointment.js":
/*!*************************************!*\
  !*** ./frontend/jet-appointment.js ***!
  \*************************************/
/***/ (() => {

eval("const {\n  InputData\n} = JetFormBuilderAbstract;\nconst {\n  ListingAddTemplateWatcher,\n  ListingTemplateClick\n} = JetFormBuilderFunctions;\nconst {\n  addAction,\n  addFilter\n} = JetPlugins.hooks;\nfunction AppointmentInput() {\n  InputData.call(this);\n  this.isSupported = function (node) {\n    return 'appointment' === node.dataset.field;\n  };\n  this.addListeners = function () {\n    const [node] = this.nodes;\n    jQuery(node).on('change', () => {\n      this.value.current = node.value;\n    });\n  };\n  this.onObserve = function () {\n    InputData.prototype.onObserve.call(this);\n    this.callable = null;\n    this.value.sanitize(value => {\n      return ['{}', '[]'].includes(value) ? '' : value;\n    });\n  };\n}\nfunction AppointmentProvider() {\n  InputData.call(this);\n\n  /**\r\n   * Node can be <div> or <select>\r\n   *\r\n   * @param node {Element}\r\n   * @returns {boolean}\r\n   */\n  this.isSupported = function (node) {\n    return node.classList.contains('appointment-provider');\n  };\n  this.setNode = function (node) {\n    InputData.prototype.setNode.call(this, node);\n    this.name = node.dataset?.field || node.name;\n  };\n  this.checkIsRequired = function () {\n    const [node] = this.nodes;\n    const args = JSON.parse(node.dataset.args);\n    return args?.args_str?.includes('required');\n  };\n  this.addListeners = function () {\n    const [node] = this.nodes;\n    node.addEventListener('change', ({\n      target\n    }) => {\n      this.value.current = target.value;\n    });\n    if ('SELECT' === node.nodeName) {\n      node.addEventListener('blur', () => this.reportOnBlur());\n    }\n    this.addListingTemplateListener();\n    this.addServiceListener();\n  };\n  this.addServiceListener = function () {\n    const [node] = this.nodes;\n    const args = JSON.parse(node.dataset.args);\n    if (!args?.service?.field) {\n      return;\n    }\n    const service = this.root.getInput(args.service.field);\n    if (!service) {\n      return;\n    }\n    service.watch(() => {\n      this.silenceSet(null);\n    });\n  };\n  this.addListingTemplateListener = function () {\n    const [node] = this.nodes;\n\n    // has template?\n    if ('DIV' !== node.nodeName) {\n      return;\n    }\n    node.addEventListener('click', ListingTemplateClick);\n    ListingAddTemplateWatcher(this);\n  };\n  this.onObserve = function () {\n    InputData.prototype.onObserve.call(this);\n    this.callable = null;\n  };\n}\nAppointmentInput.prototype = Object.create(InputData.prototype);\nAppointmentProvider.prototype = Object.create(InputData.prototype);\naddAction('jet.fb.observe.before', 'jet-form-builder/appointment-compatibility',\n/**\r\n * @param observable {Observable}\r\n */\nfunction (observable) {\n  const {\n    rootNode\n  } = observable;\n  for (const calendarWrapper of rootNode.querySelectorAll('.jet-apb-calendar-wrapper')) {\n    const input = calendarWrapper.querySelector('input[data-field]');\n    if ('appointment' !== input.dataset.field) {\n      continue;\n    }\n    input.dataset.jfbSync = 1;\n  }\n  for (const provider of rootNode.querySelectorAll('.field-type-appointment-provider .appointment-provider')) {\n    provider.dataset.jfbSync = 1;\n  }\n});\naddFilter('jet.fb.inputs', 'jet-form-builder/appointment-field', function (inputs) {\n  inputs = [AppointmentInput, AppointmentProvider, ...inputs];\n  return inputs;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./frontend/jet-appointment.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./frontend/jet-appointment.js"]();
/******/ 	
/******/ })()
;